"use strict";const fs=require("graceful-fs"),path=require("path"),assert=require("assert"),isWindows="win32"===process.platform;function defaults(r){["unlink","chmod","stat","lstat","rmdir","readdir"].forEach((i=>{r[i]=r[i]||fs[i],r[i+="Sync"]=r[i]||fs[i]})),r.maxBusyTries=r.maxBusyTries||3}function rimraf(r,i,t){let s=0;"function"==typeof i&&(t=i,i={}),assert(r,"rimraf: missing path"),assert.strictEqual(typeof r,"string","rimraf: path should be a string"),assert.strictEqual(typeof t,"function","rimraf: callback function required"),assert(i,"rimraf: invalid options argument provided"),assert.strictEqual(typeof i,"object","rimraf: options should be object"),defaults(i),rimraf_(r,i,(function e(n){if(n){if(("EBUSY"===n.code||"ENOTEMPTY"===n.code||"EPERM"===n.code)&&s<i.maxBusyTries)return s++,setTimeout((()=>rimraf_(r,i,e)),100*s);"ENOENT"===n.code&&(n=null)}t(n)}))}function rimraf_(r,i,t){assert(r),assert(i),assert("function"==typeof t),i.lstat(r,((s,e)=>s&&"ENOENT"===s.code?t(null):s&&"EPERM"===s.code&&isWindows?fixWinEPERM(r,i,s,t):e&&e.isDirectory()?rmdir(r,i,s,t):void i.unlink(r,(s=>{if(s){if("ENOENT"===s.code)return t(null);if("EPERM"===s.code)return isWindows?fixWinEPERM(r,i,s,t):rmdir(r,i,s,t);if("EISDIR"===s.code)return rmdir(r,i,s,t)}return t(s)}))))}function fixWinEPERM(r,i,t,s){assert(r),assert(i),assert("function"==typeof s),i.chmod(r,438,(e=>{e?s("ENOENT"===e.code?null:t):i.stat(r,((e,n)=>{e?s("ENOENT"===e.code?null:t):n.isDirectory()?rmdir(r,i,t,s):i.unlink(r,s)}))}))}function fixWinEPERMSync(r,i,t){let s;assert(r),assert(i);try{i.chmodSync(r,438)}catch(r){if("ENOENT"===r.code)return;throw t}try{s=i.statSync(r)}catch(r){if("ENOENT"===r.code)return;throw t}s.isDirectory()?rmdirSync(r,i,t):i.unlinkSync(r)}function rmdir(r,i,t,s){assert(r),assert(i),assert("function"==typeof s),i.rmdir(r,(e=>{!e||"ENOTEMPTY"!==e.code&&"EEXIST"!==e.code&&"EPERM"!==e.code?e&&"ENOTDIR"===e.code?s(t):s(e):rmkids(r,i,s)}))}function rmkids(r,i,t){assert(r),assert(i),assert("function"==typeof t),i.readdir(r,((s,e)=>{if(s)return t(s);let n,c=e.length;if(0===c)return i.rmdir(r,t);e.forEach((s=>{rimraf(path.join(r,s),i,(s=>{if(!n)return s?t(n=s):void(0==--c&&i.rmdir(r,t))}))}))}))}function rimrafSync(r,i){let t;defaults(i=i||{}),assert(r,"rimraf: missing path"),assert.strictEqual(typeof r,"string","rimraf: path should be a string"),assert(i,"rimraf: missing options"),assert.strictEqual(typeof i,"object","rimraf: options should be object");try{t=i.lstatSync(r)}catch(t){if("ENOENT"===t.code)return;"EPERM"===t.code&&isWindows&&fixWinEPERMSync(r,i,t)}try{t&&t.isDirectory()?rmdirSync(r,i,null):i.unlinkSync(r)}catch(t){if("ENOENT"===t.code)return;if("EPERM"===t.code)return isWindows?fixWinEPERMSync(r,i,t):rmdirSync(r,i,t);if("EISDIR"!==t.code)throw t;rmdirSync(r,i,t)}}function rmdirSync(r,i,t){assert(r),assert(i);try{i.rmdirSync(r)}catch(s){if("ENOTDIR"===s.code)throw t;if("ENOTEMPTY"===s.code||"EEXIST"===s.code||"EPERM"===s.code)rmkidsSync(r,i);else if("ENOENT"!==s.code)throw s}}function rmkidsSync(r,i){if(assert(r),assert(i),i.readdirSync(r).forEach((t=>rimrafSync(path.join(r,t),i))),!isWindows)return i.rmdirSync(r,i);{const t=Date.now();do{try{return i.rmdirSync(r,i)}catch{}}while(Date.now()-t<500)}}module.exports=rimraf,rimraf.sync=rimrafSync;