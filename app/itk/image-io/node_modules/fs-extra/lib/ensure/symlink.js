"use strict";const u=require("universalify").fromCallback,path=require("path"),fs=require("../fs"),_mkdirs=require("../mkdirs"),mkdirs=_mkdirs.mkdirs,mkdirsSync=_mkdirs.mkdirsSync,_symlinkPaths=require("./symlink-paths"),symlinkPaths=_symlinkPaths.symlinkPaths,symlinkPathsSync=_symlinkPaths.symlinkPathsSync,_symlinkType=require("./symlink-type"),symlinkType=_symlinkType.symlinkType,symlinkTypeSync=_symlinkType.symlinkTypeSync,pathExists=require("../path-exists").pathExists,{areIdentical}=require("../util/stat");function createSymlink(s,i,t,n){n="function"==typeof t?t:n,t="function"!=typeof t&&t,fs.lstat(i,((e,y)=>{!e&&y.isSymbolicLink()?Promise.all([fs.stat(s),fs.stat(i)]).then((([e,y])=>{if(areIdentical(e,y))return n(null);_createSymlink(s,i,t,n)})):_createSymlink(s,i,t,n)}))}function _createSymlink(s,i,t,n){symlinkPaths(s,i,((e,y)=>{if(e)return n(e);s=y.toDst,symlinkType(y.toCwd,t,((t,e)=>{if(t)return n(t);const y=path.dirname(i);pathExists(y,((t,r)=>t?n(t):r?fs.symlink(s,i,e,n):void mkdirs(y,(t=>{if(t)return n(t);fs.symlink(s,i,e,n)}))))}))}))}function createSymlinkSync(s,i,t){let n;try{n=fs.lstatSync(i)}catch{}if(n&&n.isSymbolicLink()){const t=fs.statSync(s),n=fs.statSync(i);if(areIdentical(t,n))return}const e=symlinkPathsSync(s,i);s=e.toDst,t=symlinkTypeSync(e.toCwd,t);const y=path.dirname(i);return fs.existsSync(y)||mkdirsSync(y),fs.symlinkSync(s,i,t)}module.exports={createSymlink:u(createSymlink),createSymlinkSync};