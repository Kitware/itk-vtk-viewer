import createWebWorkerPromise from"../core/internal/createWebWorkerPromise.js";import config from"../itkConfig.js";import InterfaceTypes from"../core/InterfaceTypes.js";import getTransferable from"../core/getTransferable.js";async function writeImageArrayBuffer(e,r,t,a="",o=!1){if("boolean"==typeof r)throw new Error("useCompression is now at the last argument position in itk-wasm");let i=e;const{webworkerPromise:s,worker:n}=await createWebWorkerPromise(i);i=n;const f=`./${t}`,p=["0",f,"--memory-io","--quiet"];o&&p.push("--use-compression");const m=[{data:{path:f},type:InterfaceTypes.BinaryFile}],u=[{type:InterfaceTypes.Image,data:r}],c=[];let l=getTransferable(r.data);return null!=l&&c.push(l),l=getTransferable(r.direction),null!=l&&c.push(l),{arrayBuffer:(await s.postMessage({operation:"writeImage",config,mimeType:a,fileName:t,pipelinePath:"WriteImage",args:p,outputs:m,inputs:u},c)).outputs[0].data.data.buffer,webWorker:i}}export default writeImageArrayBuffer;