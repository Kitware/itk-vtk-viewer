import createWebWorkerPromise from"../core/internal/createWebWorkerPromise.js";import InterfaceTypes from"../core/InterfaceTypes.js";import config from"../itkConfig.js";async function readMeshArrayBuffer(e,r,t,a){let o=e;const{webworkerPromise:i,worker:s}=await createWebWorkerPromise(o);o=s;const n=`./${t}`,p=[n,"0","--memory-io","--quiet"],f=[{type:InterfaceTypes.Mesh}],c=[{type:InterfaceTypes.BinaryFile,data:{path:n,data:new Uint8Array(r)}}],m=[r];return{mesh:(await i.postMessage({operation:"readMesh",config,mimeType:a,fileName:t,pipelinePath:"ReadMesh",args:p,outputs:f,inputs:c},m)).outputs[0].data,webWorker:o}}export default readMeshArrayBuffer;