name: Build and Test
on: [push, pull_request]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04, macos-10.15, windows-2019]
        node: [16, 18]
    name: ${{ matrix.os }} and node ${{ matrix.node }}
    steps:
      - uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node }}

      - name: Install dependencies
        run: npm ci

      - name: Build
        run: npm run build

      - name: Setup ipfs
        uses: ibnesayeed/setup-ipfs@master
        with:
          ipfs_version: ^0.14
      - name: Connect to ipfs peers with our data
        shell: bash
        run: |
          export MSYS_NO_PATHCONV=1
          # web3.storage
          ipfs swarm connect /ip4/139.178.69.155/tcp/4001/p2p/12D3KooWR19qPPiZH4khepNjS3CLXiB7AbrbAD4ZcDjN1UjGUNE1
          ipfs swarm connect /ip4/139.178.68.91/tcp/4001/p2p/12D3KooWEDMw7oRqQkdCJbyeqS5mUmWGwTp8JJ2tjCzTkHboF6wK
          ipfs swarm connect /ip4/147.75.33.191/tcp/4001/p2p/12D3KooWPySxxWQjBgX9Jp6uAHQfVmdq8HG1gVvS1fRawHNSrmqW
          ipfs swarm connect /ip4/147.75.32.73/tcp/4001/p2p/12D3KooWNuoVEfVLJvU3jWY2zLYjGUaathsecwT19jhByjnbQvkj
          ipfs swarm connect /ip4/145.40.89.195/tcp/4001/p2p/12D3KooWSnniGsyAF663gvHdqhyfJMCjWJv54cGSzcPiEMAfanvU
          ipfs swarm connect /ip4/136.144.56.153/tcp/4001/p2p/12D3KooWKytRAd2ujxhGzaLHKJuje8sVrHXvjGNvHXovpar5KaKQ
          # estuary.tech
          ipfs swarm connect /ip4/139.178.68.217/tcp/6744/p2p/12D3KooWCVXs8P7iq6ao4XhfAmKWrEeuKFWCJgqe9jGDMTqHYBjw
          ipfs swarm connect /ip4/147.75.49.71/tcp/6745/p2p/12D3KooWGBWx9gyUFTVQcKMTenQMSyE2ad9m7c9fpjS4NMjoDien
          ipfs swarm connect /ip4/147.75.86.255/tcp/6745/p2p/12D3KooWFrnuj5o3tx4fGD2ZVJRyDqTdzGnU3XYXmBbWbc8Hs8Nd
          ipfs swarm connect /ip4/3.134.223.177/tcp/6745/p2p/12D3KooWN8vAoGd6eurUSidcpLYguQiGZwt4eVgDvbgaS7kiGTup
          ipfs swarm connect /ip4/35.74.45.12/udp/6746/quic/p2p/12D3KooWLV128pddyvoG6NBvoZw7sSrgpMTPtjnpu3mSmENqhtL7
      - name: Pin ipfs testing data locally
        shell: bash
        run: |
          cid=$(grep 'IPFS_CID =' test/downloadData.mjs | cut -d ' ' -f 4 | tr -d "'")
          ipfs get -o ./test/data -- $cid

      - name: Test
        if: ${{ runner.os == 'Linux' }}
        run: |
          npm run test:downloadData
          # Allow writing test/output.html
          sudo chmod -R 777 test
          # To debug, run `./test/run.sh -d`
          npm run test:headless

      - uses: ashley-taylor/junit-report-annotations-action@v1.0
        if: ${{ always() && runner.os == 'ubuntu-18.04' }}
        with:
          access-token: ${{ secrets.GITHUB_TOKEN }}
          path: 'test/TESTS-*.xml'

      - uses: actions/upload-artifact@v1
        if: ${{ always() && runner.os == 'ubuntu-18.04' }}
        with:
          name: 'Node${{ matrix.node}}TestOutput'
          path: test/output.html
