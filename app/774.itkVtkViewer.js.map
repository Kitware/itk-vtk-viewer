{"version":3,"file":"774.itkVtkViewer.js","mappings":"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","sources":["webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/Core/CellArray/index.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/Core/ClassHierarchy/index.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/Core/DataArray/Constants.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/Core/DataArray/index.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/Core/Math/Constants.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/Core/Math/index.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/Core/Points/index.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/DataModel/BoundingBox/index.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/DataModel/Cell/index.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/DataModel/CellLinks/index.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/DataModel/CellTypes/Constants.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/DataModel/CellTypes/index.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/DataModel/DataSet/Constants.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/DataModel/DataSet/index.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/DataModel/DataSetAttributes/Constants.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/DataModel/DataSetAttributes/FieldData.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/DataModel/DataSetAttributes/index.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/DataModel/ITKHelper/index.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/DataModel/ImageData/index.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/DataModel/Line/Constants.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/DataModel/Line/index.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/DataModel/Plane/index.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/DataModel/PointSet/index.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/DataModel/PolyData/Constants.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/DataModel/PolyData/index.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/DataModel/StructuredData/Constants.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/DataModel/StructuredData/index.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/Common/DataModel/Triangle/index.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/macros.js","webpack://itk-vtk-viewer/./node_modules/vtk.js/Sources/vtk.js","webpack://itk-vtk-viewer/./node_modules/define-properties/index.js","webpack://itk-vtk-viewer/./node_modules/fast-deep-equal/index.js","webpack://itk-vtk-viewer/./node_modules/gl-matrix/esm/common.js","webpack://itk-vtk-viewer/./node_modules/gl-matrix/esm/mat3.js","webpack://itk-vtk-viewer/./node_modules/gl-matrix/esm/mat4.js","webpack://itk-vtk-viewer/./node_modules/gl-matrix/esm/vec3.js","webpack://itk-vtk-viewer/./node_modules/globalthis/implementation.browser.js","webpack://itk-vtk-viewer/./node_modules/globalthis/index.js","webpack://itk-vtk-viewer/./node_modules/globalthis/polyfill.js","webpack://itk-vtk-viewer/./node_modules/globalthis/shim.js","webpack://itk-vtk-viewer/./node_modules/object-keys/implementation.js","webpack://itk-vtk-viewer/./node_modules/object-keys/index.js","webpack://itk-vtk-viewer/./node_modules/object-keys/isArguments.js","webpack://itk-vtk-viewer/./node_modules/seedrandom/index.js","webpack://itk-vtk-viewer/./node_modules/seedrandom/lib/alea.js","webpack://itk-vtk-viewer/./node_modules/seedrandom/lib/tychei.js","webpack://itk-vtk-viewer/./node_modules/seedrandom/lib/xor128.js","webpack://itk-vtk-viewer/./node_modules/seedrandom/lib/xor4096.js","webpack://itk-vtk-viewer/./node_modules/seedrandom/lib/xorshift7.js","webpack://itk-vtk-viewer/./node_modules/seedrandom/lib/xorwow.js","webpack://itk-vtk-viewer/./node_modules/seedrandom/seedrandom.js","webpack://itk-vtk-viewer/./node_modules/webworker-promise/lib/register.js","webpack://itk-vtk-viewer/../../src/core/Image.ts","webpack://itk-vtk-viewer/../../src/core/ImageType.ts","webpack://itk-vtk-viewer/../../src/core/PixelTypes.ts","webpack://itk-vtk-viewer/../../src/core/copyImage.ts","webpack://itk-vtk-viewer/../../src/core/createWebWorkerPromise.ts","webpack://itk-vtk-viewer/../../src/core/imageSharedBufferOrCopy.ts","webpack://itk-vtk-viewer/../../../src/core/internal/loadEmscriptenModuleMainThread.ts","webpack://itk-vtk-viewer/../../src/core/setMatrixElement.ts","webpack://itk-vtk-viewer/../../src/core/stackImages.ts","webpack://itk-vtk-viewer/../../src/pipeline/runPipeline.ts"],"sourcesContent":["import macro from 'vtk.js/Sources/macros';\nimport vtkDataArray from 'vtk.js/Sources/Common/Core/DataArray';\nimport { VtkDataTypes } from 'vtk.js/Sources/Common/Core/DataArray/Constants';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction extractCellSizes(cellArray) {\n  let currentIdx = 0;\n  return cellArray.filter((value, index) => {\n    if (index === currentIdx) {\n      currentIdx += value + 1;\n      return true;\n    }\n    return false;\n  });\n}\n\nfunction getNumberOfCells(cellArray) {\n  let cellId = 0;\n  for (let cellArrayIndex = 0; cellArrayIndex < cellArray.length; ) {\n    cellArrayIndex += cellArray[cellArrayIndex] + 1;\n    cellId++;\n  }\n  return cellId;\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nexport const STATIC = {\n  extractCellSizes,\n  getNumberOfCells,\n};\n\n// ----------------------------------------------------------------------------\n// vtkCellArray methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCellArray(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCellArray');\n  const superClass = { ...publicAPI };\n\n  publicAPI.getNumberOfCells = (recompute) => {\n    if (model.numberOfCells !== undefined && !recompute) {\n      return model.numberOfCells;\n    }\n\n    if (model.cellSizes) {\n      model.numberOfCells = model.cellSizes.length;\n    } else {\n      model.numberOfCells = getNumberOfCells(publicAPI.getData());\n    }\n    return model.numberOfCells;\n  };\n\n  publicAPI.getCellSizes = (recompute) => {\n    if (model.cellSizes !== undefined && !recompute) {\n      return model.cellSizes;\n    }\n\n    model.cellSizes = extractCellSizes(publicAPI.getData());\n    return model.cellSizes;\n  };\n\n  /**\n   * When `resize()` is being used, you then MUST use `insertNextCell()`.\n   */\n  publicAPI.resize = (requestedNumTuples) => {\n    const oldNumTuples = publicAPI.getNumberOfTuples();\n    superClass.resize(requestedNumTuples);\n    const newNumTuples = publicAPI.getNumberOfTuples();\n    if (newNumTuples < oldNumTuples) {\n      if (newNumTuples === 0) {\n        model.numberOfCells = 0;\n        model.cellSizes = [];\n      } else {\n        // We do not know how many cells are left.\n        // Set to undefined to ensure insertNextCell works correctly.\n        model.numberOfCells = undefined;\n        model.cellSizes = undefined;\n      }\n    }\n  };\n\n  publicAPI.setData = (typedArray) => {\n    superClass.setData(typedArray, 1);\n    model.numberOfCells = undefined;\n    model.cellSizes = undefined;\n  };\n\n  publicAPI.getCell = (loc) => {\n    let cellLoc = loc;\n    const numberOfPoints = model.values[cellLoc++];\n    return model.values.subarray(cellLoc, cellLoc + numberOfPoints);\n  };\n\n  publicAPI.insertNextCell = (cellPointIds) => {\n    const cellId = publicAPI.getNumberOfCells();\n    publicAPI.insertNextTuples([cellPointIds.length, ...cellPointIds]);\n    // By computing the number of cells earlier, we made sure that numberOfCells is defined\n    ++model.numberOfCells;\n    if (model.cellSizes != null) {\n      model.cellSizes.push(cellPointIds.length);\n    }\n    return cellId;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nfunction defaultValues(initialValues) {\n  return {\n    empty: true,\n    numberOfComponents: 1,\n    dataType: VtkDataTypes.UNSIGNED_INT,\n    ...initialValues,\n  };\n}\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  vtkDataArray.extend(publicAPI, model, defaultValues(initialValues));\n  vtkCellArray(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkCellArray');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend, ...STATIC };\n","/* eslint-disable prefer-rest-params */\nexport default class ClassHierarchy extends Array {\n  push() {\n    for (let i = 0; i < arguments.length; i++) {\n      if (!this.includes(arguments[i])) {\n        super.push(arguments[i]);\n      }\n    }\n\n    return this.length;\n  }\n}\n","export const DataTypeByteSize = {\n  Int8Array: 1,\n  Uint8Array: 1,\n  Uint8ClampedArray: 1,\n  Int16Array: 2,\n  Uint16Array: 2,\n  Int32Array: 4,\n  Uint32Array: 4,\n  Float32Array: 4,\n  Float64Array: 8,\n};\n\nexport const VtkDataTypes = {\n  VOID: '', // not sure to know what that should be\n  CHAR: 'Int8Array',\n  SIGNED_CHAR: 'Int8Array',\n  UNSIGNED_CHAR: 'Uint8Array',\n  SHORT: 'Int16Array',\n  UNSIGNED_SHORT: 'Uint16Array',\n  INT: 'Int32Array',\n  UNSIGNED_INT: 'Uint32Array',\n  FLOAT: 'Float32Array',\n  DOUBLE: 'Float64Array',\n};\n\nexport const DefaultDataType = VtkDataTypes.FLOAT;\n\nexport default {\n  DefaultDataType,\n  DataTypeByteSize,\n  VtkDataTypes,\n};\n","import Constants from 'vtk.js/Sources/Common/Core/DataArray/Constants';\nimport * as macro from 'vtk.js/Sources/macros';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\n\nconst { vtkErrorMacro } = macro;\nconst { DefaultDataType } = Constants;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n// Original source from https://www.npmjs.com/package/compute-range\n// Modified to accept type arrays\nfunction fastComputeRange(arr, offset, numberOfComponents) {\n  const len = arr.length;\n  let min;\n  let max;\n  let x;\n  let i;\n\n  if (len === 0) {\n    return { min: Number.MAX_VALUE, max: -Number.MAX_VALUE };\n  }\n  min = arr[offset];\n  max = min;\n  for (i = offset; i < len; i += numberOfComponents) {\n    x = arr[i];\n    if (x < min) {\n      min = x;\n    } else if (x > max) {\n      max = x;\n    }\n  }\n  return { min, max };\n}\n\n/**\n * @deprecated please use fastComputeRange instead\n */\nfunction createRangeHelper() {\n  let min = Number.MAX_VALUE;\n  let max = -Number.MAX_VALUE;\n  let count = 0;\n  let sum = 0;\n\n  return {\n    add(value) {\n      if (min > value) {\n        min = value;\n      }\n      if (max < value) {\n        max = value;\n      }\n      count++;\n      sum += value;\n    },\n    get() {\n      return { min, max, count, sum, mean: sum / count };\n    },\n    getRange() {\n      return { min, max };\n    },\n  };\n}\n\nfunction computeRange(values, component = 0, numberOfComponents = 1) {\n  if (component < 0 && numberOfComponents > 1) {\n    // Compute magnitude\n    const size = values.length;\n    const numberOfValues = size / numberOfComponents;\n    const data = new Float64Array(numberOfValues);\n    for (let i = 0, j = 0; i < numberOfValues; ++i) {\n      for (let nextJ = j + numberOfComponents; j < nextJ; ++j) {\n        data[i] += values[j] * values[j];\n      }\n      data[i] **= 0.5;\n    }\n    return fastComputeRange(data, 0, 1);\n  }\n\n  return fastComputeRange(\n    values,\n    component < 0 ? 0 : component,\n    numberOfComponents\n  );\n}\n\nfunction ensureRangeSize(rangeArray, size = 0) {\n  const ranges = rangeArray || [];\n  // Pad ranges with null value to get the\n  while (ranges.length <= size) {\n    ranges.push(null);\n  }\n  return ranges;\n}\n\nfunction getDataType(typedArray) {\n  // Expects toString() to return \"[object ...Array]\"\n  return Object.prototype.toString.call(typedArray).slice(8, -1);\n}\n\nfunction getMaxNorm(normArray) {\n  const numComps = normArray.getNumberOfComponents();\n  let maxNorm = 0.0;\n  const tuple = new Array(numComps);\n  for (let i = 0; i < normArray.getNumberOfTuples(); ++i) {\n    normArray.getTuple(i, tuple);\n    const norm = vtkMath.norm(tuple, numComps);\n    if (norm > maxNorm) {\n      maxNorm = norm;\n    }\n  }\n  return maxNorm;\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nexport const STATIC = {\n  computeRange,\n  createRangeHelper,\n  fastComputeRange,\n  getDataType,\n  getMaxNorm,\n};\n\n// ----------------------------------------------------------------------------\n// vtkDataArray methods\n// ----------------------------------------------------------------------------\n\nfunction vtkDataArray(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkDataArray');\n\n  function dataChange() {\n    model.ranges = null;\n    publicAPI.modified();\n  }\n\n  /**\n   * Resize model.values and copy the old values to the new array.\n   * @param {Number} requestedNumTuples Final expected number of tuples; must be >= 0\n   * @returns {Boolean} True if a resize occured, false otherwise\n   */\n  function resize(requestedNumTuples) {\n    if (requestedNumTuples < 0) {\n      return false;\n    }\n\n    const numComps = publicAPI.getNumberOfComponents();\n    const curNumTuples = model.values.length / (numComps > 0 ? numComps : 1);\n    if (requestedNumTuples === curNumTuples) {\n      return true;\n    }\n\n    if (requestedNumTuples > curNumTuples) {\n      // Requested size is bigger than current size.  Allocate enough\n      // memory to fit the requested size and be more than double the\n      // currently allocated memory.\n      const oldValues = model.values;\n      model.values = macro.newTypedArray(\n        model.dataType,\n        (requestedNumTuples + curNumTuples) * numComps\n      );\n      model.values.set(oldValues);\n      return true;\n    }\n\n    // Requested size is smaller than currently allocated size\n    if (model.size > requestedNumTuples * numComps) {\n      model.size = requestedNumTuples * numComps;\n      dataChange();\n    }\n\n    return true;\n  }\n\n  publicAPI.resize = (requestedNumTuples) => {\n    resize(requestedNumTuples);\n    const newSize = requestedNumTuples * publicAPI.getNumberOfComponents();\n    if (model.size !== newSize) {\n      model.size = newSize;\n      dataChange();\n      return true;\n    }\n    return false;\n  };\n\n  // FIXME, to rename into \"clear()\" or \"reset()\"\n  publicAPI.initialize = () => {\n    publicAPI.resize(0);\n  };\n\n  publicAPI.getElementComponentSize = () => model.values.BYTES_PER_ELEMENT;\n\n  // Description:\n  // Return the data component at the location specified by tupleIdx and\n  // compIdx.\n  publicAPI.getComponent = (tupleIdx, compIdx = 0) =>\n    model.values[tupleIdx * model.numberOfComponents + compIdx];\n\n  // Description:\n  // Set the data component at the location specified by tupleIdx and compIdx\n  // to value.\n  // Note that i is less than NumberOfTuples and j is less than\n  //  NumberOfComponents. Make sure enough memory has been allocated\n  // (use SetNumberOfTuples() and SetNumberOfComponents()).\n  publicAPI.setComponent = (tupleIdx, compIdx, value) => {\n    if (value !== model.values[tupleIdx * model.numberOfComponents + compIdx]) {\n      model.values[tupleIdx * model.numberOfComponents + compIdx] = value;\n      dataChange();\n    }\n  };\n\n  publicAPI.getValue = (valueIdx) => {\n    const idx = valueIdx / model.numberOfComponents;\n    const comp = valueIdx % model.numberOfComponents;\n    return publicAPI.getComponent(idx, comp);\n  };\n\n  publicAPI.setValue = (valueIdx, value) => {\n    const idx = valueIdx / model.numberOfComponents;\n    const comp = valueIdx % model.numberOfComponents;\n    publicAPI.setComponent(idx, comp, value);\n  };\n\n  publicAPI.getData = () =>\n    model.size === model.values.length\n      ? model.values\n      : model.values.subarray(0, model.size);\n\n  publicAPI.getRange = (componentIndex = -1) => {\n    const rangeIdx =\n      componentIndex < 0 ? model.numberOfComponents : componentIndex;\n    let range = null;\n\n    if (!model.ranges) {\n      model.ranges = ensureRangeSize(model.ranges, model.numberOfComponents);\n    }\n    range = model.ranges[rangeIdx];\n\n    if (range) {\n      model.rangeTuple[0] = range.min;\n      model.rangeTuple[1] = range.max;\n      return model.rangeTuple;\n    }\n\n    // Need to compute ranges...\n    range = computeRange(\n      publicAPI.getData(),\n      componentIndex,\n      model.numberOfComponents\n    );\n    model.ranges[rangeIdx] = range;\n    model.rangeTuple[0] = range.min;\n    model.rangeTuple[1] = range.max;\n    return model.rangeTuple;\n  };\n\n  publicAPI.setRange = (rangeValue, componentIndex) => {\n    if (!model.ranges) {\n      model.ranges = ensureRangeSize(model.ranges, model.numberOfComponents);\n    }\n    const range = { min: rangeValue.min, max: rangeValue.max };\n\n    model.ranges[componentIndex] = range;\n    model.rangeTuple[0] = range.min;\n    model.rangeTuple[1] = range.max;\n\n    return model.rangeTuple;\n  };\n\n  publicAPI.setTuple = (idx, tuple) => {\n    const offset = idx * model.numberOfComponents;\n    for (let i = 0; i < model.numberOfComponents; i++) {\n      model.values[offset + i] = tuple[i];\n    }\n  };\n\n  publicAPI.setTuples = (idx, tuples) => {\n    let i = idx * model.numberOfComponents;\n    const last = Math.min(tuples.length, model.size - i);\n    for (let j = 0; j < last; ) {\n      model.values[i++] = tuples[j++];\n    }\n  };\n\n  publicAPI.insertTuple = (idx, tuple) => {\n    if (model.size <= idx * model.numberOfComponents) {\n      model.size = (idx + 1) * model.numberOfComponents;\n      resize(idx + 1);\n    }\n    publicAPI.setTuple(idx, tuple);\n    return idx;\n  };\n\n  publicAPI.insertTuples = (idx, tuples) => {\n    const end = idx + tuples.length / model.numberOfComponents;\n    if (model.size < end * model.numberOfComponents) {\n      model.size = end * model.numberOfComponents;\n      resize(end);\n    }\n    publicAPI.setTuples(idx, tuples);\n    return end;\n  };\n\n  publicAPI.insertNextTuple = (tuple) => {\n    const idx = model.size / model.numberOfComponents;\n    return publicAPI.insertTuple(idx, tuple);\n  };\n\n  publicAPI.insertNextTuples = (tuples) => {\n    const idx = model.size / model.numberOfComponents;\n    return publicAPI.insertTuples(idx, tuples);\n  };\n\n  publicAPI.getTuple = (idx, tupleToFill = []) => {\n    const numberOfComponents = model.numberOfComponents || 1;\n    const offset = idx * numberOfComponents;\n    // Check most common component sizes first\n    // to avoid doing a for loop if possible\n    switch (numberOfComponents) {\n      case 4:\n        tupleToFill[3] = model.values[offset + 3];\n      // eslint-disable-next-line no-fallthrough\n      case 3:\n        tupleToFill[2] = model.values[offset + 2];\n      // eslint-disable-next-line no-fallthrough\n      case 2:\n        tupleToFill[1] = model.values[offset + 1];\n      // eslint-disable-next-line no-fallthrough\n      case 1:\n        tupleToFill[0] = model.values[offset];\n        break;\n      default:\n        for (let i = numberOfComponents - 1; i >= 0; --i) {\n          tupleToFill[i] = model.values[offset + i];\n        }\n    }\n    return tupleToFill;\n  };\n\n  publicAPI.getTuples = (fromId, toId) => {\n    const from = (fromId ?? 0) * model.numberOfComponents;\n    const to =\n      (toId ?? publicAPI.getNumberOfTuples()) * model.numberOfComponents;\n    const arr = publicAPI.getData().subarray(from, to);\n    return arr.length > 0 ? arr : null;\n  };\n\n  publicAPI.getTupleLocation = (idx = 1) => idx * model.numberOfComponents;\n  publicAPI.getNumberOfComponents = () => model.numberOfComponents;\n  publicAPI.getNumberOfValues = () => model.size;\n  publicAPI.getNumberOfTuples = () => model.size / model.numberOfComponents;\n  publicAPI.getDataType = () => model.dataType;\n  /* eslint-disable no-use-before-define */\n  publicAPI.newClone = () =>\n    newInstance({\n      empty: true,\n      name: model.name,\n      dataType: model.dataType,\n      numberOfComponents: model.numberOfComponents,\n    });\n  /* eslint-enable no-use-before-define */\n\n  publicAPI.getName = () => {\n    if (!model.name) {\n      publicAPI.modified();\n      model.name = `vtkDataArray${publicAPI.getMTime()}`;\n    }\n    return model.name;\n  };\n\n  publicAPI.setData = (typedArray, numberOfComponents) => {\n    model.values = typedArray;\n    model.size = typedArray.length;\n    model.dataType = getDataType(typedArray);\n    if (numberOfComponents) {\n      model.numberOfComponents = numberOfComponents;\n    }\n    if (model.size % model.numberOfComponents !== 0) {\n      model.numberOfComponents = 1;\n    }\n    dataChange();\n  };\n\n  // Override serialization support\n  publicAPI.getState = () => {\n    if (model.deleted) {\n      return null;\n    }\n    const jsonArchive = { ...model, vtkClass: publicAPI.getClassName() };\n\n    // Convert typed array to regular array\n    jsonArchive.values = Array.from(jsonArchive.values);\n    delete jsonArchive.buffer;\n\n    // Clean any empty data\n    Object.keys(jsonArchive).forEach((keyName) => {\n      if (!jsonArchive[keyName]) {\n        delete jsonArchive[keyName];\n      }\n    });\n\n    // Sort resulting object by key name\n    const sortedObj = {};\n    Object.keys(jsonArchive)\n      .sort()\n      .forEach((name) => {\n        sortedObj[name] = jsonArchive[name];\n      });\n\n    // Remove mtime\n    if (sortedObj.mtime) {\n      delete sortedObj.mtime;\n    }\n\n    return sortedObj;\n  };\n\n  publicAPI.deepCopy = (other) => {\n    publicAPI.shallowCopy(other);\n    publicAPI.setData(other.getData().slice());\n  };\n\n  publicAPI.interpolateTuple = (\n    idx,\n    source1,\n    source1Idx,\n    source2,\n    source2Idx,\n    t\n  ) => {\n    const numberOfComponents = model.numberOfComponents || 1;\n    if (\n      numberOfComponents !== source1.getNumberOfComponents() ||\n      numberOfComponents !== source2.getNumberOfComponents()\n    ) {\n      vtkErrorMacro('numberOfComponents must match');\n    }\n\n    const tuple1 = source1.getTuple(source1Idx);\n    const tuple2 = source2.getTuple(source2Idx);\n    const out = [];\n    out.length = numberOfComponents;\n\n    // Check most common component sizes first\n    // to avoid doing a for loop if possible\n    switch (numberOfComponents) {\n      case 4:\n        out[3] = tuple1[3] + (tuple2[3] - tuple1[3]) * t;\n      // eslint-disable-next-line no-fallthrough\n      case 3:\n        out[2] = tuple1[2] + (tuple2[2] - tuple1[2]) * t;\n      // eslint-disable-next-line no-fallthrough\n      case 2:\n        out[1] = tuple1[1] + (tuple2[1] - tuple1[1]) * t;\n      // eslint-disable-next-line no-fallthrough\n      case 1:\n        out[0] = tuple1[0] + (tuple2[0] - tuple1[0]) * t;\n        break;\n      default:\n        for (let i = 0; i < numberOfComponents; i++) {\n          out[i] = tuple1[i] + (tuple2[i] - tuple1[i]) * t;\n        }\n    }\n\n    return publicAPI.insertTuple(idx, out);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\n// size: The current size of the dataArray.\n// NOTE: The underlying typed array may be larger than 'size'.\nconst DEFAULT_VALUES = {\n  name: '',\n  numberOfComponents: 1,\n  dataType: DefaultDataType,\n  rangeTuple: [0, 0],\n  // size: undefined,\n  // values: null,\n  // ranges: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  if (!model.empty && !model.values && !model.size) {\n    throw new TypeError(\n      'Cannot create vtkDataArray object without: size > 0, values'\n    );\n  }\n\n  if (!model.values) {\n    model.values = macro.newTypedArray(model.dataType, model.size);\n  } else if (Array.isArray(model.values)) {\n    model.values = macro.newTypedArrayFrom(model.dataType, model.values);\n  }\n\n  if (model.values) {\n    // Takes the size if provided (can be lower than `model.values`) otherwise the actual length of `values`.\n    model.size = model.size ?? model.values.length;\n    model.dataType = getDataType(model.values);\n  }\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.set(publicAPI, model, ['name', 'numberOfComponents']);\n\n  // Object specific methods\n  vtkDataArray(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkDataArray');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend, ...STATIC, ...Constants };\n","export const IDENTITY = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\nexport const IDENTITY_3X3 = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\nexport const EPSILON = 1e-6;\nexport const VTK_SMALL_NUMBER = 1.0e-12;\n\nexport default {\n  IDENTITY,\n  IDENTITY_3X3,\n  EPSILON,\n  VTK_SMALL_NUMBER,\n};\n","import seedrandom from 'seedrandom';\nimport macro from 'vtk.js/Sources/macros';\nimport {\n  IDENTITY,\n  IDENTITY_3X3,\n  EPSILON,\n  VTK_SMALL_NUMBER,\n} from 'vtk.js/Sources/Common/Core/Math/Constants';\n\nconst { vtkErrorMacro, vtkWarningMacro } = macro;\n\n// ----------------------------------------------------------------------------\n/* eslint-disable camelcase                                                  */\n/* eslint-disable no-cond-assign                                             */\n/* eslint-disable no-bitwise                                                 */\n/* eslint-disable no-multi-assign                                            */\n// ----------------------------------------------------------------------------\nlet randomSeedValue = 0;\nconst VTK_MAX_ROTATIONS = 20;\n\nfunction notImplemented(method) {\n  return () => vtkErrorMacro(`vtkMath::${method} - NOT IMPLEMENTED`);\n}\n\n// Swap rows for n by n matrix\nfunction swapRowsMatrix_nxn(matrix, n, row1, row2) {\n  let tmp;\n  for (let i = 0; i < n; i++) {\n    tmp = matrix[row1 * n + i];\n    matrix[row1 * n + i] = matrix[row2 * n + i];\n    matrix[row2 * n + i] = tmp;\n  }\n}\n\n// Swap columns for n by n matrix\nfunction swapColumnsMatrix_nxn(matrix, n, column1, column2) {\n  let tmp;\n  for (let i = 0; i < n; i++) {\n    tmp = matrix[i * n + column1];\n    matrix[i * n + column1] = matrix[i * n + column2];\n    matrix[i * n + column2] = tmp;\n  }\n}\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nexport function createArray(size = 3) {\n  // faster than Array.from and/or while loop\n  const res = Array(size);\n  for (let i = 0; i < size; ++i) {\n    res[i] = 0;\n  }\n  return res;\n}\n\nexport const Pi = () => Math.PI;\n\nexport function radiansFromDegrees(deg) {\n  return (deg / 180) * Math.PI;\n}\n\nexport function degreesFromRadians(rad) {\n  return (rad * 180) / Math.PI;\n}\n\nexport const { round, floor, ceil, min, max } = Math;\n\nexport function arrayMin(arr, offset = 0, stride = 1) {\n  let minValue = Infinity;\n  for (let i = offset, len = arr.length; i < len; i += stride) {\n    if (arr[i] < minValue) {\n      minValue = arr[i];\n    }\n  }\n\n  return minValue;\n}\n\nexport function arrayMax(arr, offset = 0, stride = 1) {\n  let maxValue = -Infinity;\n  for (let i = offset, len = arr.length; i < len; i += stride) {\n    if (maxValue < arr[i]) {\n      maxValue = arr[i];\n    }\n  }\n\n  return maxValue;\n}\n\nexport function arrayRange(arr, offset = 0, stride = 1) {\n  let minValue = Infinity;\n  let maxValue = -Infinity;\n  for (let i = offset, len = arr.length; i < len; i += stride) {\n    if (arr[i] < minValue) {\n      minValue = arr[i];\n    }\n    if (maxValue < arr[i]) {\n      maxValue = arr[i];\n    }\n  }\n\n  return [minValue, maxValue];\n}\n\nexport const ceilLog2 = notImplemented('ceilLog2');\nexport const factorial = notImplemented('factorial');\n\nexport function nearestPowerOfTwo(xi) {\n  let v = 1;\n  while (v < xi) {\n    v *= 2;\n  }\n  return v;\n}\n\nexport function isPowerOfTwo(x) {\n  return x === nearestPowerOfTwo(x);\n}\n\nexport function binomial(m, n) {\n  let r = 1;\n  for (let i = 1; i <= n; ++i) {\n    r *= (m - i + 1) / i;\n  }\n  return Math.floor(r);\n}\n\nexport function beginCombination(m, n) {\n  if (m < n) {\n    return 0;\n  }\n\n  const r = createArray(n);\n  for (let i = 0; i < n; ++i) {\n    r[i] = i;\n  }\n  return r;\n}\n\nexport function nextCombination(m, n, r) {\n  let status = 0;\n  for (let i = n - 1; i >= 0; --i) {\n    if (r[i] < m - n + i) {\n      let j = r[i] + 1;\n      while (i < n) {\n        r[i++] = j++;\n      }\n      status = 1;\n      break;\n    }\n  }\n  return status;\n}\n\nexport function randomSeed(seed) {\n  seedrandom(`${seed}`, { global: true });\n  randomSeedValue = seed;\n}\n\nexport function getSeed() {\n  return randomSeedValue;\n}\n\nexport function random(minValue = 0, maxValue = 1) {\n  const delta = maxValue - minValue;\n  return minValue + delta * Math.random();\n}\n\nexport const gaussian = notImplemented('gaussian');\n\n// Vect3 operations\nexport function add(a, b, out) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n\nexport function subtract(a, b, out) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n\nexport function multiplyScalar(vec, scalar) {\n  vec[0] *= scalar;\n  vec[1] *= scalar;\n  vec[2] *= scalar;\n  return vec;\n}\n\nexport function multiplyScalar2D(vec, scalar) {\n  vec[0] *= scalar;\n  vec[1] *= scalar;\n  return vec;\n}\n\nexport function multiplyAccumulate(a, b, scalar, out) {\n  out[0] = a[0] + b[0] * scalar;\n  out[1] = a[1] + b[1] * scalar;\n  out[2] = a[2] + b[2] * scalar;\n  return out;\n}\n\nexport function multiplyAccumulate2D(a, b, scalar, out) {\n  out[0] = a[0] + b[0] * scalar;\n  out[1] = a[1] + b[1] * scalar;\n  return out;\n}\n\nexport function dot(x, y) {\n  return x[0] * y[0] + x[1] * y[1] + x[2] * y[2];\n}\n\nexport function outer(x, y, out_3x3) {\n  out_3x3[0] = x[0] * y[0];\n  out_3x3[1] = x[0] * y[1];\n  out_3x3[2] = x[0] * y[2];\n  out_3x3[3] = x[1] * y[0];\n  out_3x3[4] = x[1] * y[1];\n  out_3x3[5] = x[1] * y[2];\n  out_3x3[6] = x[2] * y[0];\n  out_3x3[7] = x[2] * y[1];\n  out_3x3[8] = x[2] * y[2];\n}\n\nexport function cross(x, y, out) {\n  const Zx = x[1] * y[2] - x[2] * y[1];\n  const Zy = x[2] * y[0] - x[0] * y[2];\n  const Zz = x[0] * y[1] - x[1] * y[0];\n  out[0] = Zx;\n  out[1] = Zy;\n  out[2] = Zz;\n  return out;\n}\n\nexport function norm(x, n = 3) {\n  switch (n) {\n    case 1:\n      return Math.abs(x);\n    case 2:\n      return Math.sqrt(x[0] * x[0] + x[1] * x[1]);\n    case 3:\n      return Math.sqrt(x[0] * x[0] + x[1] * x[1] + x[2] * x[2]);\n    default: {\n      let sum = 0;\n      for (let i = 0; i < n; i++) {\n        sum += x[i] * x[i];\n      }\n      return Math.sqrt(sum);\n    }\n  }\n}\n\nexport function normalize(x) {\n  const den = norm(x);\n  if (den !== 0.0) {\n    x[0] /= den;\n    x[1] /= den;\n    x[2] /= den;\n  }\n  return den;\n}\n\nexport function perpendiculars(x, y, z, theta) {\n  const x2 = x[0] * x[0];\n  const y2 = x[1] * x[1];\n  const z2 = x[2] * x[2];\n  const r = Math.sqrt(x2 + y2 + z2);\n\n  let dx;\n  let dy;\n  let dz;\n\n  // transpose the vector to avoid divide-by-zero error\n  if (x2 > y2 && x2 > z2) {\n    dx = 0;\n    dy = 1;\n    dz = 2;\n  } else if (y2 > z2) {\n    dx = 1;\n    dy = 2;\n    dz = 0;\n  } else {\n    dx = 2;\n    dy = 0;\n    dz = 1;\n  }\n\n  const a = x[dx] / r;\n  const b = x[dy] / r;\n  const c = x[dz] / r;\n  const tmp = Math.sqrt(a * a + c * c);\n\n  if (theta !== 0) {\n    const sintheta = Math.sin(theta);\n    const costheta = Math.cos(theta);\n\n    if (y) {\n      y[dx] = (c * costheta - a * b * sintheta) / tmp;\n      y[dy] = sintheta * tmp;\n      y[dz] = (-(a * costheta) - b * c * sintheta) / tmp;\n    }\n\n    if (z) {\n      z[dx] = (-(c * sintheta) - a * b * costheta) / tmp;\n      z[dy] = costheta * tmp;\n      z[dz] = (a * sintheta - b * c * costheta) / tmp;\n    }\n  } else {\n    if (y) {\n      y[dx] = c / tmp;\n      y[dy] = 0;\n      y[dz] = -a / tmp;\n    }\n\n    if (z) {\n      z[dx] = (-a * b) / tmp;\n      z[dy] = tmp;\n      z[dz] = (-b * c) / tmp;\n    }\n  }\n}\n\nexport function projectVector(a, b, projection) {\n  const bSquared = dot(b, b);\n\n  if (bSquared === 0) {\n    projection[0] = 0;\n    projection[1] = 0;\n    projection[2] = 0;\n    return false;\n  }\n\n  const scale = dot(a, b) / bSquared;\n\n  for (let i = 0; i < 3; i++) {\n    projection[i] = b[i];\n  }\n  multiplyScalar(projection, scale);\n\n  return true;\n}\n\nexport function dot2D(x, y) {\n  return x[0] * y[0] + x[1] * y[1];\n}\n\nexport function projectVector2D(a, b, projection) {\n  const bSquared = dot2D(b, b);\n\n  if (bSquared === 0) {\n    projection[0] = 0;\n    projection[1] = 0;\n    return false;\n  }\n\n  const scale = dot2D(a, b) / bSquared;\n\n  for (let i = 0; i < 2; i++) {\n    projection[i] = b[i];\n  }\n  multiplyScalar2D(projection, scale);\n\n  return true;\n}\n\nexport function distance2BetweenPoints(x, y) {\n  return (\n    (x[0] - y[0]) * (x[0] - y[0]) +\n    (x[1] - y[1]) * (x[1] - y[1]) +\n    (x[2] - y[2]) * (x[2] - y[2])\n  );\n}\n\nexport function angleBetweenVectors(v1, v2) {\n  const crossVect = [0, 0, 0];\n  cross(v1, v2, crossVect);\n  return Math.atan2(norm(crossVect), dot(v1, v2));\n}\n\nexport function signedAngleBetweenVectors(v1, v2, vN) {\n  const crossVect = [0, 0, 0];\n  cross(v1, v2, crossVect);\n  const angle = Math.atan2(norm(crossVect), dot(v1, v2));\n  return dot(crossVect, vN) >= 0 ? angle : -angle;\n}\n\nexport function gaussianAmplitude(mean, variance, position) {\n  const distanceFromMean = Math.abs(mean - position);\n  return (\n    (1 / Math.sqrt(2 * Math.PI * variance)) *\n    Math.exp(-(distanceFromMean ** 2) / (2 * variance))\n  );\n}\n\nexport function gaussianWeight(mean, variance, position) {\n  const distanceFromMean = Math.abs(mean - position);\n  return Math.exp(-(distanceFromMean ** 2) / (2 * variance));\n}\n\nexport function outer2D(x, y, out_2x2) {\n  out_2x2[0] = x[0] * y[0];\n  out_2x2[1] = x[0] * y[1];\n  out_2x2[2] = x[1] * y[0];\n  out_2x2[3] = x[1] * y[1];\n}\n\nexport function norm2D(x2D) {\n  return Math.sqrt(x2D[0] * x2D[0] + x2D[1] * x2D[1]);\n}\n\nexport function normalize2D(x) {\n  const den = norm2D(x);\n  if (den !== 0.0) {\n    x[0] /= den;\n    x[1] /= den;\n  }\n  return den;\n}\n\nexport function rowsToMat4(row0, row1, row2, row3, mat) {\n  for (let i = 0; i < 4; i++) {\n    mat[i] = row0[i];\n    mat[4 + i] = row1[i];\n    mat[8 + i] = row2[i];\n    mat[12 + i] = row3[i];\n  }\n  return mat;\n}\n\nexport function columnsToMat4(column0, column1, column2, column3, mat) {\n  for (let i = 0; i < 4; i++) {\n    mat[4 * i] = column0[i];\n    mat[4 * i + 1] = column1[i];\n    mat[4 * i + 2] = column2[i];\n    mat[4 * i + 3] = column3[i];\n  }\n  return mat;\n}\n\nexport function rowsToMat3(row0, row1, row2, mat) {\n  for (let i = 0; i < 3; i++) {\n    mat[i] = row0[i];\n    mat[3 + i] = row1[i];\n    mat[6 + i] = row2[i];\n  }\n  return mat;\n}\n\nexport function columnsToMat3(column0, column1, column2, mat) {\n  for (let i = 0; i < 3; i++) {\n    mat[3 * i] = column0[i];\n    mat[3 * i + 1] = column1[i];\n    mat[3 * i + 2] = column2[i];\n  }\n  return mat;\n}\n\nexport function determinant2x2(...args) {\n  if (args.length === 2) {\n    return args[0][0] * args[1][1] - args[1][0] * args[0][1];\n  }\n  if (args.length === 4) {\n    return args[0] * args[3] - args[1] * args[2];\n  }\n  return Number.NaN;\n}\n\nexport function LUFactor3x3(mat_3x3, index_3) {\n  let maxI;\n  let tmp;\n  let largest;\n  const scale = [0, 0, 0];\n\n  // Loop over rows to get implicit scaling information\n  for (let i = 0; i < 3; i++) {\n    largest = Math.abs(mat_3x3[i * 3]);\n    if ((tmp = Math.abs(mat_3x3[i * 3 + 1])) > largest) {\n      largest = tmp;\n    }\n    if ((tmp = Math.abs(mat_3x3[i * 3 + 2])) > largest) {\n      largest = tmp;\n    }\n    scale[i] = 1 / largest;\n  }\n\n  // Loop over all columns using Crout's method\n\n  // first column\n  largest = scale[0] * Math.abs(mat_3x3[0]);\n  maxI = 0;\n  if ((tmp = scale[1] * Math.abs(mat_3x3[3])) >= largest) {\n    largest = tmp;\n    maxI = 1;\n  }\n  if ((tmp = scale[2] * Math.abs(mat_3x3[6])) >= largest) {\n    maxI = 2;\n  }\n  if (maxI !== 0) {\n    swapRowsMatrix_nxn(mat_3x3, 3, maxI, 0);\n    scale[maxI] = scale[0];\n  }\n  index_3[0] = maxI;\n\n  mat_3x3[3] /= mat_3x3[0];\n  mat_3x3[6] /= mat_3x3[0];\n\n  // second column\n  mat_3x3[4] -= mat_3x3[3] * mat_3x3[1];\n  mat_3x3[7] -= mat_3x3[6] * mat_3x3[1];\n  largest = scale[1] * Math.abs(mat_3x3[4]);\n  maxI = 1;\n  if ((tmp = scale[2] * Math.abs(mat_3x3[7])) >= largest) {\n    maxI = 2;\n    swapRowsMatrix_nxn(mat_3x3, 3, 1, 2);\n    scale[2] = scale[1];\n  }\n  index_3[1] = maxI;\n  mat_3x3[7] /= mat_3x3[4];\n\n  // third column\n  mat_3x3[5] -= mat_3x3[3] * mat_3x3[2];\n  mat_3x3[8] -= mat_3x3[6] * mat_3x3[2] + mat_3x3[7] * mat_3x3[5];\n  index_3[2] = 2;\n}\n\nexport function LUSolve3x3(mat_3x3, index_3, x_3) {\n  // forward substitution\n  let sum = x_3[index_3[0]];\n  x_3[index_3[0]] = x_3[0];\n  x_3[0] = sum;\n\n  sum = x_3[index_3[1]];\n  x_3[index_3[1]] = x_3[1];\n  x_3[1] = sum - mat_3x3[3] * x_3[0];\n\n  sum = x_3[index_3[2]];\n  x_3[index_3[2]] = x_3[2];\n  x_3[2] = sum - mat_3x3[6] * x_3[0] - mat_3x3[7] * x_3[1];\n\n  // back substitution\n  x_3[2] /= mat_3x3[8];\n  x_3[1] = (x_3[1] - mat_3x3[5] * x_3[2]) / mat_3x3[4];\n  x_3[0] = (x_3[0] - mat_3x3[1] * x_3[1] - mat_3x3[2] * x_3[2]) / mat_3x3[0];\n}\n\nexport function linearSolve3x3(mat_3x3, x_3, y_3) {\n  const a1 = mat_3x3[0];\n  const b1 = mat_3x3[1];\n  const c1 = mat_3x3[2];\n  const a2 = mat_3x3[3];\n  const b2 = mat_3x3[4];\n  const c2 = mat_3x3[5];\n  const a3 = mat_3x3[6];\n  const b3 = mat_3x3[7];\n  const c3 = mat_3x3[8];\n\n  // Compute the adjoint\n  const d1 = +determinant2x2(b2, b3, c2, c3);\n  const d2 = -determinant2x2(a2, a3, c2, c3);\n  const d3 = +determinant2x2(a2, a3, b2, b3);\n\n  const e1 = -determinant2x2(b1, b3, c1, c3);\n  const e2 = +determinant2x2(a1, a3, c1, c3);\n  const e3 = -determinant2x2(a1, a3, b1, b3);\n\n  const f1 = +determinant2x2(b1, b2, c1, c2);\n  const f2 = -determinant2x2(a1, a2, c1, c2);\n  const f3 = +determinant2x2(a1, a2, b1, b2);\n\n  // Compute the determinant\n  const det = a1 * d1 + b1 * d2 + c1 * d3;\n\n  // Multiply by the adjoint\n  const v1 = d1 * x_3[0] + e1 * x_3[1] + f1 * x_3[2];\n  const v2 = d2 * x_3[0] + e2 * x_3[1] + f2 * x_3[2];\n  const v3 = d3 * x_3[0] + e3 * x_3[1] + f3 * x_3[2];\n\n  // Divide by the determinant\n  y_3[0] = v1 / det;\n  y_3[1] = v2 / det;\n  y_3[2] = v3 / det;\n}\n\nexport function multiply3x3_vect3(mat_3x3, in_3, out_3) {\n  const x = mat_3x3[0] * in_3[0] + mat_3x3[1] * in_3[1] + mat_3x3[2] * in_3[2];\n  const y = mat_3x3[3] * in_3[0] + mat_3x3[4] * in_3[1] + mat_3x3[5] * in_3[2];\n  const z = mat_3x3[6] * in_3[0] + mat_3x3[7] * in_3[1] + mat_3x3[8] * in_3[2];\n\n  out_3[0] = x;\n  out_3[1] = y;\n  out_3[2] = z;\n}\n\nexport function multiply3x3_mat3(a_3x3, b_3x3, out_3x3) {\n  const copyA = [...a_3x3];\n  const copyB = [...b_3x3];\n  for (let i = 0; i < 3; i++) {\n    out_3x3[i] =\n      copyA[0] * copyB[i] + copyA[1] * copyB[i + 3] + copyA[2] * copyB[i + 6];\n    out_3x3[i + 3] =\n      copyA[3] * copyB[i] + copyA[4] * copyB[i + 3] + copyA[5] * copyB[i + 6];\n    out_3x3[i + 6] =\n      copyA[6] * copyB[i] + copyA[7] * copyB[i + 3] + copyA[8] * copyB[i + 6];\n  }\n}\n\nexport function multiplyMatrix(a, b, rowA, colA, rowB, colB, out_rowXcol) {\n  // we need colA == rowB\n  if (colA !== rowB) {\n    vtkErrorMacro('Number of columns of A must match number of rows of B.');\n  }\n\n  // If a or b is used to store the result, copying them is required\n  const copyA = [...a];\n  const copyB = [...b];\n  // output matrix is rowA*colB\n  // output row\n  for (let i = 0; i < rowA; i++) {\n    // output col\n    for (let j = 0; j < colB; j++) {\n      out_rowXcol[i * colB + j] = 0;\n      // sum for this point\n      for (let k = 0; k < colA; k++) {\n        out_rowXcol[i * colB + j] += copyA[i * colA + k] * copyB[j + colB * k];\n      }\n    }\n  }\n}\n\nexport function transpose3x3(in_3x3, outT_3x3) {\n  let tmp;\n\n  // off-diagonal elements\n  tmp = in_3x3[3];\n  outT_3x3[3] = in_3x3[1];\n  outT_3x3[1] = tmp;\n  tmp = in_3x3[6];\n  outT_3x3[6] = in_3x3[2];\n  outT_3x3[2] = tmp;\n  tmp = in_3x3[7];\n  outT_3x3[7] = in_3x3[5];\n  outT_3x3[5] = tmp;\n\n  // on-diagonal elements\n  outT_3x3[0] = in_3x3[0];\n  outT_3x3[4] = in_3x3[4];\n  outT_3x3[8] = in_3x3[8];\n}\n\nexport function invert3x3(in_3x3, outI_3x3) {\n  const a1 = in_3x3[0];\n  const b1 = in_3x3[1];\n  const c1 = in_3x3[2];\n  const a2 = in_3x3[3];\n  const b2 = in_3x3[4];\n  const c2 = in_3x3[5];\n  const a3 = in_3x3[6];\n  const b3 = in_3x3[7];\n  const c3 = in_3x3[8];\n\n  // Compute the adjoint\n  const d1 = +determinant2x2(b2, b3, c2, c3);\n  const d2 = -determinant2x2(a2, a3, c2, c3);\n  const d3 = +determinant2x2(a2, a3, b2, b3);\n\n  const e1 = -determinant2x2(b1, b3, c1, c3);\n  const e2 = +determinant2x2(a1, a3, c1, c3);\n  const e3 = -determinant2x2(a1, a3, b1, b3);\n\n  const f1 = +determinant2x2(b1, b2, c1, c2);\n  const f2 = -determinant2x2(a1, a2, c1, c2);\n  const f3 = +determinant2x2(a1, a2, b1, b2);\n\n  // Divide by the determinant\n  const det = a1 * d1 + b1 * d2 + c1 * d3;\n  if (det === 0) {\n    vtkWarningMacro('Matrix has 0 determinant');\n  }\n\n  outI_3x3[0] = d1 / det;\n  outI_3x3[3] = d2 / det;\n  outI_3x3[6] = d3 / det;\n\n  outI_3x3[1] = e1 / det;\n  outI_3x3[4] = e2 / det;\n  outI_3x3[7] = e3 / det;\n\n  outI_3x3[2] = f1 / det;\n  outI_3x3[5] = f2 / det;\n  outI_3x3[8] = f3 / det;\n}\n\nexport function determinant3x3(mat_3x3) {\n  return (\n    mat_3x3[0] * mat_3x3[4] * mat_3x3[8] +\n    mat_3x3[3] * mat_3x3[7] * mat_3x3[2] +\n    mat_3x3[6] * mat_3x3[1] * mat_3x3[5] -\n    mat_3x3[0] * mat_3x3[7] * mat_3x3[5] -\n    mat_3x3[3] * mat_3x3[1] * mat_3x3[8] -\n    mat_3x3[6] * mat_3x3[4] * mat_3x3[2]\n  );\n}\n\n/**\n * Returns true if elements of both arrays are equals.\n * @param {Array} a an array of numbers (vector, point, matrix...)\n * @param {Array} b an array of numbers (vector, point, matrix...)\n * @param {Number} eps tolerance\n */\nexport function areEquals(a, b, eps = EPSILON) {\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  function isEqual(element, index) {\n    return Math.abs(element - b[index]) <= eps;\n  }\n  return a.every(isEqual);\n}\n\nexport const areMatricesEqual = areEquals;\n\nexport function identity3x3(mat_3x3) {\n  for (let i = 0; i < 3; i++) {\n    /* eslint-disable-next-line no-multi-assign */\n    mat_3x3[i * 3] = mat_3x3[i * 3 + 1] = mat_3x3[i * 3 + 2] = 0;\n    mat_3x3[i * 3 + i] = 1;\n  }\n}\n\nexport function identity(n, mat) {\n  for (let i = 0; i < n; i++) {\n    for (let j = 0; j < n; j++) {\n      mat[i * n + j] = 0;\n    }\n    mat[i * n + i] = 1;\n  }\n  return mat;\n}\n\nexport function isIdentity(mat, eps = EPSILON) {\n  return areMatricesEqual(mat, IDENTITY, eps);\n}\n\nexport function isIdentity3x3(mat, eps = EPSILON) {\n  return areMatricesEqual(mat, IDENTITY_3X3, eps);\n}\n\nexport function quaternionToMatrix3x3(quat_4, mat_3x3) {\n  const ww = quat_4[0] * quat_4[0];\n  const wx = quat_4[0] * quat_4[1];\n  const wy = quat_4[0] * quat_4[2];\n  const wz = quat_4[0] * quat_4[3];\n\n  const xx = quat_4[1] * quat_4[1];\n  const yy = quat_4[2] * quat_4[2];\n  const zz = quat_4[3] * quat_4[3];\n\n  const xy = quat_4[1] * quat_4[2];\n  const xz = quat_4[1] * quat_4[3];\n  const yz = quat_4[2] * quat_4[3];\n\n  const rr = xx + yy + zz;\n  // normalization factor, just in case quaternion was not normalized\n  let f = 1 / (ww + rr);\n  const s = (ww - rr) * f;\n  f *= 2;\n\n  mat_3x3[0] = xx * f + s;\n  mat_3x3[3] = (xy + wz) * f;\n  mat_3x3[6] = (xz - wy) * f;\n\n  mat_3x3[1] = (xy - wz) * f;\n  mat_3x3[4] = yy * f + s;\n  mat_3x3[7] = (yz + wx) * f;\n\n  mat_3x3[2] = (xz + wy) * f;\n  mat_3x3[5] = (yz - wx) * f;\n  mat_3x3[8] = zz * f + s;\n}\n\nexport function roundNumber(num, digits = 0) {\n  if (!`${num}`.includes('e')) {\n    return +`${Math.round(`${num}e+${digits}`)}e-${digits}`;\n  }\n  const arr = `${num}`.split('e');\n  let sig = '';\n  if (+arr[1] + digits > 0) {\n    sig = '+';\n  }\n  return +`${Math.round(`${+arr[0]}e${sig}${+arr[1] + digits}`)}e-${digits}`;\n}\n\nexport function roundVector(vector, out = [0, 0, 0], digits = 0) {\n  out[0] = roundNumber(vector[0], digits);\n  out[1] = roundNumber(vector[1], digits);\n  out[2] = roundNumber(vector[2], digits);\n\n  return out;\n}\n\nexport function jacobiN(a, n, w, v) {\n  let i;\n  let j;\n  let k;\n  let iq;\n  let ip;\n  let numPos;\n  let tresh;\n  let theta;\n  let t;\n  let tau;\n  let sm;\n  let s;\n  let h;\n  let g;\n  let c;\n  let tmp;\n  const b = createArray(n);\n  const z = createArray(n);\n\n  const vtkROTATE = (aa, ii, jj) => {\n    g = aa[ii];\n    h = aa[jj];\n    aa[ii] = g - s * (h + g * tau);\n    aa[jj] = h + s * (g - h * tau);\n  };\n\n  // initialize\n  identity(n, v);\n  for (ip = 0; ip < n; ip++) {\n    b[ip] = w[ip] = a[ip + ip * n];\n    z[ip] = 0.0;\n  }\n\n  // begin rotation sequence\n  for (i = 0; i < VTK_MAX_ROTATIONS; i++) {\n    sm = 0.0;\n    for (ip = 0; ip < n - 1; ip++) {\n      for (iq = ip + 1; iq < n; iq++) {\n        sm += Math.abs(a[ip * n + iq]);\n      }\n    }\n    if (sm === 0.0) {\n      break;\n    }\n\n    // first 3 sweeps\n    if (i < 3) {\n      tresh = (0.2 * sm) / (n * n);\n    } else {\n      tresh = 0.0;\n    }\n\n    for (ip = 0; ip < n - 1; ip++) {\n      for (iq = ip + 1; iq < n; iq++) {\n        g = 100.0 * Math.abs(a[ip * n + iq]);\n\n        // after 4 sweeps\n        if (\n          i > 3 &&\n          Math.abs(w[ip]) + g === Math.abs(w[ip]) &&\n          Math.abs(w[iq]) + g === Math.abs(w[iq])\n        ) {\n          a[ip * n + iq] = 0.0;\n        } else if (Math.abs(a[ip * n + iq]) > tresh) {\n          h = w[iq] - w[ip];\n          if (Math.abs(h) + g === Math.abs(h)) {\n            t = a[ip * n + iq] / h;\n          } else {\n            theta = (0.5 * h) / a[ip * n + iq];\n            t = 1.0 / (Math.abs(theta) + Math.sqrt(1.0 + theta * theta));\n            if (theta < 0.0) {\n              t = -t;\n            }\n          }\n          c = 1.0 / Math.sqrt(1 + t * t);\n          s = t * c;\n          tau = s / (1.0 + c);\n          h = t * a[ip * n + iq];\n          z[ip] -= h;\n          z[iq] += h;\n          w[ip] -= h;\n          w[iq] += h;\n          a[ip * n + iq] = 0.0;\n\n          // ip already shifted left by 1 unit\n          for (j = 0; j <= ip - 1; j++) {\n            vtkROTATE(a, j * n + ip, j * n + iq);\n          }\n          // ip and iq already shifted left by 1 unit\n          for (j = ip + 1; j <= iq - 1; j++) {\n            vtkROTATE(a, ip * n + j, j * n + iq);\n          }\n          // iq already shifted left by 1 unit\n          for (j = iq + 1; j < n; j++) {\n            vtkROTATE(a, ip * n + j, iq * n + j);\n          }\n          for (j = 0; j < n; j++) {\n            vtkROTATE(v, j * n + ip, j * n + iq);\n          }\n        }\n      }\n    }\n\n    for (ip = 0; ip < n; ip++) {\n      b[ip] += z[ip];\n      w[ip] = b[ip];\n      z[ip] = 0.0;\n    }\n  }\n\n  // this is NEVER called\n  if (i >= VTK_MAX_ROTATIONS) {\n    vtkWarningMacro('vtkMath::Jacobi: Error extracting eigenfunctions');\n    return 0;\n  }\n\n  // sort eigenfunctions: these changes do not affect accuracy\n  for (j = 0; j < n - 1; j++) {\n    // boundary incorrect\n    k = j;\n    tmp = w[k];\n    for (i = j + 1; i < n; i++) {\n      // boundary incorrect, shifted already\n      if (w[i] >= tmp || Math.abs(w[i] - tmp) < VTK_SMALL_NUMBER) {\n        // why exchange if same?\n        k = i;\n        tmp = w[k];\n      }\n    }\n    if (k !== j) {\n      w[k] = w[j];\n      w[j] = tmp;\n      swapColumnsMatrix_nxn(v, n, j, k);\n    }\n  }\n  // ensure eigenvector consistency (i.e., Jacobi can compute vectors that\n  // are negative of one another (.707,.707,0) and (-.707,-.707,0). This can\n  // reek havoc in hyperstreamline/other stuff. We will select the most\n  // positive eigenvector.\n  const ceil_half_n = (n >> 1) + (n & 1);\n\n  for (numPos = 0, i = 0; i < n * n; i++) {\n    if (v[i] >= 0.0) {\n      numPos++;\n    }\n  }\n  //    if ( numPos < ceil(double(n)/double(2.0)) )\n  if (numPos < ceil_half_n) {\n    for (i = 0; i < n; i++) {\n      v[i * n + j] *= -1.0;\n    }\n  }\n  return 1;\n}\n\nexport function matrix3x3ToQuaternion(mat_3x3, quat_4) {\n  const tmp = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n\n  // on-diagonal elements\n  tmp[0] = mat_3x3[0] + mat_3x3[4] + mat_3x3[8];\n  tmp[5] = mat_3x3[0] - mat_3x3[4] - mat_3x3[8];\n  tmp[10] = -mat_3x3[0] + mat_3x3[4] - mat_3x3[8];\n  tmp[15] = -mat_3x3[0] - mat_3x3[4] + mat_3x3[8];\n\n  // off-diagonal elements\n  tmp[1] = tmp[4] = mat_3x3[7] - mat_3x3[5];\n  tmp[2] = tmp[8] = mat_3x3[2] - mat_3x3[6];\n  tmp[3] = tmp[12] = mat_3x3[3] - mat_3x3[1];\n\n  tmp[6] = tmp[9] = mat_3x3[3] + mat_3x3[1];\n  tmp[7] = tmp[13] = mat_3x3[2] + mat_3x3[6];\n  tmp[11] = tmp[14] = mat_3x3[7] + mat_3x3[5];\n\n  const eigenvectors = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n  const eigenvalues = [0, 0, 0, 0];\n\n  // convert into format that JacobiN can use,\n  // then use Jacobi to find eigenvalues and eigenvectors\n  // tmp is copied because jacobiN may modify it\n  const NTemp = [...tmp];\n  jacobiN(NTemp, 4, eigenvalues, eigenvectors);\n\n  // the first eigenvector is the one we want\n  quat_4[0] = eigenvectors[0];\n  quat_4[1] = eigenvectors[4];\n  quat_4[2] = eigenvectors[8];\n  quat_4[3] = eigenvectors[12];\n}\n\nexport function multiplyQuaternion(quat_1, quat_2, quat_out) {\n  const ww = quat_1[0] * quat_2[0];\n  const wx = quat_1[0] * quat_2[1];\n  const wy = quat_1[0] * quat_2[2];\n  const wz = quat_1[0] * quat_2[3];\n\n  const xw = quat_1[1] * quat_2[0];\n  const xx = quat_1[1] * quat_2[1];\n  const xy = quat_1[1] * quat_2[2];\n  const xz = quat_1[1] * quat_2[3];\n\n  const yw = quat_1[2] * quat_2[0];\n  const yx = quat_1[2] * quat_2[1];\n  const yy = quat_1[2] * quat_2[2];\n  const yz = quat_1[2] * quat_2[3];\n\n  const zw = quat_1[3] * quat_2[0];\n  const zx = quat_1[3] * quat_2[1];\n  const zy = quat_1[3] * quat_2[2];\n  const zz = quat_1[3] * quat_2[3];\n\n  quat_out[0] = ww - xx - yy - zz;\n  quat_out[1] = wx + xw + yz - zy;\n  quat_out[2] = wy - xz + yw + zx;\n  quat_out[3] = wz + xy - yx + zw;\n}\n\nexport function orthogonalize3x3(a_3x3, out_3x3) {\n  // copy the matrix\n  for (let i = 0; i < 9; i++) {\n    out_3x3[i] = a_3x3[i];\n  }\n\n  // Pivot the matrix to improve accuracy\n  const scale = createArray(3);\n  const index = createArray(3);\n  let largest;\n\n  // Loop over rows to get implicit scaling information\n  for (let i = 0; i < 3; i++) {\n    const x1 = Math.abs(out_3x3[i * 3]);\n    const x2 = Math.abs(out_3x3[i * 3 + 1]);\n    const x3 = Math.abs(out_3x3[i * 3 + 2]);\n    largest = x2 > x1 ? x2 : x1;\n    largest = x3 > largest ? x3 : largest;\n    scale[i] = 1;\n    if (largest !== 0) {\n      scale[i] /= largest;\n    }\n  }\n\n  // first column\n  const x1 = Math.abs(out_3x3[0]) * scale[0];\n  const x2 = Math.abs(out_3x3[3]) * scale[1];\n  const x3 = Math.abs(out_3x3[6]) * scale[2];\n  index[0] = 0;\n  largest = x1;\n  if (x2 >= largest) {\n    largest = x2;\n    index[0] = 1;\n  }\n  if (x3 >= largest) {\n    index[0] = 2;\n  }\n  if (index[0] !== 0) {\n    // swap vectors\n    swapColumnsMatrix_nxn(out_3x3, 3, index[0], 0);\n    scale[index[0]] = scale[0];\n  }\n\n  // second column\n  const y2 = Math.abs(out_3x3[4]) * scale[1];\n  const y3 = Math.abs(out_3x3[7]) * scale[2];\n  index[1] = 1;\n  largest = y2;\n  if (y3 >= largest) {\n    index[1] = 2;\n    // swap vectors\n    swapColumnsMatrix_nxn(out_3x3, 3, 1, 2);\n  }\n\n  // third column\n  index[2] = 2;\n\n  // A quaternion can only describe a pure rotation, not\n  // a rotation with a flip, therefore the flip must be\n  // removed before the matrix is converted to a quaternion.\n  let flip = 0;\n  if (determinant3x3(out_3x3) < 0) {\n    flip = 1;\n    for (let i = 0; i < 9; i++) {\n      out_3x3[i] = -out_3x3[i];\n    }\n  }\n\n  // Do orthogonalization using a quaternion intermediate\n  // (this, essentially, does the orthogonalization via\n  // diagonalization of an appropriately constructed symmetric\n  // 4x4 matrix rather than by doing SVD of the 3x3 matrix)\n  const quat = createArray(4);\n  matrix3x3ToQuaternion(out_3x3, quat);\n  quaternionToMatrix3x3(quat, out_3x3);\n\n  // Put the flip back into the orthogonalized matrix.\n  if (flip) {\n    for (let i = 0; i < 9; i++) {\n      out_3x3[i] = -out_3x3[i];\n    }\n  }\n\n  // Undo the pivoting\n  if (index[1] !== 1) {\n    swapColumnsMatrix_nxn(out_3x3, 3, index[1], 1);\n  }\n  if (index[0] !== 0) {\n    swapColumnsMatrix_nxn(out_3x3, 3, index[0], 0);\n  }\n}\n\nexport function diagonalize3x3(a_3x3, w_3, v_3x3) {\n  let i;\n  let j;\n  let k;\n  let maxI;\n  let tmp;\n  let maxVal;\n\n  // a is copied because jacobiN may modify it\n  const copyA = [...a_3x3];\n\n  // diagonalize using Jacobi\n  jacobiN(copyA, 3, w_3, v_3x3);\n\n  // if all the eigenvalues are the same, return identity matrix\n  if (w_3[0] === w_3[1] && w_3[0] === w_3[2]) {\n    identity3x3(v_3x3);\n    return;\n  }\n\n  // transpose temporarily, it makes it easier to sort the eigenvectors\n  transpose3x3(v_3x3, v_3x3);\n\n  // if two eigenvalues are the same, re-orthogonalize to optimally line\n  // up the eigenvectors with the x, y, and z axes\n  for (i = 0; i < 3; i++) {\n    // two eigenvalues are the same\n    if (w_3[(i + 1) % 3] === w_3[(i + 2) % 3]) {\n      // find maximum element of the independent eigenvector\n      maxVal = Math.abs(v_3x3[i * 3]);\n      maxI = 0;\n      for (j = 1; j < 3; j++) {\n        if (maxVal < (tmp = Math.abs(v_3x3[i * 3 + j]))) {\n          maxVal = tmp;\n          maxI = j;\n        }\n      }\n      // swap the eigenvector into its proper position\n      if (maxI !== i) {\n        tmp = w_3[maxI];\n        w_3[maxI] = w_3[i];\n        w_3[i] = tmp;\n        swapRowsMatrix_nxn(v_3x3, 3, i, maxI);\n      }\n      // maximum element of eigenvector should be positive\n      if (v_3x3[maxI * 3 + maxI] < 0) {\n        v_3x3[maxI * 3] = -v_3x3[maxI * 3];\n        v_3x3[maxI * 3 + 1] = -v_3x3[maxI * 3 + 1];\n        v_3x3[maxI * 3 + 2] = -v_3x3[maxI * 3 + 2];\n      }\n\n      // re-orthogonalize the other two eigenvectors\n      j = (maxI + 1) % 3;\n      k = (maxI + 2) % 3;\n\n      v_3x3[j * 3] = 0.0;\n      v_3x3[j * 3 + 1] = 0.0;\n      v_3x3[j * 3 + 2] = 0.0;\n      v_3x3[j * 3 + j] = 1.0;\n      const vectTmp1 = cross(\n        [v_3x3[maxI * 3], v_3x3[maxI * 3 + 1], v_3x3[maxI * 3 + 2]],\n        [v_3x3[j * 3], v_3x3[j * 3 + 1], v_3x3[j * 3 + 2]],\n        []\n      );\n      normalize(vectTmp1);\n      const vectTmp2 = cross(\n        vectTmp1,\n        [v_3x3[maxI * 3], v_3x3[maxI * 3 + 1], v_3x3[maxI * 3 + 2]],\n        []\n      );\n      for (let t = 0; t < 3; t++) {\n        v_3x3[k * 3 + t] = vectTmp1[t];\n        v_3x3[j * 3 + t] = vectTmp2[t];\n      }\n\n      // transpose vectors back to columns\n      transpose3x3(v_3x3, v_3x3);\n      return;\n    }\n  }\n\n  // the three eigenvalues are different, just sort the eigenvectors\n  // to align them with the x, y, and z axes\n\n  // find the vector with the largest x element, make that vector\n  // the first vector\n  maxVal = Math.abs(v_3x3[0]);\n  maxI = 0;\n  for (i = 1; i < 3; i++) {\n    if (maxVal < (tmp = Math.abs(v_3x3[i * 3]))) {\n      maxVal = tmp;\n      maxI = i;\n    }\n  }\n  // swap eigenvalue and eigenvector\n  if (maxI !== 0) {\n    const eigenValTmp = w_3[maxI];\n    w_3[maxI] = w_3[0];\n    w_3[0] = eigenValTmp;\n    swapRowsMatrix_nxn(v_3x3, 3, maxI, 0);\n  }\n  // do the same for the y element\n  if (Math.abs(v_3x3[4]) < Math.abs(v_3x3[7])) {\n    const eigenValTmp = w_3[2];\n    w_3[2] = w_3[1];\n    w_3[1] = eigenValTmp;\n    swapRowsMatrix_nxn(v_3x3, 3, 1, 2);\n  }\n\n  // ensure that the sign of the eigenvectors is correct\n  for (i = 0; i < 2; i++) {\n    if (v_3x3[i * 3 + i] < 0) {\n      v_3x3[i * 3] = -v_3x3[i * 3];\n      v_3x3[i * 3 + 1] = -v_3x3[i * 3 + 1];\n      v_3x3[i * 3 + 2] = -v_3x3[i * 3 + 2];\n    }\n  }\n  // set sign of final eigenvector to ensure that determinant is positive\n  if (determinant3x3(v_3x3) < 0) {\n    v_3x3[6] = -v_3x3[6];\n    v_3x3[7] = -v_3x3[7];\n    v_3x3[8] = -v_3x3[8];\n  }\n\n  // transpose the eigenvectors back again\n  transpose3x3(v_3x3, v_3x3);\n}\n\nexport function singularValueDecomposition3x3(a_3x3, u_3x3, w_3, vT_3x3) {\n  let i;\n  // copy so that A can be used for U or VT without risk\n  const B = [...a_3x3];\n\n  // temporarily flip if determinant is negative\n  const d = determinant3x3(B);\n  if (d < 0) {\n    for (i = 0; i < 9; i++) {\n      B[i] = -B[i];\n    }\n  }\n\n  // orthogonalize, diagonalize, etc.\n  orthogonalize3x3(B, u_3x3);\n  transpose3x3(B, B);\n  multiply3x3_mat3(B, u_3x3, vT_3x3);\n  diagonalize3x3(vT_3x3, w_3, vT_3x3);\n  multiply3x3_mat3(u_3x3, vT_3x3, u_3x3);\n  transpose3x3(vT_3x3, vT_3x3);\n\n  // re-create the flip\n  if (d < 0) {\n    w_3[0] = -w_3[0];\n    w_3[1] = -w_3[1];\n    w_3[2] = -w_3[2];\n  }\n}\n\n/**\n * Factor linear equations Ax = b using LU decomposition A = LU. Output factorization LU is in matrix A.\n * @param {Matrix} A square matrix\n * @param {Number} index integer array of pivot indices index[0->n-1]\n * @param {Number} size matrix size\n */\nexport function luFactorLinearSystem(A, index, size) {\n  let i;\n  let j;\n  let k;\n  let largest;\n  let maxI = 0;\n  let sum;\n  let temp1;\n  let temp2;\n  const scale = createArray(size);\n\n  //\n  // Loop over rows to get implicit scaling information\n  //\n  for (i = 0; i < size; i++) {\n    for (largest = 0.0, j = 0; j < size; j++) {\n      if ((temp2 = Math.abs(A[i * size + j])) > largest) {\n        largest = temp2;\n      }\n    }\n\n    if (largest === 0.0) {\n      vtkWarningMacro('Unable to factor linear system');\n      return 0;\n    }\n    scale[i] = 1.0 / largest;\n  }\n  //\n  // Loop over all columns using Crout's method\n  //\n  for (j = 0; j < size; j++) {\n    for (i = 0; i < j; i++) {\n      sum = A[i * size + j];\n      for (k = 0; k < i; k++) {\n        sum -= A[i * size + k] * A[k * size + j];\n      }\n      A[i * size + j] = sum;\n    }\n    //\n    // Begin search for largest pivot element\n    //\n    for (largest = 0.0, i = j; i < size; i++) {\n      sum = A[i * size + j];\n      for (k = 0; k < j; k++) {\n        sum -= A[i * size + k] * A[k * size + j];\n      }\n      A[i * size + j] = sum;\n\n      if ((temp1 = scale[i] * Math.abs(sum)) >= largest) {\n        largest = temp1;\n        maxI = i;\n      }\n    }\n    //\n    // Check for row interchange\n    //\n    if (j !== maxI) {\n      for (k = 0; k < size; k++) {\n        temp1 = A[maxI * size + k];\n        A[maxI * size + k] = A[j * size + k];\n        A[j * size + k] = temp1;\n      }\n      scale[maxI] = scale[j];\n    }\n    //\n    // Divide by pivot element and perform elimination\n    //\n    index[j] = maxI;\n\n    if (Math.abs(A[j * size + j]) <= VTK_SMALL_NUMBER) {\n      vtkWarningMacro('Unable to factor linear system');\n      return 0;\n    }\n\n    if (j !== size - 1) {\n      temp1 = 1.0 / A[j * size + j];\n      for (i = j + 1; i < size; i++) {\n        A[i * size + j] *= temp1;\n      }\n    }\n  }\n  return 1;\n}\n\nexport function luSolveLinearSystem(A, index, x, size) {\n  let i;\n  let j;\n  let ii;\n  let idx;\n  let sum;\n  //\n  // Proceed with forward and backsubstitution for L and U\n  // matrices.  First, forward substitution.\n  //\n  for (ii = -1, i = 0; i < size; i++) {\n    idx = index[i];\n    sum = x[idx];\n    x[idx] = x[i];\n\n    if (ii >= 0) {\n      for (j = ii; j <= i - 1; j++) {\n        sum -= A[i * size + j] * x[j];\n      }\n    } else if (sum !== 0.0) {\n      ii = i;\n    }\n\n    x[i] = sum;\n  }\n  //\n  // Now, back substitution\n  //\n  for (i = size - 1; i >= 0; i--) {\n    sum = x[i];\n    for (j = i + 1; j < size; j++) {\n      sum -= A[i * size + j] * x[j];\n    }\n    x[i] = sum / A[i * size + i];\n  }\n}\n\nexport function solveLinearSystem(A, x, size) {\n  // if we solving something simple, just solve it\n  if (size === 2) {\n    const y = createArray(2);\n    const det = determinant2x2(A[0], A[1], A[2], A[3]);\n\n    if (det === 0.0) {\n      // Unable to solve linear system\n      return 0;\n    }\n\n    y[0] = (A[3] * x[0] - A[1] * x[1]) / det;\n    y[1] = (-(A[2] * x[0]) + A[0] * x[1]) / det;\n\n    x[0] = y[0];\n    x[1] = y[1];\n    return 1;\n  }\n\n  if (size === 1) {\n    if (A[0] === 0.0) {\n      // Unable to solve linear system\n      return 0;\n    }\n\n    x[0] /= A[0];\n    return 1;\n  }\n\n  //\n  // System of equations is not trivial, use Crout's method\n  //\n\n  // Check on allocation of working vectors\n  const index = createArray(size);\n\n  // Factor and solve matrix\n  if (luFactorLinearSystem(A, index, size) === 0) {\n    return 0;\n  }\n  luSolveLinearSystem(A, index, x, size);\n\n  return 1;\n}\n\n// Note that A is modified during the inversion !\nexport function invertMatrix(A, AI, size, index = null, column = null) {\n  const tmp1Size = index || createArray(size);\n  const tmp2Size = column || createArray(size);\n\n  // Factor matrix; then begin solving for inverse one column at a time.\n  // Note: tmp1Size returned value is used later, tmp2Size is just working\n  // memory whose values are not used in LUSolveLinearSystem\n  if (luFactorLinearSystem(A, tmp1Size, size, tmp2Size) === 0) {\n    return null;\n  }\n\n  for (let j = 0; j < size; j++) {\n    for (let i = 0; i < size; i++) {\n      tmp2Size[i] = 0.0;\n    }\n    tmp2Size[j] = 1.0;\n\n    luSolveLinearSystem(A, tmp1Size, tmp2Size, size);\n\n    for (let i = 0; i < size; i++) {\n      AI[i * size + j] = tmp2Size[i];\n    }\n  }\n\n  return AI;\n}\n\nexport function estimateMatrixCondition(A, size) {\n  let minValue = +Number.MAX_VALUE;\n  let maxValue = -Number.MAX_VALUE;\n\n  // find the maximum value\n  for (let i = 0; i < size; i++) {\n    for (let j = i; j < size; j++) {\n      if (Math.abs(A[i * size + j]) > maxValue) {\n        maxValue = Math.abs(A[i * size + j]);\n      }\n    }\n  }\n\n  // find the minimum diagonal value\n  for (let i = 0; i < size; i++) {\n    if (Math.abs(A[i * size + i]) < minValue) {\n      minValue = Math.abs(A[i * size + i]);\n    }\n  }\n\n  if (minValue === 0.0) {\n    return Number.MAX_VALUE;\n  }\n  return maxValue / minValue;\n}\n\nexport function jacobi(a_3x3, w, v) {\n  return jacobiN(a_3x3, 3, w, v);\n}\n\nexport function solveHomogeneousLeastSquares(numberOfSamples, xt, xOrder, mt) {\n  // check dimensional consistency\n  if (numberOfSamples < xOrder) {\n    vtkWarningMacro('Insufficient number of samples. Underdetermined.');\n    return 0;\n  }\n\n  let i;\n  let j;\n  let k;\n\n  // set up intermediate variables\n  // Allocate matrix to hold X times transpose of X\n  const XXt = createArray(xOrder * xOrder); // size x by x\n  // Allocate the array of eigenvalues and eigenvectors\n  const eigenvals = createArray(xOrder);\n  const eigenvecs = createArray(xOrder * xOrder);\n\n  // Calculate XXt upper half only, due to symmetry\n  for (k = 0; k < numberOfSamples; k++) {\n    for (i = 0; i < xOrder; i++) {\n      for (j = i; j < xOrder; j++) {\n        XXt[i * xOrder + j] += xt[k * xOrder + i] * xt[k * xOrder + j];\n      }\n    }\n  }\n\n  // now fill in the lower half of the XXt matrix\n  for (i = 0; i < xOrder; i++) {\n    for (j = 0; j < i; j++) {\n      XXt[i * xOrder + j] = XXt[j * xOrder + i];\n    }\n  }\n\n  // Compute the eigenvectors and eigenvalues\n  jacobiN(XXt, xOrder, eigenvals, eigenvecs);\n\n  // Smallest eigenval is at the end of the list (xOrder-1), and solution is\n  // corresponding eigenvec.\n  for (i = 0; i < xOrder; i++) {\n    mt[i] = eigenvecs[i * xOrder + xOrder - 1];\n  }\n\n  return 1;\n}\n\nexport function solveLeastSquares(\n  numberOfSamples,\n  xt,\n  xOrder,\n  yt,\n  yOrder,\n  mt,\n  checkHomogeneous = true\n) {\n  // check dimensional consistency\n  if (numberOfSamples < xOrder || numberOfSamples < yOrder) {\n    vtkWarningMacro('Insufficient number of samples. Underdetermined.');\n    return 0;\n  }\n\n  const homogenFlags = createArray(yOrder);\n  let allHomogeneous = 1;\n  let hmt;\n  let homogRC = 0;\n  let i;\n  let j;\n  let k;\n  let someHomogeneous = 0;\n\n  // Ok, first init some flags check and see if all the systems are homogeneous\n  if (checkHomogeneous) {\n    // If Y' is zero, it's a homogeneous system and can't be solved via\n    // the pseudoinverse method. Detect this case, warn the user, and\n    // invoke SolveHomogeneousLeastSquares instead. Note that it doesn't\n    // really make much sense for yOrder to be greater than one in this case,\n    // since that's just yOrder occurrences of a 0 vector on the RHS, but\n    // we allow it anyway. N\n\n    // Initialize homogeneous flags on a per-right-hand-side basis\n    for (j = 0; j < yOrder; j++) {\n      homogenFlags[j] = 1;\n    }\n    for (i = 0; i < numberOfSamples; i++) {\n      for (j = 0; j < yOrder; j++) {\n        if (Math.abs(yt[i * yOrder + j]) > VTK_SMALL_NUMBER) {\n          allHomogeneous = 0;\n          homogenFlags[j] = 0;\n        }\n      }\n    }\n\n    // If we've got one system, and it's homogeneous, do it and bail out quickly.\n    if (allHomogeneous && yOrder === 1) {\n      vtkWarningMacro(\n        'Detected homogeneous system (Y=0), calling SolveHomogeneousLeastSquares()'\n      );\n      return solveHomogeneousLeastSquares(numberOfSamples, xt, xOrder, mt);\n    }\n\n    // Ok, we've got more than one system of equations.\n    // Figure out if we need to calculate the homogeneous equation solution for\n    // any of them.\n    if (allHomogeneous) {\n      someHomogeneous = 1;\n    } else {\n      for (j = 0; j < yOrder; j++) {\n        if (homogenFlags[j]) {\n          someHomogeneous = 1;\n        }\n      }\n    }\n  }\n\n  // If necessary, solve the homogeneous problem\n  if (someHomogeneous) {\n    // hmt is the homogeneous equation version of mt, the general solution.\n    // hmt should be xOrder x yOrder, but since we are solving only the homogeneous part, here it is xOrder x 1\n    hmt = createArray(xOrder);\n\n    // Ok, solve the homogeneous problem\n    homogRC = solveHomogeneousLeastSquares(numberOfSamples, xt, xOrder, hmt);\n  }\n\n  // set up intermediate variables\n  const XXt = createArray(xOrder * xOrder); // size x by x\n  const XXtI = createArray(xOrder * xOrder); // size x by x\n  const XYt = createArray(xOrder * yOrder); // size x by y\n\n  // first find the pseudoinverse matrix\n  for (k = 0; k < numberOfSamples; k++) {\n    for (i = 0; i < xOrder; i++) {\n      // first calculate the XXt matrix, only do the upper half (symmetrical)\n      for (j = i; j < xOrder; j++) {\n        XXt[i * xOrder + j] += xt[k * xOrder + i] * xt[k * xOrder + j];\n      }\n\n      // now calculate the XYt matrix\n      for (j = 0; j < yOrder; j++) {\n        XYt[i * yOrder + j] += xt[k * xOrder + i] * yt[k * yOrder + j];\n      }\n    }\n  }\n\n  // now fill in the lower half of the XXt matrix\n  for (i = 0; i < xOrder; i++) {\n    for (j = 0; j < i; j++) {\n      XXt[i * xOrder + j] = XXt[j * xOrder + i];\n    }\n  }\n\n  const successFlag = invertMatrix(XXt, XXtI, xOrder);\n\n  // next get the inverse of XXt\n  if (successFlag) {\n    for (i = 0; i < xOrder; i++) {\n      for (j = 0; j < yOrder; j++) {\n        mt[i * yOrder + j] = 0.0;\n        for (k = 0; k < xOrder; k++) {\n          mt[i * yOrder + j] += XXtI[i * xOrder + k] * XYt[k * yOrder + j];\n        }\n      }\n    }\n  }\n\n  // Fix up any of the solutions that correspond to the homogeneous equation\n  // problem.\n  if (someHomogeneous) {\n    for (j = 0; j < yOrder; j++) {\n      if (homogenFlags[j]) {\n        // Fix this one\n        for (i = 0; i < xOrder; i++) {\n          mt[i * yOrder + j] = hmt[i * yOrder];\n        }\n      }\n    }\n  }\n\n  if (someHomogeneous) {\n    return homogRC && successFlag;\n  }\n\n  return successFlag;\n}\n\nexport function hex2float(hexStr, outFloatArray = [0, 0.5, 1]) {\n  switch (hexStr.length) {\n    case 3: // abc => #aabbcc\n      outFloatArray[0] = (parseInt(hexStr[0], 16) * 17) / 255;\n      outFloatArray[1] = (parseInt(hexStr[1], 16) * 17) / 255;\n      outFloatArray[2] = (parseInt(hexStr[2], 16) * 17) / 255;\n      return outFloatArray;\n    case 4: // #abc => #aabbcc\n      outFloatArray[0] = (parseInt(hexStr[1], 16) * 17) / 255;\n      outFloatArray[1] = (parseInt(hexStr[2], 16) * 17) / 255;\n      outFloatArray[2] = (parseInt(hexStr[3], 16) * 17) / 255;\n      return outFloatArray;\n    case 6: // ab01df => #ab01df\n      outFloatArray[0] = parseInt(hexStr.substr(0, 2), 16) / 255;\n      outFloatArray[1] = parseInt(hexStr.substr(2, 2), 16) / 255;\n      outFloatArray[2] = parseInt(hexStr.substr(4, 2), 16) / 255;\n      return outFloatArray;\n    case 7: // #ab01df\n      outFloatArray[0] = parseInt(hexStr.substr(1, 2), 16) / 255;\n      outFloatArray[1] = parseInt(hexStr.substr(3, 2), 16) / 255;\n      outFloatArray[2] = parseInt(hexStr.substr(5, 2), 16) / 255;\n      return outFloatArray;\n    case 9: // #ab01df00\n      outFloatArray[0] = parseInt(hexStr.substr(1, 2), 16) / 255;\n      outFloatArray[1] = parseInt(hexStr.substr(3, 2), 16) / 255;\n      outFloatArray[2] = parseInt(hexStr.substr(5, 2), 16) / 255;\n      outFloatArray[3] = parseInt(hexStr.substr(7, 2), 16) / 255;\n      return outFloatArray;\n    default:\n      return outFloatArray;\n  }\n}\n\nexport function rgb2hsv(rgb, hsv) {\n  let h;\n  let s;\n  const [r, g, b] = rgb;\n  const onethird = 1.0 / 3.0;\n  const onesixth = 1.0 / 6.0;\n  const twothird = 2.0 / 3.0;\n\n  let cmax = r;\n  let cmin = r;\n\n  if (g > cmax) {\n    cmax = g;\n  } else if (g < cmin) {\n    cmin = g;\n  }\n  if (b > cmax) {\n    cmax = b;\n  } else if (b < cmin) {\n    cmin = b;\n  }\n  const v = cmax;\n\n  if (v > 0.0) {\n    s = (cmax - cmin) / cmax;\n  } else {\n    s = 0.0;\n  }\n  if (s > 0) {\n    if (r === cmax) {\n      h = (onesixth * (g - b)) / (cmax - cmin);\n    } else if (g === cmax) {\n      h = onethird + (onesixth * (b - r)) / (cmax - cmin);\n    } else {\n      h = twothird + (onesixth * (r - g)) / (cmax - cmin);\n    }\n    if (h < 0.0) {\n      h += 1.0;\n    }\n  } else {\n    h = 0.0;\n  }\n\n  // Set the values back to the array\n  hsv[0] = h;\n  hsv[1] = s;\n  hsv[2] = v;\n}\n\nexport function hsv2rgb(hsv, rgb) {\n  const [h, s, v] = hsv;\n  const onethird = 1.0 / 3.0;\n  const onesixth = 1.0 / 6.0;\n  const twothird = 2.0 / 3.0;\n  const fivesixth = 5.0 / 6.0;\n  let r;\n  let g;\n  let b;\n\n  // compute RGB from HSV\n  if (h > onesixth && h <= onethird) {\n    // green/red\n    g = 1.0;\n    r = (onethird - h) / onesixth;\n    b = 0.0;\n  } else if (h > onethird && h <= 0.5) {\n    // green/blue\n    g = 1.0;\n    b = (h - onethird) / onesixth;\n    r = 0.0;\n  } else if (h > 0.5 && h <= twothird) {\n    // blue/green\n    b = 1.0;\n    g = (twothird - h) / onesixth;\n    r = 0.0;\n  } else if (h > twothird && h <= fivesixth) {\n    // blue/red\n    b = 1.0;\n    r = (h - twothird) / onesixth;\n    g = 0.0;\n  } else if (h > fivesixth && h <= 1.0) {\n    // red/blue\n    r = 1.0;\n    b = (1.0 - h) / onesixth;\n    g = 0.0;\n  } else {\n    // red/green\n    r = 1.0;\n    g = h / onesixth;\n    b = 0.0;\n  }\n\n  // add Saturation to the equation.\n  r = s * r + (1.0 - s);\n  g = s * g + (1.0 - s);\n  b = s * b + (1.0 - s);\n\n  r *= v;\n  g *= v;\n  b *= v;\n\n  // Assign back to the array\n  rgb[0] = r;\n  rgb[1] = g;\n  rgb[2] = b;\n}\n\nexport function lab2xyz(lab, xyz) {\n  // LAB to XYZ\n  const [L, a, b] = lab;\n  let var_Y = (L + 16) / 116;\n  let var_X = a / 500 + var_Y;\n  let var_Z = var_Y - b / 200;\n\n  if (var_Y ** 3 > 0.008856) {\n    var_Y **= 3;\n  } else {\n    var_Y = (var_Y - 16.0 / 116.0) / 7.787;\n  }\n\n  if (var_X ** 3 > 0.008856) {\n    var_X **= 3;\n  } else {\n    var_X = (var_X - 16.0 / 116.0) / 7.787;\n  }\n\n  if (var_Z ** 3 > 0.008856) {\n    var_Z **= 3;\n  } else {\n    var_Z = (var_Z - 16.0 / 116.0) / 7.787;\n  }\n  const ref_X = 0.9505;\n  const ref_Y = 1.0;\n  const ref_Z = 1.089;\n  xyz[0] = ref_X * var_X; // ref_X = 0.9505  Observer= 2 deg Illuminant= D65\n  xyz[1] = ref_Y * var_Y; // ref_Y = 1.000\n  xyz[2] = ref_Z * var_Z; // ref_Z = 1.089\n}\n\nexport function xyz2lab(xyz, lab) {\n  const [x, y, z] = xyz;\n  const ref_X = 0.9505;\n  const ref_Y = 1.0;\n  const ref_Z = 1.089;\n  let var_X = x / ref_X; // ref_X = 0.9505  Observer= 2 deg, Illuminant= D65\n  let var_Y = y / ref_Y; // ref_Y = 1.000\n  let var_Z = z / ref_Z; // ref_Z = 1.089\n\n  if (var_X > 0.008856) var_X **= 1.0 / 3.0;\n  else var_X = 7.787 * var_X + 16.0 / 116.0;\n  if (var_Y > 0.008856) var_Y **= 1.0 / 3.0;\n  else var_Y = 7.787 * var_Y + 16.0 / 116.0;\n  if (var_Z > 0.008856) var_Z **= 1.0 / 3.0;\n  else var_Z = 7.787 * var_Z + 16.0 / 116.0;\n\n  lab[0] = 116 * var_Y - 16;\n  lab[1] = 500 * (var_X - var_Y);\n  lab[2] = 200 * (var_Y - var_Z);\n}\n\nexport function xyz2rgb(xyz, rgb) {\n  const [x, y, z] = xyz;\n  let r = x * 3.2406 + y * -1.5372 + z * -0.4986;\n  let g = x * -0.9689 + y * 1.8758 + z * 0.0415;\n  let b = x * 0.0557 + y * -0.204 + z * 1.057;\n\n  // The following performs a \"gamma correction\" specified by the sRGB color\n  // space.  sRGB is defined by a canonical definition of a display monitor and\n  // has been standardized by the International Electrotechnical Commission (IEC\n  // 61966-2-1).  The nonlinearity of the correction is designed to make the\n  // colors more perceptually uniform.  This color space has been adopted by\n  // several applications including Adobe Photoshop and Microsoft Windows color\n  // management.  OpenGL is agnostic on its RGB color space, but it is reasonable\n  // to assume it is close to this one.\n  if (r > 0.0031308) r = 1.055 * r ** (1 / 2.4) - 0.055;\n  else r *= 12.92;\n  if (g > 0.0031308) g = 1.055 * g ** (1 / 2.4) - 0.055;\n  else g *= 12.92;\n  if (b > 0.0031308) b = 1.055 * b ** (1 / 2.4) - 0.055;\n  else b *= 12.92;\n\n  // Clip colors. ideally we would do something that is perceptually closest\n  // (since we can see colors outside of the display gamut), but this seems to\n  // work well enough.\n  let maxVal = r;\n  if (maxVal < g) maxVal = g;\n  if (maxVal < b) maxVal = b;\n  if (maxVal > 1.0) {\n    r /= maxVal;\n    g /= maxVal;\n    b /= maxVal;\n  }\n  if (r < 0) r = 0;\n  if (g < 0) g = 0;\n  if (b < 0) b = 0;\n\n  // Push values back to array\n  rgb[0] = r;\n  rgb[1] = g;\n  rgb[2] = b;\n}\n\nexport function rgb2xyz(rgb, xyz) {\n  let [r, g, b] = rgb;\n  // The following performs a \"gamma correction\" specified by the sRGB color\n  // space.  sRGB is defined by a canonical definition of a display monitor and\n  // has been standardized by the International Electrotechnical Commission (IEC\n  // 61966-2-1).  The nonlinearity of the correction is designed to make the\n  // colors more perceptually uniform.  This color space has been adopted by\n  // several applications including Adobe Photoshop and Microsoft Windows color\n  // management.  OpenGL is agnostic on its RGB color space, but it is reasonable\n  // to assume it is close to this one.\n  if (r > 0.04045) r = ((r + 0.055) / 1.055) ** 2.4;\n  else r /= 12.92;\n  if (g > 0.04045) g = ((g + 0.055) / 1.055) ** 2.4;\n  else g /= 12.92;\n  if (b > 0.04045) b = ((b + 0.055) / 1.055) ** 2.4;\n  else b /= 12.92;\n\n  // Observer. = 2 deg, Illuminant = D65\n  xyz[0] = r * 0.4124 + g * 0.3576 + b * 0.1805;\n  xyz[1] = r * 0.2126 + g * 0.7152 + b * 0.0722;\n  xyz[2] = r * 0.0193 + g * 0.1192 + b * 0.9505;\n}\n\nexport function rgb2lab(rgb, lab) {\n  const xyz = [0, 0, 0];\n  rgb2xyz(rgb, xyz);\n  xyz2lab(xyz, lab);\n}\n\nexport function lab2rgb(lab, rgb) {\n  const xyz = [0, 0, 0];\n  lab2xyz(lab, xyz);\n  xyz2rgb(xyz, rgb);\n}\n\nexport function uninitializeBounds(bounds) {\n  bounds[0] = 1.0;\n  bounds[1] = -1.0;\n  bounds[2] = 1.0;\n  bounds[3] = -1.0;\n  bounds[4] = 1.0;\n  bounds[5] = -1.0;\n  return bounds;\n}\n\nexport function areBoundsInitialized(bounds) {\n  return !(bounds[1] - bounds[0] < 0.0);\n}\n\n/**\n * @deprecated please use vtkBoundingBox.addPoints(vtkBoundingBox.reset([]), points)\n */\nexport function computeBoundsFromPoints(point1, point2, bounds) {\n  bounds[0] = Math.min(point1[0], point2[0]);\n  bounds[1] = Math.max(point1[0], point2[0]);\n  bounds[2] = Math.min(point1[1], point2[1]);\n  bounds[3] = Math.max(point1[1], point2[1]);\n  bounds[4] = Math.min(point1[2], point2[2]);\n  bounds[5] = Math.max(point1[2], point2[2]);\n  return bounds;\n}\n\nexport function clampValue(value, minValue, maxValue) {\n  if (value < minValue) {\n    return minValue;\n  }\n  if (value > maxValue) {\n    return maxValue;\n  }\n  return value;\n}\n\nexport function clampVector(vector, minVector, maxVector, out = [0, 0, 0]) {\n  out[0] = clampValue(vector[0], minVector[0], maxVector[0]);\n  out[1] = clampValue(vector[1], minVector[1], maxVector[1]);\n  out[2] = clampValue(vector[2], minVector[2], maxVector[2]);\n\n  return out;\n}\n\nexport function clampAndNormalizeValue(value, range) {\n  let result = 0;\n  if (range[0] !== range[1]) {\n    // clamp\n    if (value < range[0]) {\n      result = range[0];\n    } else if (value > range[1]) {\n      result = range[1];\n    } else {\n      result = value;\n    }\n    // normalize\n    result = (result - range[0]) / (range[1] - range[0]);\n  }\n\n  return result;\n}\n\nexport const getScalarTypeFittingRange = notImplemented(\n  'GetScalarTypeFittingRange'\n);\nexport const getAdjustedScalarRange = notImplemented('GetAdjustedScalarRange');\n\nexport function extentIsWithinOtherExtent(extent1, extent2) {\n  if (!extent1 || !extent2) {\n    return 0;\n  }\n\n  for (let i = 0; i < 6; i += 2) {\n    if (\n      extent1[i] < extent2[i] ||\n      extent1[i] > extent2[i + 1] ||\n      extent1[i + 1] < extent2[i] ||\n      extent1[i + 1] > extent2[i + 1]\n    ) {\n      return 0;\n    }\n  }\n\n  return 1;\n}\n\nexport function boundsIsWithinOtherBounds(bounds1_6, bounds2_6, delta_3) {\n  if (!bounds1_6 || !bounds2_6) {\n    return 0;\n  }\n  for (let i = 0; i < 6; i += 2) {\n    if (\n      bounds1_6[i] + delta_3[i / 2] < bounds2_6[i] ||\n      bounds1_6[i] - delta_3[i / 2] > bounds2_6[i + 1] ||\n      bounds1_6[i + 1] + delta_3[i / 2] < bounds2_6[i] ||\n      bounds1_6[i + 1] - delta_3[i / 2] > bounds2_6[i + 1]\n    ) {\n      return 0;\n    }\n  }\n  return 1;\n}\n\nexport function pointIsWithinBounds(point_3, bounds_6, delta_3) {\n  if (!point_3 || !bounds_6 || !delta_3) {\n    return 0;\n  }\n  for (let i = 0; i < 3; i++) {\n    if (\n      point_3[i] + delta_3[i] < bounds_6[2 * i] ||\n      point_3[i] - delta_3[i] > bounds_6[2 * i + 1]\n    ) {\n      return 0;\n    }\n  }\n  return 1;\n}\n\nexport function solve3PointCircle(p1, p2, p3, center) {\n  const v21 = createArray(3);\n  const v32 = createArray(3);\n  const v13 = createArray(3);\n  const v12 = createArray(3);\n  const v23 = createArray(3);\n  const v31 = createArray(3);\n\n  for (let i = 0; i < 3; ++i) {\n    v21[i] = p1[i] - p2[i];\n    v32[i] = p2[i] - p3[i];\n    v13[i] = p3[i] - p1[i];\n    v12[i] = -v21[i];\n    v23[i] = -v32[i];\n    v31[i] = -v13[i];\n  }\n\n  const norm12 = norm(v12);\n  const norm23 = norm(v23);\n  const norm13 = norm(v13);\n\n  const crossv21v32 = createArray(3);\n  cross(v21, v32, crossv21v32);\n  const normCross = norm(crossv21v32);\n\n  const radius = (norm12 * norm23 * norm13) / (2 * normCross);\n\n  const normCross22 = 2 * normCross * normCross;\n  const alpha = (norm23 * norm23 * dot(v21, v31)) / normCross22;\n  const beta = (norm13 * norm13 * dot(v12, v32)) / normCross22;\n  const gamma = (norm12 * norm12 * dot(v13, v23)) / normCross22;\n\n  for (let i = 0; i < 3; ++i) {\n    center[i] = alpha * p1[i] + beta * p2[i] + gamma * p3[i];\n  }\n  return radius;\n}\n\nexport const inf = Infinity;\nexport const negInf = -Infinity;\n\nexport const isInf = (value) => !Number.isFinite(value);\nexport const { isFinite, isNaN } = Number;\nexport const isNan = isNaN;\n\n// JavaScript - add-on ----------------------\n\nexport function createUninitializedBounds() {\n  return [].concat([\n    Number.MAX_VALUE,\n    -Number.MAX_VALUE, // X\n    Number.MAX_VALUE,\n    -Number.MAX_VALUE, // Y\n    Number.MAX_VALUE,\n    -Number.MAX_VALUE, // Z\n  ]);\n}\n\nexport function getMajorAxisIndex(vector) {\n  let maxValue = -1;\n  let axisIndex = -1;\n  for (let i = 0; i < vector.length; i++) {\n    const value = Math.abs(vector[i]);\n    if (value > maxValue) {\n      axisIndex = i;\n      maxValue = value;\n    }\n  }\n\n  return axisIndex;\n}\n\nexport function floatToHex2(value) {\n  const integer = Math.floor(value * 255);\n  if (integer > 15) {\n    return integer.toString(16);\n  }\n  return `0${integer.toString(16)}`;\n}\n\nexport function floatRGB2HexCode(rgbArray, prefix = '#') {\n  return `${prefix}${rgbArray.map(floatToHex2).join('')}`;\n}\n\nfunction floatToChar(f) {\n  return Math.round(f * 255);\n}\n\nexport function float2CssRGBA(rgbArray) {\n  if (rgbArray.length === 3) {\n    return `rgb(${rgbArray.map(floatToChar).join(', ')})`;\n  }\n  return `rgba(${floatToChar(rgbArray[0] || 0)}, ${floatToChar(\n    rgbArray[1] || 0\n  )}, ${floatToChar(rgbArray[2] || 0)}, ${rgbArray[3] || 0})`;\n}\n\n// ----------------------------------------------------------------------------\n// Only Static API\n// ----------------------------------------------------------------------------\n\nexport default {\n  Pi,\n  radiansFromDegrees,\n  degreesFromRadians,\n  round,\n  floor,\n  ceil,\n  ceilLog2,\n  min,\n  max,\n  arrayMin,\n  arrayMax,\n  arrayRange,\n  isPowerOfTwo,\n  nearestPowerOfTwo,\n  factorial,\n  binomial,\n  beginCombination,\n  nextCombination,\n  randomSeed,\n  getSeed,\n  random,\n  gaussian,\n  add,\n  subtract,\n  multiplyScalar,\n  multiplyScalar2D,\n  multiplyAccumulate,\n  multiplyAccumulate2D,\n  dot,\n  outer,\n  cross,\n  norm,\n  normalize,\n  perpendiculars,\n  projectVector,\n  projectVector2D,\n  distance2BetweenPoints,\n  angleBetweenVectors,\n  gaussianAmplitude,\n  gaussianWeight,\n  dot2D,\n  outer2D,\n  norm2D,\n  normalize2D,\n  determinant2x2,\n  LUFactor3x3,\n  LUSolve3x3,\n  linearSolve3x3,\n  multiply3x3_vect3,\n  multiply3x3_mat3,\n  multiplyMatrix,\n  transpose3x3,\n  invert3x3,\n  identity3x3,\n  identity,\n  isIdentity,\n  isIdentity3x3,\n  determinant3x3,\n  quaternionToMatrix3x3,\n  areEquals,\n  areMatricesEqual,\n  roundNumber,\n  roundVector,\n  matrix3x3ToQuaternion,\n  multiplyQuaternion,\n  orthogonalize3x3,\n  diagonalize3x3,\n  singularValueDecomposition3x3,\n  solveLinearSystem,\n  invertMatrix,\n  luFactorLinearSystem,\n  luSolveLinearSystem,\n  estimateMatrixCondition,\n  jacobi,\n  jacobiN,\n  solveHomogeneousLeastSquares,\n  solveLeastSquares,\n  hex2float,\n  rgb2hsv,\n  hsv2rgb,\n  lab2xyz,\n  xyz2lab,\n  xyz2rgb,\n  rgb2xyz,\n  rgb2lab,\n  lab2rgb,\n  uninitializeBounds,\n  areBoundsInitialized,\n  computeBoundsFromPoints,\n  clampValue,\n  clampVector,\n  clampAndNormalizeValue,\n  getScalarTypeFittingRange,\n  getAdjustedScalarRange,\n  extentIsWithinOtherExtent,\n  boundsIsWithinOtherBounds,\n  pointIsWithinBounds,\n  solve3PointCircle,\n  inf,\n  negInf,\n  isInf,\n  isNan: isNaN,\n  isNaN,\n  isFinite,\n\n  // JS add-on\n  createUninitializedBounds,\n  getMajorAxisIndex,\n  floatToHex2,\n  floatRGB2HexCode,\n  float2CssRGBA,\n};\n","import macro from 'vtk.js/Sources/macros';\nimport vtkDataArray from 'vtk.js/Sources/Common/Core/DataArray';\nimport { VtkDataTypes } from 'vtk.js/Sources/Common/Core/DataArray/Constants';\n\nconst { vtkErrorMacro } = macro;\n\nconst INVALID_BOUNDS = [1, -1, 1, -1, 1, -1];\n\n// ----------------------------------------------------------------------------\n// vtkPoints methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPoints(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPoints');\n\n  // Forwarding methods\n  publicAPI.getNumberOfPoints = publicAPI.getNumberOfTuples;\n\n  publicAPI.setNumberOfPoints = (nbPoints, dimension = 3) => {\n    if (publicAPI.getNumberOfPoints() !== nbPoints) {\n      model.size = nbPoints * dimension;\n      model.values = macro.newTypedArray(model.dataType, model.size);\n      publicAPI.setNumberOfComponents(dimension);\n      publicAPI.modified();\n    }\n  };\n\n  publicAPI.setPoint = (idx, ...xyz) => {\n    publicAPI.setTuple(idx, xyz);\n  };\n\n  publicAPI.getPoint = publicAPI.getTuple;\n\n  publicAPI.insertNextPoint = (x, y, z) => publicAPI.insertNextTuple([x, y, z]);\n\n  publicAPI.getBounds = () => {\n    if (publicAPI.getNumberOfComponents() === 3) {\n      const xRange = publicAPI.getRange(0);\n      model.bounds[0] = xRange[0];\n      model.bounds[1] = xRange[1];\n      const yRange = publicAPI.getRange(1);\n      model.bounds[2] = yRange[0];\n      model.bounds[3] = yRange[1];\n      const zRange = publicAPI.getRange(2);\n      model.bounds[4] = zRange[0];\n      model.bounds[5] = zRange[1];\n      return model.bounds;\n    }\n\n    if (publicAPI.getNumberOfComponents() !== 2) {\n      vtkErrorMacro(`getBounds called on an array with components of\n        ${publicAPI.getNumberOfComponents()}`);\n      return INVALID_BOUNDS;\n    }\n\n    const xRange = publicAPI.getRange(0);\n    model.bounds[0] = xRange[0];\n    model.bounds[1] = xRange[1];\n    const yRange = publicAPI.getRange(1);\n    model.bounds[2] = yRange[0];\n    model.bounds[3] = yRange[1];\n    model.bounds[4] = 0;\n    model.bounds[5] = 0;\n\n    return model.bounds;\n  };\n\n  // Trigger the computation of bounds\n  publicAPI.computeBounds = publicAPI.getBounds;\n\n  // Initialize\n  publicAPI.setNumberOfComponents(\n    model.numberOfComponents < 2 ? 3 : model.numberOfComponents\n  );\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  empty: true,\n  numberOfComponents: 3,\n  dataType: VtkDataTypes.FLOAT,\n  bounds: [1, -1, 1, -1, 1, -1],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  vtkDataArray.extend(publicAPI, model, initialValues);\n  vtkPoints(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkPoints');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport { vec3 } from 'gl-matrix';\nimport vtkPlane from 'vtk.js/Sources/Common/DataModel/Plane';\n\nconst INIT_BOUNDS = [\n  Number.MAX_VALUE,\n  -Number.MAX_VALUE, // X\n  Number.MAX_VALUE,\n  -Number.MAX_VALUE, // Y\n  Number.MAX_VALUE,\n  -Number.MAX_VALUE, // Z\n];\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nexport function equals(a, b) {\n  return (\n    a[0] === b[0] &&\n    a[1] === b[1] &&\n    a[2] === b[2] &&\n    a[3] === b[3] &&\n    a[4] === b[4] &&\n    a[5] === b[5]\n  );\n}\n\nexport function isValid(bounds) {\n  return (\n    bounds[0] <= bounds[1] && bounds[2] <= bounds[3] && bounds[4] <= bounds[5]\n  );\n}\n\nexport function setBounds(bounds, otherBounds) {\n  bounds[0] = otherBounds[0];\n  bounds[1] = otherBounds[1];\n  bounds[2] = otherBounds[2];\n  bounds[3] = otherBounds[3];\n  bounds[4] = otherBounds[4];\n  bounds[5] = otherBounds[5];\n  return bounds;\n}\n\nexport function reset(bounds) {\n  return setBounds(bounds, INIT_BOUNDS);\n}\n\nexport function addPoint(bounds, x, y, z) {\n  const [xMin, xMax, yMin, yMax, zMin, zMax] = bounds;\n  bounds[0] = xMin < x ? xMin : x;\n  bounds[1] = xMax > x ? xMax : x;\n  bounds[2] = yMin < y ? yMin : y;\n  bounds[3] = yMax > y ? yMax : y;\n  bounds[4] = zMin < z ? zMin : z;\n  bounds[5] = zMax > z ? zMax : z;\n  return bounds;\n}\n\nexport function addPoints(bounds, points) {\n  if (points.length === 0) {\n    return bounds;\n  }\n  if (Array.isArray(points[0])) {\n    for (let i = 0; i < points.length; ++i) {\n      addPoint(bounds, ...points[i]);\n    }\n  } else {\n    for (let i = 0; i < points.length; i += 3) {\n      addPoint(bounds, ...points.slice(i, i + 3));\n    }\n  }\n  return bounds;\n}\n\nexport function addBounds(bounds, xMin, xMax, yMin, yMax, zMin, zMax) {\n  const [_xMin, _xMax, _yMin, _yMax, _zMin, _zMax] = bounds;\n  if (zMax === undefined) {\n    bounds[0] = Math.min(xMin[0], _xMin);\n    bounds[1] = Math.max(xMin[1], _xMax);\n    bounds[2] = Math.min(xMin[2], _yMin);\n    bounds[3] = Math.max(xMin[3], _yMax);\n    bounds[4] = Math.min(xMin[4], _zMin);\n    bounds[5] = Math.max(xMin[5], _zMax);\n  } else {\n    bounds[0] = Math.min(xMin, _xMin);\n    bounds[1] = Math.max(xMax, _xMax);\n    bounds[2] = Math.min(yMin, _yMin);\n    bounds[3] = Math.max(yMax, _yMax);\n    bounds[4] = Math.min(zMin, _zMin);\n    bounds[5] = Math.max(zMax, _zMax);\n  }\n  return bounds;\n}\n\nexport function setMinPoint(bounds, x, y, z) {\n  const [xMin, xMax, yMin, yMax, zMin, zMax] = bounds;\n  bounds[0] = x;\n  bounds[1] = x > xMax ? x : xMax;\n  bounds[2] = y;\n  bounds[3] = y > yMax ? y : yMax;\n  bounds[4] = z;\n  bounds[5] = z > zMax ? z : zMax;\n  return xMin !== x || yMin !== y || zMin !== z;\n}\n\nexport function setMaxPoint(bounds, x, y, z) {\n  const [xMin, xMax, yMin, yMax, zMin, zMax] = bounds;\n  bounds[0] = x < xMin ? x : xMin;\n  bounds[1] = x;\n  bounds[2] = y < yMin ? y : yMin;\n  bounds[3] = y;\n  bounds[4] = z < zMin ? z : zMin;\n  bounds[5] = z;\n\n  return xMax !== x || yMax !== y || zMax !== z;\n}\n\nexport function inflate(bounds, delta) {\n  bounds[0] -= delta;\n  bounds[1] += delta;\n  bounds[2] -= delta;\n  bounds[3] += delta;\n  bounds[4] -= delta;\n  bounds[5] += delta;\n  return bounds;\n}\n\nexport function scale(bounds, sx, sy, sz) {\n  if (!isValid(bounds)) {\n    return false;\n  }\n  if (sx >= 0.0) {\n    bounds[0] *= sx;\n    bounds[1] *= sx;\n  } else {\n    bounds[0] = sx * bounds[1];\n    bounds[1] = sx * bounds[0];\n  }\n\n  if (sy >= 0.0) {\n    bounds[2] *= sy;\n    bounds[3] *= sy;\n  } else {\n    bounds[2] = sy * bounds[3];\n    bounds[3] = sy * bounds[2];\n  }\n\n  if (sz >= 0.0) {\n    bounds[4] *= sz;\n    bounds[5] *= sz;\n  } else {\n    bounds[4] = sz * bounds[5];\n    bounds[5] = sz * bounds[4];\n  }\n\n  return true;\n}\n\nexport function getCenter(bounds) {\n  return [\n    0.5 * (bounds[0] + bounds[1]),\n    0.5 * (bounds[2] + bounds[3]),\n    0.5 * (bounds[4] + bounds[5]),\n  ];\n}\n\nexport function scaleAboutCenter(bounds, sx, sy, sz) {\n  if (!isValid(bounds)) {\n    return false;\n  }\n  const center = getCenter(bounds);\n  bounds[0] -= center[0];\n  bounds[1] -= center[0];\n  bounds[2] -= center[1];\n  bounds[3] -= center[1];\n  bounds[4] -= center[2];\n  bounds[5] -= center[2];\n  scale(bounds, sx, sy, sz);\n  bounds[0] += center[0];\n  bounds[1] += center[0];\n  bounds[2] += center[1];\n  bounds[3] += center[1];\n  bounds[4] += center[2];\n  bounds[5] += center[2];\n\n  return true;\n}\n\nexport function getLength(bounds, index) {\n  return bounds[index * 2 + 1] - bounds[index * 2];\n}\n\nexport function getLengths(bounds) {\n  return [getLength(bounds, 0), getLength(bounds, 1), getLength(bounds, 2)];\n}\n\nexport function getXRange(bounds) {\n  return bounds.slice(0, 2);\n}\n\nexport function getYRange(bounds) {\n  return bounds.slice(2, 4);\n}\n\nexport function getZRange(bounds) {\n  return bounds.slice(4, 6);\n}\n\nexport function getMaxLength(bounds) {\n  const l = getLengths(bounds);\n  if (l[0] > l[1]) {\n    if (l[0] > l[2]) {\n      return l[0];\n    }\n    return l[2];\n  }\n\n  if (l[1] > l[2]) {\n    return l[1];\n  }\n\n  return l[2];\n}\n\nexport function getDiagonalLength(bounds) {\n  if (isValid(bounds)) {\n    const l = getLengths(bounds);\n    return Math.sqrt(l[0] * l[0] + l[1] * l[1] + l[2] * l[2]);\n  }\n  return null;\n}\n\nexport function getMinPoint(bounds) {\n  return [bounds[0], bounds[2], bounds[4]];\n}\n\nexport function getMaxPoint(bounds) {\n  return [bounds[1], bounds[3], bounds[5]];\n}\n\nfunction oppositeSign(a, b) {\n  return (a <= 0 && b >= 0) || (a >= 0 && b <= 0);\n}\n\nexport function getCorners(bounds, corners) {\n  let count = 0;\n  for (let ix = 0; ix < 2; ix++) {\n    for (let iy = 2; iy < 4; iy++) {\n      for (let iz = 4; iz < 6; iz++) {\n        corners[count] = [bounds[ix], bounds[iy], bounds[iz]];\n        count++;\n      }\n    }\n  }\n  return corners;\n}\n\n// Computes the two corners with minimal and miximal coordinates\nexport function computeCornerPoints(bounds, point1, point2) {\n  point1[0] = bounds[0];\n  point1[1] = bounds[2];\n  point1[2] = bounds[4];\n\n  point2[0] = bounds[1];\n  point2[1] = bounds[3];\n  point2[2] = bounds[5];\n  return point1;\n}\n\nexport function transformBounds(bounds, transform, out = []) {\n  if (out.length < 6) {\n    reset(out);\n  }\n  const corners = getCorners(bounds, []);\n  for (let i = 0; i < corners.length; ++i) {\n    vec3.transformMat4(corners[i], corners[i], transform);\n  }\n  return addPoints(out, corners);\n}\n\nexport function computeScale3(bounds, scale3 = []) {\n  scale3[0] = 0.5 * (bounds[1] - bounds[0]);\n  scale3[1] = 0.5 * (bounds[3] - bounds[2]);\n  scale3[2] = 0.5 * (bounds[5] - bounds[4]);\n  return scale3;\n}\n\n/**\n * Compute local bounds.\n * Not as fast as vtkPoints.getBounds() if u, v, w form a natural basis.\n * @param {vtkPoints} points\n * @param {array} u first vector\n * @param {array} v second vector\n * @param {array} w third vector\n */\nexport function computeLocalBounds(points, u, v, w) {\n  const bounds = [].concat(INIT_BOUNDS);\n  const pointsData = points.getData();\n  for (let i = 0; i < pointsData.length; i += 3) {\n    const point = [pointsData[i], pointsData[i + 1], pointsData[i + 2]];\n    const du = vtkMath.dot(point, u);\n    bounds[0] = Math.min(du, bounds[0]);\n    bounds[1] = Math.max(du, bounds[1]);\n    const dv = vtkMath.dot(point, v);\n    bounds[2] = Math.min(dv, bounds[2]);\n    bounds[3] = Math.max(dv, bounds[3]);\n    const dw = vtkMath.dot(point, w);\n    bounds[4] = Math.min(dw, bounds[4]);\n    bounds[5] = Math.max(dw, bounds[5]);\n  }\n  return bounds;\n}\n\n// The method returns a non-zero value if the bounding box is hit.\n// Origin[3] starts the ray, dir[3] is the vector components of the ray in the x-y-z\n// directions, coord[3] is the location of hit, and t is the parametric\n// coordinate along line. (Notes: the intersection ray dir[3] is NOT\n// normalized.  Valid intersections will only occur between 0<=t<=1.)\nexport function intersectBox(bounds, origin, dir, coord, tolerance) {\n  let inside = true;\n  const quadrant = [];\n  let whichPlane = 0;\n  const maxT = [];\n  const candidatePlane = [0.0, 0.0, 0.0];\n  const RIGHT = 0;\n  const LEFT = 1;\n  const MIDDLE = 2;\n\n  // First find closest planes\n  for (let i = 0; i < 3; i++) {\n    if (origin[i] < bounds[2 * i]) {\n      quadrant[i] = LEFT;\n      candidatePlane[i] = bounds[2 * i];\n      inside = false;\n    } else if (origin[i] > bounds[2 * i + 1]) {\n      quadrant[i] = RIGHT;\n      candidatePlane[i] = bounds[2 * i + 1];\n      inside = false;\n    } else {\n      quadrant[i] = MIDDLE;\n    }\n  }\n\n  // Check whether origin of ray is inside bbox\n  if (inside) {\n    coord[0] = origin[0];\n    coord[1] = origin[1];\n    coord[2] = origin[2];\n    tolerance[0] = 0;\n    return 1;\n  }\n\n  // Calculate parametric distance to plane\n  for (let i = 0; i < 3; i++) {\n    if (quadrant[i] !== MIDDLE && dir[i] !== 0.0) {\n      maxT[i] = (candidatePlane[i] - origin[i]) / dir[i];\n    } else {\n      maxT[i] = -1.0;\n    }\n  }\n\n  // Find the largest parametric value of intersection\n  for (let i = 0; i < 3; i++) {\n    if (maxT[whichPlane] < maxT[i]) {\n      whichPlane = i;\n    }\n  }\n\n  // Check for valie intersection along line\n  if (maxT[whichPlane] > 1.0 || maxT[whichPlane] < 0.0) {\n    return 0;\n  }\n\n  tolerance[0] = maxT[whichPlane];\n\n  // Intersection point along line is okay. Check bbox.\n  for (let i = 0; i < 3; i++) {\n    if (whichPlane !== i) {\n      coord[i] = origin[i] + maxT[whichPlane] * dir[i];\n      if (coord[i] < bounds[2 * i] || coord[i] > bounds[2 * i + 1]) {\n        return 0;\n      }\n    } else {\n      coord[i] = candidatePlane[i];\n    }\n  }\n\n  return 1;\n}\n\n// Plane intersection with box\n// The plane is infinite in extent and defined by an origin and normal.The function indicates\n// whether the plane intersects, not the particulars of intersection points and such\n// The function returns non-zero if the plane and box intersect; zero otherwise.\nexport function intersectPlane(bounds, origin, normal) {\n  const p = [];\n  let d = 0;\n  let sign = 1;\n  let firstOne = 1;\n\n  // Evaluate the eight points. If there is a sign change, there is an intersection\n  for (let z = 4; z <= 5; ++z) {\n    p[2] = bounds[z];\n    for (let y = 2; y <= 3; ++y) {\n      p[1] = bounds[y];\n      for (let x = 0; x <= 1; ++x) {\n        p[0] = bounds[x];\n        d = vtkPlane.evaluate(normal, origin, p);\n        if (firstOne) {\n          sign = d >= 0 ? 1 : -1;\n          firstOne = 0;\n        }\n        if (d === 0.0 || (sign > 0 && d < 0.0) || (sign < 0 && d > 0.0)) {\n          return 1;\n        }\n      }\n    }\n  }\n\n  return 0; // no intersection\n}\n\nexport function intersect(bounds, bBounds) {\n  if (!(isValid(bounds) && isValid(bBounds))) {\n    return false;\n  }\n\n  const newBounds = [0, 0, 0, 0, 0, 0];\n  let intersection;\n  for (let i = 0; i < 3; i++) {\n    intersection = false;\n    if (\n      bBounds[i * 2] >= bounds[i * 2] &&\n      bBounds[i * 2] <= bounds[i * 2 + 1]\n    ) {\n      intersection = true;\n      newBounds[i * 2] = bBounds[i * 2];\n    } else if (\n      bounds[i * 2] >= bBounds[i * 2] &&\n      bounds[i * 2] <= bBounds[i * 2 + 1]\n    ) {\n      intersection = true;\n      newBounds[i * 2] = bounds[i * 2];\n    }\n\n    if (\n      bBounds[i * 2 + 1] >= bounds[i * 2] &&\n      bBounds[i * 2 + 1] <= bounds[i * 2 + 1]\n    ) {\n      intersection = true;\n      newBounds[i * 2 + 1] = bBounds[2 * i + 1];\n    } else if (\n      bounds[i * 2 + 1] >= bBounds[i * 2] &&\n      bounds[i * 2 + 1] <= bBounds[i * 2 + 1]\n    ) {\n      intersection = true;\n      newBounds[i * 2 + 1] = bounds[i * 2 + 1];\n    }\n\n    if (!intersection) {\n      return false;\n    }\n  }\n\n  // OK they did intersect - set the box to be the result\n  bounds[0] = newBounds[0];\n  bounds[1] = newBounds[1];\n  bounds[2] = newBounds[2];\n  bounds[3] = newBounds[3];\n  bounds[4] = newBounds[4];\n  bounds[5] = newBounds[5];\n  return true;\n}\n\nexport function intersects(bounds, bBounds) {\n  if (!(isValid(bounds) && isValid(bBounds))) {\n    return false;\n  }\n  /* eslint-disable no-continue */\n  for (let i = 0; i < 3; i++) {\n    if (\n      bBounds[i * 2] >= bounds[i * 2] &&\n      bBounds[i * 2] <= bounds[i * 2 + 1]\n    ) {\n      continue;\n    } else if (\n      bounds[i * 2] >= bBounds[i * 2] &&\n      bounds[i * 2] <= bBounds[i * 2 + 1]\n    ) {\n      continue;\n    }\n\n    if (\n      bBounds[i * 2 + 1] >= bounds[i * 2] &&\n      bBounds[i * 2 + 1] <= bounds[i * 2 + 1]\n    ) {\n      continue;\n    } else if (\n      bounds[i * 2 + 1] >= bBounds[i * 2] &&\n      bounds[i * 2 + 1] <= bBounds[i * 2 + 1]\n    ) {\n      continue;\n    }\n    return false;\n  }\n  /* eslint-enable no-continue */\n\n  return true;\n}\n\nexport function containsPoint(bounds, x, y, z) {\n  if (x < bounds[0] || x > bounds[1]) {\n    return false;\n  }\n\n  if (y < bounds[2] || y > bounds[3]) {\n    return false;\n  }\n\n  if (z < bounds[4] || z > bounds[5]) {\n    return false;\n  }\n\n  return true;\n}\n\nexport function contains(bounds, otherBounds) {\n  // if either box is not valid or they don't intersect\n  if (!intersects(bounds, otherBounds)) {\n    return false;\n  }\n\n  if (!containsPoint(bounds, ...getMinPoint(otherBounds))) {\n    return false;\n  }\n\n  if (!containsPoint(bounds, ...getMaxPoint(otherBounds))) {\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Returns true if plane intersects bounding box.\n * If so, the box is cut by the plane\n * @param {array} origin\n * @param {array} normal\n */\nexport function cutWithPlane(bounds, origin, normal) {\n  // Index[0..2] represents the order of traversing the corners of a cube\n  // in (x,y,z), (y,x,z) and (z,x,y) ordering, respectively\n  const index = [\n    [0, 1, 2, 3, 4, 5, 6, 7],\n    [0, 1, 4, 5, 2, 3, 6, 7],\n    [0, 2, 4, 6, 1, 3, 5, 7],\n  ];\n\n  // stores the signed distance to a plane\n  const d = [0, 0, 0, 0, 0, 0, 0, 0];\n  let idx = 0;\n  for (let ix = 0; ix < 2; ix++) {\n    for (let iy = 2; iy < 4; iy++) {\n      for (let iz = 4; iz < 6; iz++) {\n        const x = [bounds[ix], bounds[iy], bounds[iz]];\n        d[idx++] = vtkPlane.evaluate(normal, origin, x);\n      }\n    }\n  }\n\n  let dir = 2;\n  while (dir--) {\n    // in each direction, we test if the vertices of two orthogonal faces\n    // are on either side of the plane\n    if (\n      oppositeSign(d[index[dir][0]], d[index[dir][4]]) &&\n      oppositeSign(d[index[dir][1]], d[index[dir][5]]) &&\n      oppositeSign(d[index[dir][2]], d[index[dir][6]]) &&\n      oppositeSign(d[index[dir][3]], d[index[dir][7]])\n    ) {\n      break;\n    }\n  }\n\n  if (dir < 0) {\n    return false;\n  }\n\n  const sign = Math.sign(normal[dir]);\n  const size = Math.abs((bounds[dir * 2 + 1] - bounds[dir * 2]) * normal[dir]);\n  let t = sign > 0 ? 1 : 0;\n  /* eslint-disable no-continue */\n  for (let i = 0; i < 4; i++) {\n    if (size === 0) {\n      continue; // shouldn't happen\n    }\n    const ti = Math.abs(d[index[dir][i]]) / size;\n    if (sign > 0 && ti < t) {\n      t = ti;\n    }\n\n    if (sign < 0 && ti > t) {\n      t = ti;\n    }\n  }\n  /* eslint-enable no-continue */\n  const bound = (1.0 - t) * bounds[dir * 2] + t * bounds[dir * 2 + 1];\n\n  if (sign > 0) {\n    bounds[dir * 2] = bound;\n  } else {\n    bounds[dir * 2 + 1] = bound;\n  }\n\n  return true;\n}\n\n// ----------------------------------------------------------------------------\n// Light Weight class\n// ----------------------------------------------------------------------------\n\nclass BoundingBox {\n  constructor(refBounds) {\n    this.bounds = refBounds;\n    if (!this.bounds) {\n      this.bounds = new Float64Array(INIT_BOUNDS);\n    }\n  }\n\n  getBounds() {\n    return this.bounds;\n  }\n\n  equals(otherBounds) {\n    return equals(this.bounds, otherBounds);\n  }\n\n  isValid() {\n    return isValid(this.bounds);\n  }\n\n  setBounds(otherBounds) {\n    return setBounds(this.bounds, otherBounds);\n  }\n\n  reset() {\n    return reset(this.bounds);\n  }\n\n  addPoint(...xyz) {\n    return addPoint(this.bounds, ...xyz);\n  }\n\n  addPoints(points) {\n    return addPoints(this.bounds, points);\n  }\n\n  addBounds(xMin, xMax, yMin, yMax, zMin, zMax) {\n    return addBounds(this.bounds, xMin, xMax, yMin, yMax, zMin, zMax);\n  }\n\n  setMinPoint(x, y, z) {\n    return setMinPoint(this.bounds, x, y, z);\n  }\n\n  setMaxPoint(x, y, z) {\n    return setMaxPoint(this.bounds, x, y, z);\n  }\n\n  inflate(delta) {\n    return inflate(this.bounds, delta);\n  }\n\n  scale(sx, sy, sz) {\n    return scale(this.bounds, sx, sy, sz);\n  }\n\n  getCenter() {\n    return getCenter(this.bounds);\n  }\n\n  getLength(index) {\n    return getLength(this.bounds, index);\n  }\n\n  getLengths() {\n    return getLengths(this.bounds);\n  }\n\n  getMaxLength() {\n    return getMaxLength(this.bounds);\n  }\n\n  getDiagonalLength() {\n    return getDiagonalLength(this.bounds);\n  }\n\n  getMinPoint() {\n    return getMinPoint(this.bounds);\n  }\n\n  getMaxPoint() {\n    return getMaxPoint(this.bounds);\n  }\n\n  getXRange() {\n    return getXRange(this.bounds);\n  }\n\n  getYRange() {\n    return getYRange(this.bounds);\n  }\n\n  getZRange() {\n    return getZRange(this.bounds);\n  }\n\n  getCorners(corners) {\n    return getCorners(this.bounds, corners);\n  }\n\n  computeCornerPoints(point1, point2) {\n    return computeCornerPoints(this.bounds, point1, point2);\n  }\n\n  computeLocalBounds(u, v, w) {\n    return computeLocalBounds(this.bounds, u, v, w);\n  }\n\n  transformBounds(transform, out = []) {\n    return transformBounds(this.bounds, transform, out);\n  }\n\n  computeScale3(scale3) {\n    return computeScale3(this.bounds, scale3);\n  }\n\n  cutWithPlane(origin, normal) {\n    return cutWithPlane(this.bounds, origin, normal);\n  }\n\n  intersectBox(origin, dir, coord, tolerance) {\n    return intersectBox(this.bounds, origin, dir, coord, tolerance);\n  }\n\n  intersectPlane(origin, normal) {\n    return intersectPlane(this.bounds, origin, normal);\n  }\n\n  intersect(otherBounds) {\n    return intersect(this.bounds, otherBounds);\n  }\n\n  intersects(otherBounds) {\n    return intersects(this.bounds, otherBounds);\n  }\n\n  containsPoint(x, y, z) {\n    return containsPoint(this.bounds, x, y, z);\n  }\n\n  contains(otherBounds) {\n    return intersects(this.bounds, otherBounds);\n  }\n}\n\nfunction newInstance(initialValues) {\n  const bounds = initialValues && initialValues.bounds;\n  return new BoundingBox(bounds);\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nexport const STATIC = {\n  equals,\n  isValid,\n  setBounds,\n  reset,\n  addPoint,\n  addPoints,\n  addBounds,\n  setMinPoint,\n  setMaxPoint,\n  inflate,\n  scale,\n  scaleAboutCenter,\n  getCenter,\n  getLength,\n  getLengths,\n  getMaxLength,\n  getDiagonalLength,\n  getMinPoint,\n  getMaxPoint,\n  getXRange,\n  getYRange,\n  getZRange,\n  getCorners,\n  computeCornerPoints,\n  computeLocalBounds,\n  transformBounds,\n  computeScale3,\n  cutWithPlane,\n  intersectBox,\n  intersectPlane,\n  intersect,\n  intersects,\n  containsPoint,\n  contains,\n  INIT_BOUNDS,\n};\n\nexport default { newInstance, ...STATIC };\n","import macro from 'vtk.js/Sources/macros';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport vtkPoints from 'vtk.js/Sources/Common/Core/Points';\n\n// ----------------------------------------------------------------------------\n// vtkCell methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCell(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCell');\n\n  publicAPI.initialize = (points, pointIdsList = null) => {\n    if (!pointIdsList) {\n      model.points = points;\n      model.pointsIds = new Array(points.getNumberOfPoints());\n      for (let i = points.getNumberOfPoints() - 1; i >= 0; --i) {\n        model.pointsIds[i] = i;\n      }\n    } else {\n      model.pointsIds = pointIdsList;\n      let triangleData = model.points.getData();\n      if (triangleData.length !== 3 * model.pointsIds.length) {\n        triangleData = macro.newTypedArray(\n          points.getDataType(),\n          3 * model.pointsIds.length\n        );\n      }\n      const pointsData = points.getData();\n      model.pointsIds.forEach((pointId, index) => {\n        // const start = 3 * pointId;\n        // pointsData.set(p.subarray(start, start + 3), 3 * index);\n        let pointOffset = 3 * pointId;\n        let trianglePointOffset = 3 * index;\n        triangleData[trianglePointOffset] = pointsData[pointOffset];\n        triangleData[++trianglePointOffset] = pointsData[++pointOffset];\n        triangleData[++trianglePointOffset] = pointsData[++pointOffset];\n      });\n      model.points.setData(triangleData);\n    }\n  };\n\n  publicAPI.getBounds = () => {\n    const nbPoints = model.points.getNumberOfPoints();\n    const x = [];\n    if (nbPoints) {\n      model.points.getPoint(0, x);\n      model.bounds[0] = x[0];\n      model.bounds[1] = x[0];\n      model.bounds[2] = x[1];\n      model.bounds[3] = x[1];\n      model.bounds[4] = x[2];\n      model.bounds[5] = x[2];\n\n      for (let i = 1; i < nbPoints; i++) {\n        model.points.getPoint(i, x);\n        model.bounds[0] = x[0] < model.bounds[0] ? x[0] : model.bounds[0];\n        model.bounds[1] = x[0] > model.bounds[1] ? x[0] : model.bounds[1];\n        model.bounds[2] = x[1] < model.bounds[2] ? x[1] : model.bounds[2];\n        model.bounds[3] = x[1] > model.bounds[3] ? x[1] : model.bounds[3];\n        model.bounds[4] = x[2] < model.bounds[4] ? x[2] : model.bounds[4];\n        model.bounds[5] = x[2] > model.bounds[5] ? x[2] : model.bounds[5];\n      }\n    } else {\n      vtkMath.uninitializeBounds(model.bounds);\n    }\n    return model.bounds;\n  };\n\n  publicAPI.getLength2 = () => {\n    publicAPI.getBounds();\n    let length = 0.0;\n    let diff = 0;\n    for (let i = 0; i < 3; i++) {\n      diff = model.bounds[2 * i + 1] - model.bounds[2 * i];\n      length += diff * diff;\n    }\n    return length;\n  };\n\n  publicAPI.getParametricDistance = (pcoords) => {\n    let pDist;\n    let pDistMax = 0.0;\n\n    for (let i = 0; i < 3; i++) {\n      if (pcoords[i] < 0.0) {\n        pDist = -pcoords[i];\n      } else if (pcoords[i] > 1.0) {\n        pDist = pcoords[i] - 1.0;\n      } else {\n        // inside the cell in the parametric direction\n        pDist = 0.0;\n      }\n      if (pDist > pDistMax) {\n        pDistMax = pDist;\n      }\n    }\n    return pDistMax;\n  };\n\n  publicAPI.getNumberOfPoints = () => model.points.getNumberOfPoints();\n\n  publicAPI.deepCopy = (cell) => {\n    cell.initialize(model.points, model.pointsIds);\n  };\n\n  publicAPI.getCellDimension = () => {}; // virtual\n  publicAPI.intersectWithLine = (p1, p2, tol, t, x, pcoords, subId) => {}; // virtual\n  publicAPI.evaluatePosition = (\n    x,\n    closestPoint,\n    subId,\n    pcoords,\n    dist2,\n    weights\n  ) => {\n    macro.vtkErrorMacro('vtkCell.evaluatePosition is not implemented.');\n  }; // virtual\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  bounds: [-1, -1, -1, -1, -1, -1],\n  pointsIds: [],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  macro.obj(publicAPI, model);\n\n  if (!model.points) {\n    model.points = vtkPoints.newInstance();\n  }\n\n  macro.get(publicAPI, model, ['points', 'pointsIds']);\n\n  vtkCell(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkCell');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import macro from 'vtk.js/Sources/macros';\nimport vtkCell from 'vtk.js/Sources/Common/DataModel/Cell';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\nexport const InitLink = {\n  ncells: 0,\n  cells: null,\n};\n\nfunction resize(model, sz) {\n  let newSize = sz;\n  if (sz >= model.array.length) {\n    newSize += model.array.length;\n  }\n\n  while (newSize > model.array.length)\n    model.array.push({\n      ncells: 0,\n      cells: null,\n    });\n  model.array.length = newSize;\n}\n\n// ----------------------------------------------------------------------------\n// vtkCellLinks methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCellLinks(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCellLinks');\n\n  /**\n   * Build the link list array. All subclasses of vtkAbstractCellLinks\n   * must support this method.\n   */\n  publicAPI.buildLinks = (data) => {\n    const numPts = data.getPoints().getNumberOfPoints();\n    const numCells = data.getNumberOfCells();\n\n    // fill out lists with number of references to cells\n    const linkLoc = new Uint32Array(numPts);\n\n    // Use fast path if polydata\n    if (data.isA('vtkPolyData')) {\n      // traverse data to determine number of uses of each point\n      for (let cellId = 0; cellId < numCells; ++cellId) {\n        const { cellPointIds } = data.getCellPoints(cellId);\n        cellPointIds.forEach((cellPointId) => {\n          publicAPI.incrementLinkCount(cellPointId);\n        });\n      }\n\n      // now allocate storage for the links\n      publicAPI.allocateLinks(numPts);\n      model.maxId = numPts - 1;\n\n      for (let cellId = 0; cellId < numCells; ++cellId) {\n        const { cellPointIds } = data.getCellPoints(cellId);\n        cellPointIds.forEach((cellPointId) => {\n          publicAPI.insertCellReference(\n            cellPointId,\n            linkLoc[cellPointId]++,\n            cellId\n          );\n        });\n      }\n    } // any other type of dataset\n    else {\n      // traverse data to determine number of uses of each point\n      for (let cellId = 0; cellId < numCells; cellId++) {\n        // TODO: Currently not supported: const cell = data.getCell(cellId);\n        const cell = vtkCell.newInstance();\n        cell.getPointsIds().forEach((cellPointId) => {\n          publicAPI.incrementLinkCount(cellPointId);\n        });\n      }\n\n      // now allocate storage for the links\n      publicAPI.allocateLinks(numPts);\n      model.maxId = numPts - 1;\n\n      for (let cellId = 0; cellId < numCells; ++cellId) {\n        // TODO: Currently not supported: const cell = data.getCell(cellId);\n        const cell = vtkCell.newInstance();\n        cell.getPointsIds().forEach((cellPointId) => {\n          publicAPI.insertCellReference(\n            cellPointId,\n            linkLoc[cellPointId]++,\n            cellId\n          );\n        });\n      }\n    } // end else\n  };\n\n  /**\n   * Build the link list array with a provided connectivity array.\n   */\n  // publicAPI.buildLinks = (data, connectivity) => {};\n\n  /**\n   * Allocate the specified number of links (i.e., number of points) that\n   * will be built.\n   */\n  publicAPI.allocate = (numLinks, ext = 1000) => {\n    model.array = Array(numLinks)\n      .fill()\n      .map(() => ({\n        ncells: 0,\n        cells: null,\n      }));\n    model.extend = ext;\n    model.maxId = -1;\n  };\n\n  publicAPI.initialize = () => {\n    model.array = null;\n  };\n\n  /**\n   * Get a link structure given a point id.\n   */\n  publicAPI.getLink = (ptId) => model.array[ptId];\n\n  /**\n   * Get the number of cells using the point specified by ptId.\n   */\n  publicAPI.getNcells = (ptId) => model.array[ptId].ncells;\n\n  /**\n   * Return a list of cell ids using the point.\n   */\n  publicAPI.getCells = (ptId) => model.array[ptId].cells;\n\n  /**\n   * Insert a new point into the cell-links data structure. The size parameter\n   * is the initial size of the list.\n   */\n  publicAPI.insertNextPoint = (numLinks) => {\n    model.array.push({ ncells: numLinks, cells: Array(numLinks) });\n    ++model.maxId;\n  };\n\n  /**\n   * Insert a cell id into the list of cells (at the end) using the cell id\n   * provided. (Make sure to extend the link list (if necessary) using the\n   * method resizeCellList().)\n   */\n  publicAPI.insertNextCellReference = (ptId, cellId) => {\n    model.array[ptId].cells[model.array[ptId].ncells++] = cellId;\n  };\n\n  /**\n   * Delete point (and storage) by destroying links to using cells.\n   */\n  publicAPI.deletePoint = (ptId) => {\n    model.array[ptId].ncells = 0;\n    model.array[ptId].cells = null;\n  };\n\n  /**\n   * Delete the reference to the cell (cellId) from the point (ptId). This\n   * removes the reference to the cellId from the cell list, but does not\n   * resize the list (recover memory with resizeCellList(), if necessary).\n   */\n  publicAPI.removeCellReference = (cellId, ptId) => {\n    model.array[ptId].cells = model.array[ptId].cells.filter(\n      (cell) => cell !== cellId\n    );\n    model.array[ptId].ncells = model.array[ptId].cells.length;\n  };\n\n  /**\n   * Add the reference to the cell (cellId) from the point (ptId). This\n   * adds a reference to the cellId from the cell list, but does not resize\n   * the list (extend memory with resizeCellList(), if necessary).\n   */\n  publicAPI.addCellReference = (cellId, ptId) => {\n    model.array[ptId].cells[model.array[ptId].ncells++] = cellId;\n  };\n\n  /**\n   * Change the length of a point's link list (i.e., list of cells using a\n   * point) by the size specified.\n   */\n  publicAPI.resizeCellList = (ptId, size) => {\n    model.array[ptId].cells.length = size;\n  };\n\n  /**\n   * Reclaim any unused memory.\n   */\n  publicAPI.squeeze = () => {\n    resize(model, model.maxId + 1);\n  };\n\n  /**\n   * Reset to a state of no entries without freeing the memory.\n   */\n  publicAPI.reset = () => {\n    model.maxId = -1;\n  };\n\n  /**\n   * Standard DeepCopy method.  Since this object contains no reference\n   * to other objects, there is no ShallowCopy.\n   */\n  publicAPI.deepCopy = (src) => {\n    model.array = [...src.array];\n    model.extend = src.extend;\n    model.maxId = src.maxId;\n  };\n\n  /**\n   * Increment the count of the number of cells using the point.\n   */\n  publicAPI.incrementLinkCount = (ptId) => {\n    ++model.array[ptId].ncells;\n  };\n\n  publicAPI.allocateLinks = (n) => {\n    for (let i = 0; i < n; ++i) {\n      model.array[i].cells = new Array(model.array[i].ncells);\n    }\n  };\n\n  /**\n   * Insert a cell id into the list of cells using the point.\n   */\n  publicAPI.insertCellReference = (ptId, pos, cellId) => {\n    model.array[ptId].cells[pos] = cellId;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  array: null, // pointer to data\n  maxId: 0, // maximum index inserted thus far\n  extend: 0, // grow array by this point\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  macro.obj(publicAPI, model);\n\n  vtkCellLinks(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkCellLinks');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","export const CellType = {\n  // Linear cells\n  VTK_EMPTY_CELL: 0,\n  VTK_VERTEX: 1,\n  VTK_POLY_VERTEX: 2,\n  VTK_LINE: 3,\n  VTK_POLY_LINE: 4,\n  VTK_TRIANGLE: 5,\n  VTK_TRIANGLE_STRIP: 6,\n  VTK_POLYGON: 7,\n  VTK_PIXEL: 8,\n  VTK_QUAD: 9,\n  VTK_TETRA: 10,\n  VTK_VOXEL: 11,\n  VTK_HEXAHEDRON: 12,\n  VTK_WEDGE: 13,\n  VTK_PYRAMID: 14,\n  VTK_PENTAGONAL_PRISM: 15,\n  VTK_HEXAGONAL_PRISM: 16,\n\n  // Quadratic, isoparametric cells\n  VTK_QUADRATIC_EDGE: 21,\n  VTK_QUADRATIC_TRIANGLE: 22,\n  VTK_QUADRATIC_QUAD: 23,\n  VTK_QUADRATIC_POLYGON: 36,\n  VTK_QUADRATIC_TETRA: 24,\n  VTK_QUADRATIC_HEXAHEDRON: 25,\n  VTK_QUADRATIC_WEDGE: 26,\n  VTK_QUADRATIC_PYRAMID: 27,\n  VTK_BIQUADRATIC_QUAD: 28,\n  VTK_TRIQUADRATIC_HEXAHEDRON: 29,\n  VTK_QUADRATIC_LINEAR_QUAD: 30,\n  VTK_QUADRATIC_LINEAR_WEDGE: 31,\n  VTK_BIQUADRATIC_QUADRATIC_WEDGE: 32,\n  VTK_BIQUADRATIC_QUADRATIC_HEXAHEDRON: 33,\n  VTK_BIQUADRATIC_TRIANGLE: 34,\n\n  // Cubic, isoparametric cell\n  VTK_CUBIC_LINE: 35,\n\n  // Special class of cells formed by convex group of points\n  VTK_CONVEX_POINT_SET: 41,\n\n  // Polyhedron cell (consisting of polygonal faces)\n  VTK_POLYHEDRON: 42,\n\n  // Higher order cells in parametric form\n  VTK_PARAMETRIC_CURVE: 51,\n  VTK_PARAMETRIC_SURFACE: 52,\n  VTK_PARAMETRIC_TRI_SURFACE: 53,\n  VTK_PARAMETRIC_QUAD_SURFACE: 54,\n  VTK_PARAMETRIC_TETRA_REGION: 55,\n  VTK_PARAMETRIC_HEX_REGION: 56,\n\n  // Higher order cells\n  VTK_HIGHER_ORDER_EDGE: 60,\n  VTK_HIGHER_ORDER_TRIANGLE: 61,\n  VTK_HIGHER_ORDER_QUAD: 62,\n  VTK_HIGHER_ORDER_POLYGON: 63,\n  VTK_HIGHER_ORDER_TETRAHEDRON: 64,\n  VTK_HIGHER_ORDER_WEDGE: 65,\n  VTK_HIGHER_ORDER_PYRAMID: 66,\n  VTK_HIGHER_ORDER_HEXAHEDRON: 67,\n\n  // Arbitrary order Lagrange elements (formulated separated from generic higher order cells)\n  VTK_LAGRANGE_CURVE: 68,\n  VTK_LAGRANGE_TRIANGLE: 69,\n  VTK_LAGRANGE_QUADRILATERAL: 70,\n  VTK_LAGRANGE_TETRAHEDRON: 71,\n  VTK_LAGRANGE_HEXAHEDRON: 72,\n  VTK_LAGRANGE_WEDGE: 73,\n  VTK_LAGRANGE_PYRAMID: 74,\n\n  VTK_NUMBER_OF_CELL_TYPES: 75,\n};\n\n// This list should contain the cell class names in\n// the same order as in CellType.\nexport const CellTypesStrings = [\n  'vtkEmptyCell',\n  'vtkVertex',\n  'vtkPolyVertex',\n  'vtkLine',\n  'vtkPolyLine',\n  'vtkTriangle',\n  'vtkTriangleStrip',\n  'vtkPolygon',\n  'vtkPixel',\n  'vtkQuad',\n  'vtkTetra',\n  'vtkVoxel',\n  'vtkHexahedron',\n  'vtkWedge',\n  'vtkPyramid',\n  'vtkPentagonalPrism',\n  'vtkHexagonalPrism',\n  'UnknownClass',\n  'UnknownClass',\n  'UnknownClass',\n  'UnknownClass',\n  'vtkQuadraticEdge',\n  'vtkQuadraticTriangle',\n  'vtkQuadraticQuad',\n  'vtkQuadraticTetra',\n  'vtkQuadraticHexahedron',\n  'vtkQuadraticWedge',\n  'vtkQuadraticPyramid',\n  'vtkBiQuadraticQuad',\n  'vtkTriQuadraticHexahedron',\n  'vtkQuadraticLinearQuad',\n  'vtkQuadraticLinearWedge',\n  'vtkBiQuadraticQuadraticWedge',\n  'vtkBiQuadraticQuadraticHexahedron',\n  'vtkBiQuadraticTriangle',\n  'vtkCubicLine',\n  'vtkQuadraticPolygon',\n  'UnknownClass',\n  'UnknownClass',\n  'UnknownClass',\n  'UnknownClass',\n  'vtkConvexPointSet',\n  'UnknownClass',\n  'UnknownClass',\n  'UnknownClass',\n  'UnknownClass',\n  'UnknownClass',\n  'UnknownClass',\n  'UnknownClass',\n  'UnknownClass',\n  'UnknownClass',\n  'vtkParametricCurve',\n  'vtkParametricSurface',\n  'vtkParametricTriSurface',\n  'vtkParametricQuadSurface',\n  'vtkParametricTetraRegion',\n  'vtkParametricHexRegion',\n  'UnknownClass',\n  'UnknownClass',\n  'UnknownClass',\n  'vtkHigherOrderEdge',\n  'vtkHigherOrderTriangle',\n  'vtkHigherOrderQuad',\n  'vtkHigherOrderPolygon',\n  'vtkHigherOrderTetrahedron',\n  'vtkHigherOrderWedge',\n  'vtkHigherOrderPyramid',\n  'vtkHigherOrderHexahedron',\n];\n\nexport default {\n  CellType,\n  CellTypesStrings,\n};\n","import macro from 'vtk.js/Sources/macros';\nimport {\n  CellType,\n  CellTypesStrings,\n} from 'vtk.js/Sources/Common/DataModel/CellTypes/Constants';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n/**\n * Given an int (as defined in vtkCellType.h) identifier for a class\n * return it's classname.\n */\nfunction getClassNameFromTypeId(typeId) {\n  return typeId < CellTypesStrings.length\n    ? CellTypesStrings[typeId]\n    : 'UnknownClass';\n}\n\n/**\n * Given a data object classname, return it's int identified (as\n * defined in vtkCellType.h)\n */\nfunction getTypeIdFromClassName(cellTypeString) {\n  return CellTypesStrings.findIndex(cellTypeString);\n}\n\n/**\n * This convenience method is a fast check to determine if a cell type\n * represents a linear or nonlinear cell.  This is generally much more\n * efficient than getting the appropriate vtkCell and checking its IsLinear\n * method.\n */\nfunction isLinear(type) {\n  return (\n    type < CellType.VTK_QUADRATIC_EDGE ||\n    type === CellType.VTK_CONVEX_POINT_SET ||\n    type === CellType.VTK_POLYHEDRON\n  );\n}\n\nfunction hasSubCells(cellType) {\n  return (\n    cellType === CellType.VTK_TRIANGLE_STRIP ||\n    cellType === CellType.VTK_POLY_LINE ||\n    cellType === CellType.VTK_POLY_VERTEX\n  );\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nexport const STATIC = {\n  getClassNameFromTypeId,\n  getTypeIdFromClassName,\n  isLinear,\n  hasSubCells,\n};\n\n// ----------------------------------------------------------------------------\n// vtkCellTypes methods\n// ----------------------------------------------------------------------------\n\nfunction vtkCellTypes(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkCellTypes');\n\n  /**\n   * Allocate memory for this array. Delete old storage only if necessary.\n   */\n  publicAPI.allocate = (sz = 512, ext = 1000) => {\n    model.size = sz > 0 ? sz : 1;\n    model.extend = ext > 0 ? ext : 1;\n    model.maxId = -1;\n    model.typeArray = new Uint8Array(sz);\n    model.locationArray = new Uint32Array(sz);\n  };\n\n  /**\n   * Add a cell at specified id.\n   */\n  publicAPI.insertCell = (cellId, type, loc) => {\n    model.typeArray[cellId] = type;\n    model.locationArray[cellId] = loc;\n\n    if (cellId > model.maxId) {\n      model.maxId = cellId;\n    }\n  };\n\n  /**\n   * Add a cell to the object in the next available slot.\n   */\n  publicAPI.insertNextCell = (type, loc) => {\n    publicAPI.insertCell(++model.maxId, type, loc);\n    return model.maxId;\n  };\n\n  /**\n   * Specify a group of cell types. This version is provided to maintain\n   * backwards compatibility and does a copy of the cellLocations\n   */\n  publicAPI.setCellTypes = (ncells, cellTypes, cellLocations) => {\n    model.size = ncells;\n\n    model.typeArray = cellTypes;\n    model.locationArray = cellLocations;\n\n    model.maxId = ncells - 1;\n  };\n\n  /**\n   * Return the location of the cell in the associated vtkCellArray.\n   */\n  publicAPI.getCellLocation = (cellId) => model.locationArray[cellId];\n\n  /**\n   * Delete cell by setting to nullptr cell type.\n   */\n  publicAPI.deleteCell = (cellId) => {\n    model.typeArray[cellId] = CellType.VTK_EMPTY_CELL;\n  };\n\n  /**\n   * Return the number of types in the list.\n   */\n  publicAPI.getNumberOfTypes = () => model.maxId + 1;\n\n  /**\n   * Return true if type specified is contained in list; false otherwise.\n   */\n  publicAPI.isType = (type) => {\n    const numTypes = publicAPI.getNumberOfTypes();\n\n    for (let i = 0; i < numTypes; ++i) {\n      if (type === publicAPI.getCellType(i)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Add the type specified to the end of the list. Range checking is performed.\n   */\n  publicAPI.insertNextType = (type) => publicAPI.insertNextCell(type, -1);\n\n  /**\n   * Return the type of cell.\n   */\n  publicAPI.getCellType = (cellId) => model.typeArray[cellId];\n\n  /**\n   * Reclaim any extra memory.\n   */\n  // TODO: publicAPI.squeeze = () =>  {};\n\n  /**\n   * Initialize object without releasing memory.\n   */\n  publicAPI.reset = () => {\n    model.maxId = -1;\n  };\n\n  /**\n   * Standard DeepCopy method.  Since this object contains no reference\n   * to other objects, there is no ShallowCopy.\n   */\n  publicAPI.deepCopy = (src) => {\n    publicAPI.allocate(src.getSize(), src.getExtend());\n    model.typeArray.set(src.getTypeArray());\n    model.locationArray.set(src.getLocationArray());\n    model.maxId = src.getMaxId();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // typeArray: null, // pointer to types array\n  // locationArray: null;   // pointer to array of offsets\n  size: 0, // allocated size of data\n  maxId: -1, // maximum index inserted thus far\n  extend: 1000, // grow array by this point\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  macro.obj(publicAPI, model);\n\n  macro.get(publicAPI, model, ['size', 'maxId', 'extend']);\n  macro.getArray(publicAPI, model, ['typeArray', 'locationArray']);\n\n  vtkCellTypes(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkCellTypes');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend, ...STATIC };\n","// Specify how data arrays can be used by data objects\nexport const FieldDataTypes = {\n  UNIFORM: 0, // data that does not vary over points/cells/etc.\n  DATA_OBJECT_FIELD: 0, // to match VTK\n\n  COORDINATE: 1, // data that specifies the location of each point\n  POINT_DATA: 1, // to match VTK\n\n  POINT: 2, // data defined at each point, but that does not specify the point location\n  POINT_FIELD_DATA: 2, // to match VTK\n\n  CELL: 3, // data defined at each cell, but that does not specify the cell\n  CELL_FIELD_DATA: 3, // to match VTK\n\n  VERTEX: 4, // data defined at each graph vertex, but that does not specify the graph vertex\n  VERTEX_FIELD_DATA: 4, // to match VTK\n\n  EDGE: 5, // data defined at each graph edge, but that does not specify the graph edge\n  EDGE_FIELD_DATA: 5, // to match VTK\n\n  ROW: 6, // data specifying a table row\n  ROW_DATA: 6, // to match VTK\n};\n\nexport const FieldAssociations = {\n  FIELD_ASSOCIATION_POINTS: 0,\n  FIELD_ASSOCIATION_CELLS: 1,\n  FIELD_ASSOCIATION_NONE: 2,\n  FIELD_ASSOCIATION_POINTS_THEN_CELLS: 3,\n  FIELD_ASSOCIATION_VERTICES: 4,\n  FIELD_ASSOCIATION_EDGES: 5,\n  FIELD_ASSOCIATION_ROWS: 6,\n  NUMBER_OF_ASSOCIATIONS: 7,\n};\n\nexport default {\n  FieldDataTypes,\n  FieldAssociations,\n};\n","import macro from 'vtk.js/Sources/macros';\nimport vtk from 'vtk.js/Sources/vtk';\nimport vtkDataSetAttributes from 'vtk.js/Sources/Common/DataModel/DataSetAttributes';\nimport Constants from 'vtk.js/Sources/Common/DataModel/DataSet/Constants';\n\n// import vtkBoundingBox from '../BoundingBox';\n// import * as vtkMath from '../../Core/Math';\n//\n// function getBounds(dataset) {\n//   if (dataset.bounds) {\n//     return dataset.bounds;\n//   }\n//   if (dataset.type && dataset[dataset.type]) {\n//     const ds = dataset[dataset.type];\n//     if (ds.bounds) {\n//       return ds.bounds;\n//     }\n//     if (ds.Points && ds.Points.bounds) {\n//       return ds.Points.bounds;\n//     }\n\n//     if (ds.Points && ds.Points.values) {\n//       const array = ds.Points.values;\n//       const bbox = [...vtkBoundingBox.INIT_BOUNDS];\n//       const size = array.length;\n//       const delta = ds.Points.numberOfComponents ? ds.Points.numberOfComponents : 3;\n//       for (let idx = 0; idx < size; idx += delta) {\n//         vtkBoundingBox.addPoint(bbox, array[idx * delta], array[(idx * delta) + 1], array[(idx * delta) + 2]);\n//       }\n//       ds.Points.bounds = bbox;\n//       return ds.Points.bounds;\n//     }\n//   }\n//   return vtkMath.createUninitializedBounds();\n// }\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nconst DATASET_FIELDS = ['pointData', 'cellData', 'fieldData'];\n\n// ----------------------------------------------------------------------------\n// vtkDataSet methods\n// ----------------------------------------------------------------------------\n\nfunction vtkDataSet(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkDataSet');\n\n  // Add dataset attributes\n  DATASET_FIELDS.forEach((fieldName) => {\n    if (!model[fieldName]) {\n      model[fieldName] = vtkDataSetAttributes.newInstance();\n    } else {\n      model[fieldName] = vtk(model[fieldName]);\n    }\n  });\n\n  const superShallowCopy = publicAPI.shallowCopy;\n  publicAPI.shallowCopy = (other, debug = false) => {\n    superShallowCopy(other, debug);\n    DATASET_FIELDS.forEach((fieldName) => {\n      model[fieldName] = vtkDataSetAttributes.newInstance();\n      model[fieldName].shallowCopy(other.getReferenceByName(fieldName));\n    });\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // pointData: null,\n  // cellData: null,\n  // fieldData: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n  macro.setGet(publicAPI, model, DATASET_FIELDS);\n\n  // Object specific methods\n  vtkDataSet(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkDataSet');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend, ...Constants };\n","export const AttributeTypes = {\n  SCALARS: 0,\n  VECTORS: 1,\n  NORMALS: 2,\n  TCOORDS: 3,\n  TENSORS: 4,\n  GLOBALIDS: 5,\n  PEDIGREEIDS: 6,\n  EDGEFLAG: 7,\n  NUM_ATTRIBUTES: 8,\n};\n\nexport const AttributeLimitTypes = {\n  MAX: 0,\n  EXACT: 1,\n  NOLIMIT: 2,\n};\n\nexport const CellGhostTypes = {\n  DUPLICATECELL: 1, // the cell is present on multiple processors\n  HIGHCONNECTIVITYCELL: 2, // the cell has more neighbors than in a regular mesh\n  LOWCONNECTIVITYCELL: 4, // the cell has less neighbors than in a regular mesh\n  REFINEDCELL: 8, // other cells are present that refines it.\n  EXTERIORCELL: 16, // the cell is on the exterior of the data set\n  HIDDENCELL: 32, // the cell is needed to maintain connectivity, but the data values should be ignored.\n};\n\nexport const PointGhostTypes = {\n  DUPLICATEPOINT: 1, // the cell is present on multiple processors\n  HIDDENPOINT: 2, // the point is needed to maintain connectivity, but the data values should be ignored.\n};\n\nexport const AttributeCopyOperations = {\n  COPYTUPLE: 0,\n  INTERPOLATE: 1,\n  PASSDATA: 2,\n  ALLCOPY: 3, // all of the above\n};\n\nexport const ghostArrayName = 'vtkGhostType';\n\nexport const DesiredOutputPrecision = {\n  DEFAULT: 0, // use the point type that does not truncate any data\n  SINGLE: 1, // use Float32Array\n  DOUBLE: 2, // use Float64Array\n};\n\nexport default {\n  AttributeCopyOperations,\n  AttributeLimitTypes,\n  AttributeTypes,\n  CellGhostTypes,\n  DesiredOutputPrecision,\n  PointGhostTypes,\n  ghostArrayName,\n};\n","import vtk from 'vtk.js/Sources/vtk';\nimport macro from 'vtk.js/Sources/macros';\nimport vtkDataArray from 'vtk.js/Sources/Common/Core/DataArray';\n\nconst { vtkErrorMacro, vtkWarningMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// vtkFieldData methods\n// ----------------------------------------------------------------------------\n\nfunction vtkFieldData(publicAPI, model) {\n  model.classHierarchy.push('vtkFieldData');\n  const superGetState = publicAPI.getState;\n\n  // Decode serialized data if any\n  if (model.arrays) {\n    model.arrays = model.arrays.map((item) => ({ data: vtk(item.data) }));\n  }\n\n  publicAPI.initialize = () => {\n    publicAPI.initializeFields();\n    publicAPI.copyAllOn();\n    publicAPI.clearFieldFlags();\n  };\n\n  publicAPI.initializeFields = () => {\n    model.arrays = [];\n    model.copyFieldFlags = {};\n    publicAPI.modified();\n  };\n\n  publicAPI.copyStructure = (other) => {\n    publicAPI.initializeFields();\n    model.copyFieldFlags = other.getCopyFieldFlags().map((x) => x); // Deep-copy\n    model.arrays = other.arrays().map((x) => ({ array: x })); // Deep-copy\n    // TODO: Copy array information objects (once we support information objects)\n  };\n\n  publicAPI.getNumberOfArrays = () => model.arrays.length;\n  publicAPI.getNumberOfActiveArrays = () => model.arrays.length;\n  publicAPI.addArray = (arr) => {\n    const name = arr.getName();\n    const { array, index } = publicAPI.getArrayWithIndex(name);\n    if (array != null) {\n      model.arrays[index] = { data: arr };\n      return index;\n    }\n    model.arrays = [].concat(model.arrays, { data: arr });\n    return model.arrays.length - 1;\n  };\n  publicAPI.removeAllArrays = () => {\n    model.arrays = [];\n  };\n  publicAPI.removeArray = (arrayName) => {\n    model.arrays = model.arrays.filter(\n      (entry) => arrayName !== entry.data.getName()\n    );\n  };\n  publicAPI.removeArrayByIndex = (arrayIdx) => {\n    model.arrays = model.arrays.filter((entry, idx) => idx !== arrayIdx);\n  };\n  publicAPI.getArrays = () => model.arrays.map((entry) => entry.data);\n  publicAPI.getArray = (arraySpec) =>\n    typeof arraySpec === 'number'\n      ? publicAPI.getArrayByIndex(arraySpec)\n      : publicAPI.getArrayByName(arraySpec);\n  publicAPI.getArrayByName = (arrayName) =>\n    model.arrays.reduce(\n      (a, b, i) => (b.data.getName() === arrayName ? b.data : a),\n      null\n    );\n  publicAPI.getArrayWithIndex = (arrayName) =>\n    model.arrays.reduce(\n      (a, b, i) =>\n        b.data && b.data.getName() === arrayName\n          ? { array: b.data, index: i }\n          : a,\n      { array: null, index: -1 }\n    );\n  publicAPI.getArrayByIndex = (idx) =>\n    idx >= 0 && idx < model.arrays.length ? model.arrays[idx].data : null;\n  publicAPI.hasArray = (arrayName) =>\n    publicAPI.getArrayWithIndex(arrayName).index >= 0;\n  publicAPI.getArrayName = (idx) => {\n    const arr = model.arrays[idx];\n    return arr ? arr.data.getName() : '';\n  };\n  publicAPI.getCopyFieldFlags = () => model.copyFieldFlags;\n  publicAPI.getFlag = (arrayName) => model.copyFieldFlags[arrayName];\n  publicAPI.passData = (other, fromId = -1, toId = -1) => {\n    other.getArrays().forEach((arr) => {\n      const copyFlag = publicAPI.getFlag(arr.getName());\n      if (\n        copyFlag !== false &&\n        !(model.doCopyAllOff && copyFlag !== true) &&\n        arr\n      ) {\n        let destArr = publicAPI.getArrayByName(arr.getName());\n        if (!destArr) {\n          if (fromId < 0 || fromId > arr.getNumberOfTuples()) {\n            // TBD: should this be a deep or a shallow copy?\n            publicAPI.addArray(arr);\n            other.getAttributes(arr).forEach((attrType) => {\n              publicAPI.setAttribute(arr, attrType);\n            });\n          } else {\n            const ncomps = arr.getNumberOfComponents();\n            let newSize = arr.getNumberOfValues();\n            const tId = toId > -1 ? toId : fromId;\n            if (newSize <= tId * ncomps) {\n              newSize = (tId + 1) * ncomps;\n            }\n            destArr = vtkDataArray.newInstance({\n              name: arr.getName(),\n              dataType: arr.getDataType(),\n              numberOfComponents: ncomps,\n              values: macro.newTypedArray(arr.getDataType(), newSize),\n              size: 0,\n            });\n            destArr.insertTuple(tId, arr.getTuple(fromId));\n            publicAPI.addArray(destArr);\n            other.getAttributes(arr).forEach((attrType) => {\n              publicAPI.setAttribute(destArr, attrType);\n            });\n          }\n        } else if (\n          arr.getNumberOfComponents() === destArr.getNumberOfComponents()\n        ) {\n          if (fromId > -1 && fromId < arr.getNumberOfTuples()) {\n            const tId = toId > -1 ? toId : fromId;\n            destArr.insertTuple(tId, arr.getTuple(fromId));\n          } else {\n            // if `fromId` is not provided, just copy all (or as much possible)\n            // from `arr` to `destArr`.\n            destArr.insertTuples(0, arr.getTuples());\n          }\n        } else {\n          vtkErrorMacro('Unhandled case in passData');\n        }\n      }\n    });\n  };\n\n  publicAPI.interpolateData = (\n    other,\n    fromId1 = -1,\n    fromId2 = -1,\n    toId = -1,\n    t = 0.5\n  ) => {\n    other.getArrays().forEach((arr) => {\n      const copyFlag = publicAPI.getFlag(arr.getName());\n      if (\n        copyFlag !== false &&\n        !(model.doCopyAllOff && copyFlag !== true) &&\n        arr\n      ) {\n        let destArr = publicAPI.getArrayByName(arr.getName());\n        if (!destArr) {\n          if (fromId1 < 0 || fromId2 < 0 || fromId1 > arr.getNumberOfTuples()) {\n            // TBD: should this be a deep or a shallow copy?\n            publicAPI.addArray(arr);\n            other.getAttributes(arr).forEach((attrType) => {\n              publicAPI.setAttribute(arr, attrType);\n            });\n          } else {\n            const ncomps = arr.getNumberOfComponents();\n            let newSize = arr.getNumberOfValues();\n            // TODO: Is this supposed to happen?\n            const tId = toId > -1 ? toId : fromId1;\n            if (newSize <= tId * ncomps) {\n              newSize = (tId + 1) * ncomps;\n            }\n            destArr = vtkDataArray.newInstance({\n              name: arr.getName(),\n              dataType: arr.getDataType(),\n              numberOfComponents: ncomps,\n              values: macro.newTypedArray(arr.getDataType(), newSize),\n              size: 0,\n            });\n            destArr.interpolateTuple(tId, arr, fromId1, arr, fromId2, t);\n            publicAPI.addArray(destArr);\n            other.getAttributes(arr).forEach((attrType) => {\n              publicAPI.setAttribute(destArr, attrType);\n            });\n          }\n        } else if (\n          arr.getNumberOfComponents() === destArr.getNumberOfComponents()\n        ) {\n          if (fromId1 > -1 && fromId1 < arr.getNumberOfTuples()) {\n            const tId = toId > -1 ? toId : fromId1;\n            destArr.interpolateTuple(tId, arr, fromId1, arr, fromId2, t);\n            vtkWarningMacro('Unexpected case in interpolateData');\n          } else {\n            // if `fromId` is not provided, just copy all (or as much possible)\n            // from `arr` to `destArr`.\n            destArr.insertTuples(arr.getTuples());\n          }\n        } else {\n          vtkErrorMacro('Unhandled case in interpolateData');\n        }\n      }\n    });\n  };\n  publicAPI.copyFieldOn = (arrayName) => {\n    model.copyFieldFlags[arrayName] = true;\n  };\n  publicAPI.copyFieldOff = (arrayName) => {\n    model.copyFieldFlags[arrayName] = false;\n  };\n  publicAPI.copyAllOn = () => {\n    if (!model.doCopyAllOn || model.doCopyAllOff) {\n      model.doCopyAllOn = true;\n      model.doCopyAllOff = false;\n      publicAPI.modified();\n    }\n  };\n  publicAPI.copyAllOff = () => {\n    if (model.doCopyAllOn || !model.doCopyAllOff) {\n      model.doCopyAllOn = false;\n      model.doCopyAllOff = true;\n      publicAPI.modified();\n    }\n  };\n  publicAPI.clearFieldFlags = () => {\n    model.copyFieldFlags = {};\n  };\n  publicAPI.deepCopy = (other) => {\n    model.arrays = other.getArrays().map((arr) => {\n      const arrNew = arr.newClone();\n      arrNew.deepCopy(arr);\n      return { data: arrNew };\n    });\n  };\n  publicAPI.copyFlags = (other) => other.getCopyFieldFlags().map((x) => x);\n  // TODO: publicAPI.squeeze = () => model.arrays.forEach(entry => entry.data.squeeze());\n  publicAPI.reset = () => model.arrays.forEach((entry) => entry.data.reset());\n  // TODO: getActualMemorySize\n  publicAPI.getMTime = () =>\n    model.arrays.reduce(\n      (a, b) => (b.data.getMTime() > a ? b.data.getMTime() : a),\n      model.mtime\n    );\n  // TODO: publicAPI.getField = (ids, other) => { copy ids from other into this model's arrays }\n  // TODO: publicAPI.getArrayContainingComponent = (component) => ...\n  publicAPI.getNumberOfComponents = () =>\n    model.arrays.reduce((a, b) => a + b.data.getNumberOfComponents(), 0);\n  publicAPI.getNumberOfTuples = () =>\n    model.arrays.length > 0 ? model.arrays[0].getNumberOfTuples() : 0;\n\n  publicAPI.getState = () => {\n    const result = superGetState();\n    if (result) {\n      result.arrays = model.arrays.map((item) => ({\n        data: item.data.getState(),\n      }));\n    }\n    return result;\n  };\n}\n\nconst DEFAULT_VALUES = {\n  arrays: [],\n  copyFieldFlags: [], // fields not to copy\n  doCopyAllOn: true,\n  doCopyAllOff: false,\n};\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  macro.obj(publicAPI, model);\n\n  vtkFieldData(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkFieldData');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","import macro from 'vtk.js/Sources/macros';\nimport vtkFieldData from 'vtk.js/Sources/Common/DataModel/DataSetAttributes/FieldData';\nimport Constants from 'vtk.js/Sources/Common/DataModel/DataSetAttributes/Constants';\nimport vtkDataArray from 'vtk.js/Sources/Common/Core/DataArray';\n\nconst { AttributeTypes, AttributeCopyOperations } = Constants;\nconst { vtkWarningMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// vtkDataSetAttributes methods\n// ----------------------------------------------------------------------------\n\nfunction vtkDataSetAttributes(publicAPI, model) {\n  const attrTypes = [\n    'Scalars',\n    'Vectors',\n    'Normals',\n    'TCoords',\n    'Tensors',\n    'GlobalIds',\n    'PedigreeIds',\n  ];\n\n  function cleanAttributeType(attType) {\n    // Given an integer or string, convert the result to one of the\n    // strings in the \"attrTypes\" array above or null (if\n    // no match is found)\n    let cleanAttType = attrTypes.find(\n      (ee) =>\n        AttributeTypes[ee.toUpperCase()] === attType ||\n        (typeof attType !== 'number' &&\n          ee.toLowerCase() === attType.toLowerCase())\n    );\n    if (typeof cleanAttType === 'undefined') {\n      cleanAttType = null;\n    }\n    return cleanAttType;\n  }\n\n  // Set our className\n  model.classHierarchy.push('vtkDataSetAttributes');\n\n  publicAPI.checkNumberOfComponents = (x) => true; // TODO\n\n  publicAPI.setAttribute = (arr, uncleanAttType) => {\n    const attType = cleanAttributeType(uncleanAttType);\n    if (\n      arr &&\n      attType.toUpperCase() === 'PEDIGREEIDS' &&\n      !arr.isA('vtkDataArray')\n    ) {\n      vtkWarningMacro(\n        `Cannot set attribute ${attType}. The attribute must be a vtkDataArray.`\n      );\n      return -1;\n    }\n    if (arr && !publicAPI.checkNumberOfComponents(arr, attType)) {\n      vtkWarningMacro(\n        `Cannot set attribute ${attType}. Incorrect number of components.`\n      );\n      return -1;\n    }\n    let currentAttribute = model[`active${attType}`];\n    if (currentAttribute >= 0 && currentAttribute < model.arrays.length) {\n      if (model.arrays[currentAttribute] === arr) {\n        return currentAttribute;\n      }\n      publicAPI.removeArrayByIndex(currentAttribute);\n    }\n\n    if (arr) {\n      currentAttribute = publicAPI.addArray(arr);\n      model[`active${attType}`] = currentAttribute;\n    } else {\n      model[`active${attType}`] = -1;\n    }\n    publicAPI.modified();\n    return model[`active${attType}`];\n  };\n\n  publicAPI.getAttributes = (arr) =>\n    attrTypes.filter((attrType) => publicAPI[`get${attrType}`]() === arr);\n\n  publicAPI.setActiveAttributeByName = (arrayName, attType) =>\n    publicAPI.setActiveAttributeByIndex(\n      publicAPI.getArrayWithIndex(arrayName).index,\n      attType\n    );\n\n  publicAPI.setActiveAttributeByIndex = (arrayIdx, uncleanAttType) => {\n    const attType = cleanAttributeType(uncleanAttType);\n    if (arrayIdx >= 0 && arrayIdx < model.arrays.length) {\n      if (attType.toUpperCase() !== 'PEDIGREEIDS') {\n        const arr = publicAPI.getArrayByIndex(arrayIdx);\n        if (!arr.isA('vtkDataArray')) {\n          vtkWarningMacro(\n            `Cannot set attribute ${attType}. Only vtkDataArray subclasses can be set as active attributes.`\n          );\n          return -1;\n        }\n        if (!publicAPI.checkNumberOfComponents(arr, attType)) {\n          vtkWarningMacro(\n            `Cannot set attribute ${attType}. Incorrect number of components.`\n          );\n          return -1;\n        }\n      }\n      model[`active${attType}`] = arrayIdx;\n      publicAPI.modified();\n      return arrayIdx;\n    }\n\n    if (arrayIdx === -1) {\n      model[`active${attType}`] = arrayIdx;\n      publicAPI.modified();\n    }\n\n    return -1;\n  };\n\n  publicAPI.getActiveAttribute = (attType) => {\n    // Given an integer enum value or a string (with random capitalization),\n    // find the matching string in attrTypes.\n    const cleanAttType = cleanAttributeType(attType);\n    return publicAPI[`get${cleanAttType}`]();\n  };\n\n  // Override to allow proper handling of active attributes\n  publicAPI.removeAllArrays = () => {\n    model.arrays = [];\n    attrTypes.forEach((attType) => {\n      model[`active${attType}`] = -1;\n    });\n  };\n\n  // Override to allow proper handling of active attributes\n  publicAPI.removeArray = (arrayName) => {\n    model.arrays = model.arrays.filter((entry, idx) => {\n      if (arrayName === entry.data.getName()) {\n        // Found the array to remove, but is it an active attribute?\n        attrTypes.forEach((attType) => {\n          if (idx === model[`active${attType}`]) {\n            model[`active${attType}`] = -1;\n          }\n        });\n        return false;\n      }\n      return true;\n    });\n  };\n\n  // Override to allow proper handling of active attributes\n  publicAPI.removeArrayByIndex = (arrayIdx) => {\n    model.arrays = model.arrays.filter((entry, idx) => idx !== arrayIdx);\n    attrTypes.forEach((attType) => {\n      if (arrayIdx === model[`active${attType}`]) {\n        model[`active${attType}`] = -1;\n      }\n    });\n  };\n\n  attrTypes.forEach((value) => {\n    const activeVal = `active${value}`;\n    publicAPI[`get${value}`] = () =>\n      publicAPI.getArrayByIndex(model[activeVal]);\n    publicAPI[`set${value}`] = (da) => publicAPI.setAttribute(da, value);\n    publicAPI[`setActive${value}`] = (arrayName) =>\n      publicAPI.setActiveAttributeByIndex(\n        publicAPI.getArrayWithIndex(arrayName).index,\n        value\n      );\n    publicAPI[`copy${value}Off`] = () => {\n      const attType = value.toUpperCase();\n      model.copyAttributeFlags[AttributeCopyOperations.PASSDATA][\n        AttributeTypes[attType]\n      ] = false;\n    };\n    publicAPI[`copy${value}On`] = () => {\n      const attType = value.toUpperCase();\n      model.copyAttributeFlags[AttributeCopyOperations.PASSDATA][\n        AttributeTypes[attType]\n      ] = true;\n    };\n  });\n\n  publicAPI.initializeAttributeCopyFlags = () => {\n    // Default to copying all attributes in every circumstance:\n    model.copyAttributeFlags = [];\n    Object.keys(AttributeCopyOperations)\n      .filter((op) => op !== 'ALLCOPY')\n      .forEach((attCopyOp) => {\n        model.copyAttributeFlags[AttributeCopyOperations[attCopyOp]] =\n          Object.keys(AttributeTypes)\n            .filter((ty) => ty !== 'NUM_ATTRIBUTES')\n            .reduce((a, b) => {\n              a[AttributeTypes[b]] = true;\n              return a;\n            }, []);\n      });\n    // Override some operations where we don't want to copy:\n    model.copyAttributeFlags[AttributeCopyOperations.COPYTUPLE][\n      AttributeTypes.GLOBALIDS\n    ] = false;\n    model.copyAttributeFlags[AttributeCopyOperations.INTERPOLATE][\n      AttributeTypes.GLOBALIDS\n    ] = false;\n    model.copyAttributeFlags[AttributeCopyOperations.COPYTUPLE][\n      AttributeTypes.PEDIGREEIDS\n    ] = false;\n  };\n\n  publicAPI.initialize = macro.chain(\n    publicAPI.initialize,\n    publicAPI.initializeAttributeCopyFlags\n  );\n\n  // Process dataArrays if any\n  if (model.dataArrays && Object.keys(model.dataArrays).length) {\n    Object.keys(model.dataArrays).forEach((name) => {\n      if (\n        !model.dataArrays[name].ref &&\n        model.dataArrays[name].type === 'vtkDataArray'\n      ) {\n        publicAPI.addArray(vtkDataArray.newInstance(model.dataArrays[name]));\n      }\n    });\n  }\n\n  const superShallowCopy = publicAPI.shallowCopy;\n  publicAPI.shallowCopy = (other, debug) => {\n    superShallowCopy(other, debug);\n    model.arrays = other.getArrays().map((arr) => {\n      const arrNew = arr.newClone();\n      arrNew.shallowCopy(arr, debug);\n      return { data: arrNew };\n    });\n  };\n\n  publicAPI.initializeAttributeCopyFlags();\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  activeScalars: -1,\n  activeVectors: -1,\n  activeTensors: -1,\n  activeNormals: -1,\n  activeTCoords: -1,\n  activeGlobalIds: -1,\n  activePedigreeIds: -1,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  vtkFieldData.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, [\n    'activeScalars',\n    'activeNormals',\n    'activeTCoords',\n    'activeVectors',\n    'activeTensors',\n    'activeGlobalIds',\n    'activePedigreeIds',\n  ]);\n\n  if (!model.arrays) {\n    model.arrays = {};\n  }\n\n  // Object specific methods\n  vtkDataSetAttributes(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkDataSetAttributes');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend, ...Constants };\n","import macro from 'vtk.js/Sources/macros';\nimport vtkImageData from 'vtk.js/Sources/Common/DataModel/ImageData';\nimport vtkPolyData from 'vtk.js/Sources/Common/DataModel/PolyData';\nimport vtkDataArray from 'vtk.js/Sources/Common/Core/DataArray';\n\nconst { vtkErrorMacro } = macro;\n\n// see itk.js PixelTypes.js\nconst ITKJSPixelTypes = {\n  Unknown: 0,\n  Scalar: 1,\n  RGB: 2,\n  RGBA: 3,\n  Offset: 4,\n  Vector: 5,\n  Point: 6,\n  CovariantVector: 7,\n  SymmetricSecondRankTensor: 8,\n  DiffusionTensor3D: 9,\n  Complex: 10,\n  FixedArray: 11,\n  Array: 12,\n  Matrix: 13,\n  VariableLengthVector: 14,\n  VariableSizeMatrix: 15,\n};\n\n// itk-wasm pixel types from https://github.com/InsightSoftwareConsortium/itk-wasm/blob/master/src/core/PixelTypes.ts\nconst ITKWASMPixelTypes = {\n  Unknown: 'Unknown',\n  Scalar: 'Scalar',\n  RGB: 'RGB',\n  RGBA: 'RGBA',\n  Offset: 'Offset',\n  Vector: 'Vector',\n  Point: 'Point',\n  CovariantVector: 'CovariantVector',\n  SymmetricSecondRankTensor: 'SymmetricSecondRankTensor',\n  DiffusionTensor3D: 'DiffusionTensor3D',\n  Complex: 'Complex',\n  FixedArray: 'FixedArray',\n  Array: 'Array',\n  Matrix: 'Matrix',\n  VariableLengthVector: 'VariableLengthVector',\n  VariableSizeMatrix: 'VariableSizeMatrix',\n};\n\nconst vtkArrayTypeToItkComponentType = new Map([\n  ['Uint8Array', 'uint8'],\n  ['Int8Array', 'int8'],\n  ['Uint16Array', 'uint16'],\n  ['Int16Array', 'int16'],\n  ['Uint32Array', 'uint32'],\n  ['Int32Array', 'int32'],\n  ['Float32Array', 'float32'],\n  ['Float64Array', 'float64'],\n]);\n\nconst itkComponentTypeToVtkArrayType = new Map([\n  ['uint8', 'Uint8Array'],\n  ['int8', 'Int8Array'],\n  ['uint16', 'Uint16Array'],\n  ['int16', 'Int16Array'],\n  ['uint32', 'Uint32Array'],\n  ['int32', 'Int32Array'],\n  ['float32', 'Float32Array'],\n  ['float64', 'Float64Array'],\n]);\n\n/**\n * Converts an itk-wasm Image to a vtk.js vtkImageData.\n *\n * Requires an itk-wasm Image as input.\n */\nfunction convertItkToVtkImage(itkImage, options = {}) {\n  const vtkImage = {\n    origin: [0, 0, 0],\n    spacing: [1, 1, 1],\n  };\n\n  const dimensions = [1, 1, 1];\n  const direction = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n  // Check whether itkImage is an itk.js Image or an itk-wasm Image?\n  const isITKWasm = itkImage.direction.data === undefined;\n  const ITKPixelTypes = isITKWasm ? ITKWASMPixelTypes : ITKJSPixelTypes;\n\n  for (let idx = 0; idx < itkImage.imageType.dimension; ++idx) {\n    vtkImage.origin[idx] = itkImage.origin[idx];\n    vtkImage.spacing[idx] = itkImage.spacing[idx];\n    dimensions[idx] = itkImage.size[idx];\n    for (let col = 0; col < itkImage.imageType.dimension; ++col) {\n      // ITK (and VTKMath) use a row-major index axis, but the direction\n      // matrix on the vtkImageData is a webGL matrix, which uses a\n      // column-major data layout. Transpose the direction matrix from\n      // itkImage when instantiating that vtkImageData direction matrix.\n      if (isITKWasm) {\n        direction[col + idx * 3] =\n          itkImage.direction[idx + col * itkImage.imageType.dimension];\n      } else {\n        direction[col + idx * 3] =\n          itkImage.direction.data[idx + col * itkImage.imageType.dimension];\n      }\n    }\n  }\n\n  // Create VTK Image Data\n  const imageData = vtkImageData.newInstance(vtkImage);\n\n  // Create VTK point data -- the data associated with the pixels / voxels\n  const pointData = vtkDataArray.newInstance({\n    name: options.scalarArrayName || 'Scalars',\n    values: itkImage.data,\n    numberOfComponents: itkImage.imageType.components,\n  });\n\n  imageData.setDirection(direction);\n  imageData.setDimensions(...dimensions);\n  // Always associate multi-component pixel types with vtk.js point data\n  // scalars to facilitate multi-component volume rendering\n  imageData.getPointData().setScalars(pointData);\n\n  // Associate the point data that are 3D vectors / tensors\n  // Refer to itk-js/src/PixelTypes.js for numerical values\n  switch (\n    isITKWasm\n      ? ITKPixelTypes[itkImage.imageType.pixelType]\n      : itkImage.imageType.pixelType\n  ) {\n    case ITKPixelTypes.Scalar:\n      break;\n    case ITKPixelTypes.RGB:\n      break;\n    case ITKPixelTypes.RGBA:\n      break;\n    case ITKPixelTypes.Offset:\n      break;\n    case ITKPixelTypes.Vector:\n      if (\n        itkImage.imageType.dimension === 3 &&\n        itkImage.imageType.components === 3\n      ) {\n        imageData.getPointData().setVectors(pointData);\n      }\n      break;\n    case ITKPixelTypes.Point:\n      break;\n    case ITKPixelTypes.CovariantVector:\n      if (\n        itkImage.imageType.dimension === 3 &&\n        itkImage.imageType.components === 3\n      ) {\n        imageData.getPointData().setVectors(pointData);\n      }\n      break;\n    case ITKPixelTypes.SymmetricSecondRankTensor:\n      if (\n        itkImage.imageType.dimension === 3 &&\n        itkImage.imageType.components === 6\n      ) {\n        imageData.getPointData().setTensors(pointData);\n      }\n      break;\n    case ITKPixelTypes.DiffusionTensor3D:\n      if (\n        itkImage.imageType.dimension === 3 &&\n        itkImage.imageType.components === 6\n      ) {\n        imageData.getPointData().setTensors(pointData);\n      }\n      break;\n    case ITKPixelTypes.Complex:\n      break;\n    case ITKPixelTypes.FixedArray:\n      break;\n    case ITKPixelTypes.Array:\n      break;\n    case ITKPixelTypes.Matrix:\n      break;\n    case ITKPixelTypes.VariableLengthVector:\n      break;\n    case ITKPixelTypes.VariableSizeMatrix:\n      break;\n    default:\n      vtkErrorMacro(\n        `Cannot handle unexpected itk-wasm pixel type ${itkImage.imageType.pixelType}`\n      );\n      return null;\n  }\n\n  return imageData;\n}\n\n/**\n * Converts a vtk.js vtkImageData to an itk-wasm Image.\n *\n * Requires a vtk.js vtkImageData as input.\n *\n */\nfunction convertVtkToItkImage(vtkImage, copyData = false) {\n  const dimension = 3;\n  const itkImage = {\n    imageType: {\n      dimension,\n      pixelType: ITKWASMPixelTypes.Scalar,\n      componentType: '',\n      components: 1,\n    },\n    name: 'vtkImageData',\n    origin: vtkImage.getOrigin(),\n    spacing: vtkImage.getSpacing(),\n    direction: new Float64Array(9),\n    size: vtkImage.getDimensions(),\n  };\n\n  const direction = vtkImage.getDirection();\n\n  // Transpose the direction matrix from column-major to row-major\n  for (let idx = 0; idx < dimension; ++idx) {\n    for (let idy = 0; idy < dimension; ++idy) {\n      itkImage.direction[idx + idy * dimension] =\n        direction[idy + idx * dimension];\n    }\n  }\n\n  const pointData = vtkImage.getPointData();\n\n  let vtkArray;\n  if (pointData.getTensors() !== null) {\n    itkImage.imageType.pixelType = ITKWASMPixelTypes.DiffusionTensor3D;\n    vtkArray = pointData.getTensors();\n  } else if (pointData.getVectors() != null) {\n    itkImage.imageType.pixelType = ITKWASMPixelTypes.Vector;\n    vtkArray = pointData.getVectors();\n  } else {\n    vtkArray = pointData.getScalars();\n  }\n\n  itkImage.imageType.componentType = vtkArrayTypeToItkComponentType.get(\n    vtkArray.getDataType()\n  );\n\n  if (copyData) {\n    // Copy the data array\n    itkImage.data = vtkArray.getData().slice(0);\n  } else {\n    itkImage.data = vtkArray.getData();\n  }\n\n  return itkImage;\n}\n\n/**\n * Converts an itk-wasm PolyData to a vtk.js vtkPolyData.\n *\n * Requires an itk-wasm PolyData as input.\n */\nfunction convertItkToVtkPolyData(itkPolyData, options = {}) {\n  const pointDataArrays = [];\n  if (itkPolyData.pointData.length) {\n    pointDataArrays.push({\n      data: {\n        vtkClass: 'vtkDataArray',\n        name: options.pointDataName || 'PointData',\n        numberOfComponents: itkPolyData.polyDataType.pointPixelComponents,\n        size: itkPolyData.pointData.length,\n        dataType: itkComponentTypeToVtkArrayType.get(\n          itkPolyData.polyDataType.pointPixelComponentType\n        ),\n        buffer: itkPolyData.pointData.buffer,\n        values: itkPolyData.pointData,\n      },\n    });\n  }\n  const cellDataArrays = [];\n  if (itkPolyData.cellData.length) {\n    cellDataArrays.push({\n      data: {\n        vtkClass: 'vtkDataArray',\n        name: options.cellDataName || 'CellData',\n        numberOfComponents: itkPolyData.polyDataType.pointPixelComponents,\n        size: itkPolyData.cellData.length,\n        dataType: itkComponentTypeToVtkArrayType.get(\n          itkPolyData.polyDataType.pointPixelComponentType\n        ),\n        buffer: itkPolyData.cellData.buffer,\n        values: itkPolyData.cellData,\n      },\n    });\n  }\n  const vtkPolyDataModel = {\n    points: {\n      vtkClass: 'vtkPoints',\n      name: '_points',\n      numberOfComponents: 3,\n      size: itkPolyData.numberOfPoints,\n      dataType: 'Float32Array',\n      buffer: itkPolyData.points.buffer,\n      values: itkPolyData.points,\n    },\n    verts: {\n      vtkClass: 'vtkCellArray',\n      name: '_verts',\n      numberOfComponents: 1,\n      size: itkPolyData.verticesBufferSize,\n      dataType: 'Uint32Array',\n      buffer: itkPolyData.vertices.buffer,\n      values: itkPolyData.vertices,\n    },\n    lines: {\n      vtkClass: 'vtkCellArray',\n      name: '_lines',\n      numberOfComponents: 1,\n      size: itkPolyData.linesBufferSize,\n      dataType: 'Uint32Array',\n      buffer: itkPolyData.lines.buffer,\n      values: itkPolyData.lines,\n    },\n    polys: {\n      vtkClass: 'vtkCellArray',\n      name: '_polys',\n      numberOfComponents: 1,\n      size: itkPolyData.polygonsBufferSize,\n      dataType: 'Uint32Array',\n      buffer: itkPolyData.polygons.buffer,\n      values: itkPolyData.polygons,\n    },\n    strips: {\n      vtkClass: 'vtkCellArray',\n      name: '_strips',\n      numberOfComponents: 1,\n      size: itkPolyData.triangleStripsBufferSize,\n      dataType: 'Uint32Array',\n      buffer: itkPolyData.triangleStrips.buffer,\n      values: itkPolyData.triangleStrips,\n    },\n    pointData: {\n      vtkClass: 'vtkDataSetAttributes',\n      activeGlobalIds: -1,\n      activeNormals: -1,\n      activePedigreeIds: -1,\n      activeScalars: -1,\n      activeTCoords: -1,\n      activeTensors: -1,\n      activeVectors: -1,\n      copyFieldFlags: [],\n      doCopyAllOff: false,\n      doCopyAllOn: true,\n      arrays: pointDataArrays,\n    },\n    cellData: {\n      vtkClass: 'vtkDataSetAttributes',\n      activeGlobalIds: -1,\n      activeNormals: -1,\n      activePedigreeIds: -1,\n      activeScalars: -1,\n      activeTCoords: -1,\n      activeTensors: -1,\n      activeVectors: -1,\n      copyFieldFlags: [],\n      doCopyAllOff: false,\n      doCopyAllOn: true,\n      arrays: cellDataArrays,\n    },\n  };\n\n  // Create VTK PolyData\n  const polyData = vtkPolyData.newInstance(vtkPolyDataModel);\n  const pd = polyData.getPointData();\n  const cd = polyData.getCellData();\n\n  if (itkPolyData.pointData.length) {\n    // Associate the point data that are 3D vectors / tensors\n    switch (ITKWASMPixelTypes[itkPolyData.polyDataType.pointPixelType]) {\n      case ITKWASMPixelTypes.Scalar:\n        pd.setScalars(pd.getArrayByIndex(0));\n        break;\n      case ITKWASMPixelTypes.RGB:\n        break;\n      case ITKWASMPixelTypes.RGBA:\n        break;\n      case ITKWASMPixelTypes.Offset:\n        break;\n      case ITKWASMPixelTypes.Vector:\n        if (itkPolyData.polyDataType.pointPixelComponents === 3) {\n          pd.setVectors(pd.getArrayByIndex(0));\n        }\n        break;\n      case ITKWASMPixelTypes.Point:\n        break;\n      case ITKWASMPixelTypes.CovariantVector:\n        if (itkPolyData.polyDataType.pointPixelComponents === 3) {\n          pd.setVectors(pd.getArrayByIndex(0));\n        }\n        break;\n      case ITKWASMPixelTypes.SymmetricSecondRankTensor:\n        if (itkPolyData.polyDataType.pointPixelComponents === 6) {\n          pd.setTensors(pd.getArrayByIndex(0));\n        }\n        break;\n      case ITKWASMPixelTypes.DiffusionTensor3D:\n        if (itkPolyData.polyDataType.pointPixelComponents === 6) {\n          pd.setTensors(pd.getArrayByIndex(0));\n        }\n        break;\n      case ITKWASMPixelTypes.Complex:\n        break;\n      case ITKWASMPixelTypes.FixedArray:\n        break;\n      case ITKWASMPixelTypes.Array:\n        break;\n      case ITKWASMPixelTypes.Matrix:\n        break;\n      case ITKWASMPixelTypes.VariableLengthVector:\n        break;\n      case ITKWASMPixelTypes.VariableSizeMatrix:\n        break;\n      default:\n        vtkErrorMacro(\n          `Cannot handle unexpected itk-wasm pixel type ${itkPolyData.polyDataType.pointPixelType}`\n        );\n        return null;\n    }\n  }\n\n  if (itkPolyData.cellData.length) {\n    // Associate the cell data that are 3D vectors / tensors\n    switch (ITKWASMPixelTypes[itkPolyData.polyDataType.cellPixelType]) {\n      case ITKWASMPixelTypes.Scalar:\n        cd.setScalars(cd.getArrayByIndex(0));\n        break;\n      case ITKWASMPixelTypes.RGB:\n        break;\n      case ITKWASMPixelTypes.RGBA:\n        break;\n      case ITKWASMPixelTypes.Offset:\n        break;\n      case ITKWASMPixelTypes.Vector:\n        if (itkPolyData.polyDataType.pointPixelComponents === 3) {\n          cd.setVectors(cd.getArrayByIndex(0));\n        }\n        break;\n      case ITKWASMPixelTypes.Point:\n        break;\n      case ITKWASMPixelTypes.CovariantVector:\n        if (itkPolyData.polyDataType.pointPixelComponents === 3) {\n          cd.setVectors(cd.getArrayByIndex(0));\n        }\n        break;\n      case ITKWASMPixelTypes.SymmetricSecondRankTensor:\n        if (itkPolyData.polyDataType.pointPixelComponents === 6) {\n          cd.setTensors(cd.getArrayByIndex(0));\n        }\n        break;\n      case ITKWASMPixelTypes.DiffusionTensor3D:\n        if (itkPolyData.polyDataType.pointPixelComponents === 6) {\n          cd.setTensors(cd.getArrayByIndex(0));\n        }\n        break;\n      case ITKWASMPixelTypes.Complex:\n        break;\n      case ITKWASMPixelTypes.FixedArray:\n        break;\n      case ITKWASMPixelTypes.Array:\n        break;\n      case ITKWASMPixelTypes.Matrix:\n        break;\n      case ITKWASMPixelTypes.VariableLengthVector:\n        break;\n      case ITKWASMPixelTypes.VariableSizeMatrix:\n        break;\n      default:\n        vtkErrorMacro(\n          `Cannot handle unexpected itk-wasm pixel type ${itkPolyData.polyDataType.pointPixelType}`\n        );\n        return null;\n    }\n  }\n  return polyData;\n}\n\n/**\n * Converts a vtk.js vtkPolyData to an itk-wasm PolyData.\n *\n * Requires a vtk.js vtkPolyData as input.\n *\n */\nfunction convertVtkToItkPolyData(polyData, options = {}) {\n  const itkPolyData = {\n    polyDataType: {\n      pointPixelComponentType: 'float32',\n      pointPixelComponents: 1,\n      pointPixelType: 'Scalar',\n      cellPixelComponentType: 'float32',\n      cellPixelComponents: 1,\n      cellPixelType: 'Scalar',\n    },\n    numberOfPoints: polyData.getNumberOfPoints(),\n    points: polyData.getPoints().getData(),\n    verticesBufferSize: polyData.getVerts().getNumberOfValues(),\n    vertices: polyData.getVerts().getData(),\n    linesBufferSize: polyData.getLines().getNumberOfValues(),\n    lines: polyData.getLines().getData(),\n    polygonsBufferSize: polyData.getPolys().getNumberOfValues(),\n    polygons: polyData.getPolys().getData(),\n    triangleStripsBufferSize: polyData.getStrips().getNumberOfValues(),\n    triangleStrips: polyData.getStrips().getData(),\n    numberOfPointPixels: 0,\n    pointData: new Float32Array(),\n    numberOfCellPixels: 0,\n    cellData: new Float32Array(),\n  };\n\n  const pd = polyData.getPointData();\n  if (pd.getNumberOfArrays()) {\n    const pdArray = options.pointDataName\n      ? pd.getArrayByName(options.pointDataName)\n      : pd.getArrayByIndex(0);\n    itkPolyData.numberOfPointPixels = pdArray.getNumberOfTuples();\n    itkPolyData.pointData = pdArray.getData();\n    itkPolyData.polyDataType.pointPixelComponentType =\n      vtkArrayTypeToItkComponentType.get(pdArray.getDataType());\n    // default to the same type\n    itkPolyData.polyDataType.cellPixelComponentType =\n      itkPolyData.polyDataType.pointPixelComponentType;\n    itkPolyData.polyDataType.pointPixelComponents =\n      pdArray.getNumberOfComponents();\n    itkPolyData.polyDataType.cellPixelComponents =\n      itkPolyData.polyDataType.pointPixelComponents;\n    if (pd.getTensors() === pdArray) {\n      itkPolyData.polyDataType.pointPixelType =\n        ITKWASMPixelTypes.SymmetricSecondRankTensor;\n    } else if (pd.getVectors() === pdArray) {\n      itkPolyData.polyDataType.pointPixelType = ITKWASMPixelTypes.Vector;\n    }\n    itkPolyData.polyDataType.cellPixelType =\n      itkPolyData.polyDataType.pointPixelType;\n  }\n\n  const cd = polyData.getCellData();\n  if (cd.getNumberOfArrays()) {\n    const cdArray = options.cellDataName\n      ? pd.getArrayByName(options.cellDataName)\n      : pd.getArrayByIndex(0);\n    itkPolyData.numberOfCellPixels = cdArray.getNumberOfTuples();\n    itkPolyData.cellData = cdArray.getData();\n    itkPolyData.polyDataType.cellPixelComponentType =\n      vtkArrayTypeToItkComponentType.get(cdArray.getDataType());\n    itkPolyData.polyDataType.cellPixelComponents =\n      cdArray.getNumberOfComponents();\n    if (cd.getTensors() === cdArray) {\n      itkPolyData.polyDataType.cellPixelType =\n        ITKWASMPixelTypes.SymmetricSecondRankTensor;\n    } else if (cd.getVectors() === cdArray) {\n      itkPolyData.polyDataType.cellPixelType = ITKWASMPixelTypes.Vector;\n    } else {\n      itkPolyData.polyDataType.cellPixelType = ITKWASMPixelTypes.Scalar;\n    }\n  }\n\n  return itkPolyData;\n}\n\nexport default {\n  convertItkToVtkImage,\n  convertVtkToItkImage,\n  convertItkToVtkPolyData,\n  convertVtkToItkPolyData,\n};\n","import macro from 'vtk.js/Sources/macros';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport vtkBoundingBox from 'vtk.js/Sources/Common/DataModel/BoundingBox';\nimport vtkDataSet from 'vtk.js/Sources/Common/DataModel/DataSet';\nimport vtkStructuredData from 'vtk.js/Sources/Common/DataModel/StructuredData';\nimport { StructuredType } from 'vtk.js/Sources/Common/DataModel/StructuredData/Constants';\nimport { vec3, mat3, mat4 } from 'gl-matrix';\n\nconst { vtkErrorMacro } = macro;\n\n// ----------------------------------------------------------------------------\n// vtkImageData methods\n// ----------------------------------------------------------------------------\n\nfunction vtkImageData(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkImageData');\n\n  publicAPI.setExtent = (...inExtent) => {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return false;\n    }\n\n    const extentArray = inExtent.length === 1 ? inExtent[0] : inExtent;\n\n    if (extentArray.length !== 6) {\n      return false;\n    }\n\n    const changeDetected = model.extent.some(\n      (item, index) => item !== extentArray[index]\n    );\n\n    if (changeDetected) {\n      model.extent = extentArray.slice();\n      model.dataDescription = vtkStructuredData.getDataDescriptionFromExtent(\n        model.extent\n      );\n      publicAPI.modified();\n    }\n    return changeDetected;\n  };\n\n  publicAPI.setDimensions = (...dims) => {\n    let i;\n    let j;\n    let k;\n\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n\n    if (dims.length === 1) {\n      const array = dims[0];\n      i = array[0];\n      j = array[1];\n      k = array[2];\n    } else if (dims.length === 3) {\n      i = dims[0];\n      j = dims[1];\n      k = dims[2];\n    } else {\n      vtkErrorMacro('Bad dimension specification');\n      return;\n    }\n\n    publicAPI.setExtent(0, i - 1, 0, j - 1, 0, k - 1);\n  };\n\n  publicAPI.getDimensions = () => [\n    model.extent[1] - model.extent[0] + 1,\n    model.extent[3] - model.extent[2] + 1,\n    model.extent[5] - model.extent[4] + 1,\n  ];\n\n  publicAPI.getNumberOfCells = () => {\n    const dims = publicAPI.getDimensions();\n    let nCells = 1;\n\n    for (let i = 0; i < 3; i++) {\n      if (dims[i] === 0) {\n        return 0;\n      }\n      if (dims[i] > 1) {\n        nCells *= dims[i] - 1;\n      }\n    }\n\n    return nCells;\n  };\n\n  publicAPI.getNumberOfPoints = () => {\n    const dims = publicAPI.getDimensions();\n    return dims[0] * dims[1] * dims[2];\n  };\n\n  publicAPI.getPoint = (index) => {\n    const dims = publicAPI.getDimensions();\n\n    if (dims[0] === 0 || dims[1] === 0 || dims[2] === 0) {\n      vtkErrorMacro('Requesting a point from an empty image.');\n      return null;\n    }\n\n    const ijk = new Float64Array(3);\n\n    switch (model.dataDescription) {\n      case StructuredType.EMPTY:\n        return null;\n\n      case StructuredType.SINGLE_POINT:\n        break;\n\n      case StructuredType.X_LINE:\n        ijk[0] = index;\n        break;\n\n      case StructuredType.Y_LINE:\n        ijk[1] = index;\n        break;\n\n      case StructuredType.Z_LINE:\n        ijk[2] = index;\n        break;\n\n      case StructuredType.XY_PLANE:\n        ijk[0] = index % dims[0];\n        ijk[1] = index / dims[0];\n        break;\n\n      case StructuredType.YZ_PLANE:\n        ijk[1] = index % dims[1];\n        ijk[2] = index / dims[1];\n        break;\n\n      case StructuredType.XZ_PLANE:\n        ijk[0] = index % dims[0];\n        ijk[2] = index / dims[0];\n        break;\n\n      case StructuredType.XYZ_GRID:\n        ijk[0] = index % dims[0];\n        ijk[1] = (index / dims[0]) % dims[1];\n        ijk[2] = index / (dims[0] * dims[1]);\n        break;\n\n      default:\n        vtkErrorMacro('Invalid dataDescription');\n        break;\n    }\n\n    const coords = [0, 0, 0];\n    publicAPI.indexToWorld(ijk, coords);\n    return coords;\n  };\n\n  // vtkCell *GetCell(vtkIdType cellId) VTK_OVERRIDE;\n  // void GetCell(vtkIdType cellId, vtkGenericCell *cell) VTK_OVERRIDE;\n  // void GetCellBounds(vtkIdType cellId, double bounds[6]) VTK_OVERRIDE;\n  // virtual vtkIdType FindPoint(double x, double y, double z)\n  // {\n  //   return this->vtkDataSet::FindPoint(x, y, z);\n  // }\n  // vtkIdType FindPoint(double x[3]) VTK_OVERRIDE;\n  // vtkIdType FindCell(\n  //   double x[3], vtkCell *cell, vtkIdType cellId, double tol2,\n  //   int& subId, double pcoords[3], double *weights) VTK_OVERRIDE;\n  // vtkIdType FindCell(\n  //   double x[3], vtkCell *cell, vtkGenericCell *gencell,\n  //   vtkIdType cellId, double tol2, int& subId,\n  //   double pcoords[3], double *weights) VTK_OVERRIDE;\n  // vtkCell *FindAndGetCell(double x[3], vtkCell *cell, vtkIdType cellId,\n  //                                 double tol2, int& subId, double pcoords[3],\n  //                                 double *weights) VTK_OVERRIDE;\n  // int GetCellType(vtkIdType cellId) VTK_OVERRIDE;\n  // void GetCellPoints(vtkIdType cellId, vtkIdList *ptIds) VTK_OVERRIDE\n  //   {vtkStructuredData::GetCellPoints(cellId,ptIds,this->DataDescription,\n  //                                     this->GetDimensions());}\n  // void GetPointCells(vtkIdType ptId, vtkIdList *cellIds) VTK_OVERRIDE\n  //   {vtkStructuredData::GetPointCells(ptId,cellIds,this->GetDimensions());}\n  // void ComputeBounds() VTK_OVERRIDE;\n  // int GetMaxCellSize() VTK_OVERRIDE {return 8;}; //voxel is the largest\n\n  publicAPI.getBounds = () =>\n    publicAPI.extentToBounds(publicAPI.getSpatialExtent());\n\n  publicAPI.extentToBounds = (ex) =>\n    vtkBoundingBox.transformBounds(ex, model.indexToWorld);\n\n  publicAPI.getSpatialExtent = () =>\n    vtkBoundingBox.inflate([...model.extent], 0.5);\n\n  // Internal, shouldn't need to call this manually.\n  publicAPI.computeTransforms = () => {\n    mat4.fromTranslation(model.indexToWorld, model.origin);\n\n    model.indexToWorld[0] = model.direction[0];\n    model.indexToWorld[1] = model.direction[1];\n    model.indexToWorld[2] = model.direction[2];\n\n    model.indexToWorld[4] = model.direction[3];\n    model.indexToWorld[5] = model.direction[4];\n    model.indexToWorld[6] = model.direction[5];\n\n    model.indexToWorld[8] = model.direction[6];\n    model.indexToWorld[9] = model.direction[7];\n    model.indexToWorld[10] = model.direction[8];\n\n    mat4.scale(model.indexToWorld, model.indexToWorld, model.spacing);\n\n    mat4.invert(model.worldToIndex, model.indexToWorld);\n  };\n\n  publicAPI.indexToWorld = (ain, aout = []) => {\n    vec3.transformMat4(aout, ain, model.indexToWorld);\n    return aout;\n  };\n  publicAPI.indexToWorldVec3 = publicAPI.indexToWorld;\n\n  publicAPI.worldToIndex = (ain, aout = []) => {\n    vec3.transformMat4(aout, ain, model.worldToIndex);\n    return aout;\n  };\n  publicAPI.worldToIndexVec3 = publicAPI.worldToIndex;\n\n  publicAPI.indexToWorldBounds = (bin, bout = []) =>\n    vtkBoundingBox.transformBounds(bin, model.indexToWorld, bout);\n\n  publicAPI.worldToIndexBounds = (bin, bout = []) =>\n    vtkBoundingBox.transformBounds(bin, model.worldToIndex, bout);\n\n  // Make sure the transform is correct\n  publicAPI.onModified(publicAPI.computeTransforms);\n  publicAPI.computeTransforms();\n\n  publicAPI.getCenter = () => vtkBoundingBox.getCenter(publicAPI.getBounds());\n\n  publicAPI.computeHistogram = (worldBounds, voxelFunc = null) => {\n    const bounds = [0, 0, 0, 0, 0, 0];\n    publicAPI.worldToIndexBounds(worldBounds, bounds);\n\n    const point1 = [0, 0, 0];\n    const point2 = [0, 0, 0];\n    vtkBoundingBox.computeCornerPoints(bounds, point1, point2);\n\n    vtkMath.roundVector(point1, point1);\n    vtkMath.roundVector(point2, point2);\n\n    const dimensions = publicAPI.getDimensions();\n\n    vtkMath.clampVector(\n      point1,\n      [0, 0, 0],\n      [dimensions[0] - 1, dimensions[1] - 1, dimensions[2] - 1],\n      point1\n    );\n    vtkMath.clampVector(\n      point2,\n      [0, 0, 0],\n      [dimensions[0] - 1, dimensions[1] - 1, dimensions[2] - 1],\n      point2\n    );\n\n    const yStride = dimensions[0];\n    const zStride = dimensions[0] * dimensions[1];\n\n    const pixels = publicAPI.getPointData().getScalars().getData();\n\n    let maximum = -Infinity;\n    let minimum = Infinity;\n    let sumOfSquares = 0;\n    let isum = 0;\n    let inum = 0;\n\n    for (let z = point1[2]; z <= point2[2]; z++) {\n      for (let y = point1[1]; y <= point2[1]; y++) {\n        let index = point1[0] + y * yStride + z * zStride;\n        for (let x = point1[0]; x <= point2[0]; x++) {\n          if (!voxelFunc || voxelFunc([x, y, z], bounds)) {\n            const pixel = pixels[index];\n\n            if (pixel > maximum) maximum = pixel;\n            if (pixel < minimum) minimum = pixel;\n            sumOfSquares += pixel * pixel;\n            isum += pixel;\n            inum += 1;\n          }\n\n          ++index;\n        }\n      }\n    }\n\n    const average = inum > 0 ? isum / inum : 0;\n    const variance = inum\n      ? Math.abs(sumOfSquares / inum - average * average)\n      : 0;\n    const sigma = Math.sqrt(variance);\n\n    return {\n      minimum,\n      maximum,\n      average,\n      variance,\n      sigma,\n      count: inum,\n    };\n  };\n\n  // TODO: use the unimplemented `vtkDataSetAttributes` for scalar length, that is currently also a TODO (GetNumberOfComponents).\n  // Scalar data could be tuples for color information?\n  publicAPI.computeIncrements = (extent, numberOfComponents = 1) => {\n    const increments = [];\n    let incr = numberOfComponents;\n\n    // Calculate array increment offsets\n    // similar to c++ vtkImageData::ComputeIncrements\n    for (let idx = 0; idx < 3; ++idx) {\n      increments[idx] = incr;\n      incr *= extent[idx * 2 + 1] - extent[idx * 2] + 1;\n    }\n    return increments;\n  };\n\n  /**\n   * @param {Number[]} index the localized `[i,j,k]` pixel array position. Float values will be rounded.\n   * @return {Number} the corresponding flattened index in the scalar array\n   */\n  publicAPI.computeOffsetIndex = ([i, j, k]) => {\n    const extent = publicAPI.getExtent();\n    const numberOfComponents = publicAPI\n      .getPointData()\n      .getScalars()\n      .getNumberOfComponents();\n    const increments = publicAPI.computeIncrements(extent, numberOfComponents);\n    // Use the array increments to find the pixel index\n    // similar to c++ vtkImageData::GetArrayPointer\n    // Math.floor to catch \"practically 0\" e^-15 scenarios.\n    return Math.floor(\n      (Math.round(i) - extent[0]) * increments[0] +\n        (Math.round(j) - extent[2]) * increments[1] +\n        (Math.round(k) - extent[4]) * increments[2]\n    );\n  };\n\n  /**\n   * @param {Number[]} xyz the [x,y,z] Array in world coordinates\n   * @return {Number|NaN} the corresponding pixel's index in the scalar array\n   */\n  publicAPI.getOffsetIndexFromWorld = (xyz) => {\n    const extent = publicAPI.getExtent();\n    const index = publicAPI.worldToIndex(xyz);\n\n    // Confirm indexed i,j,k coords are within the bounds of the volume\n    for (let idx = 0; idx < 3; ++idx) {\n      if (index[idx] < extent[idx * 2] || index[idx] > extent[idx * 2 + 1]) {\n        vtkErrorMacro(\n          `GetScalarPointer: Pixel ${index} is not in memory. Current extent = ${extent}`\n        );\n        return NaN;\n      }\n    }\n\n    // Assumed the index here is within 0 <-> scalarData.length, but doesn't hurt to check upstream\n    return publicAPI.computeOffsetIndex(index);\n  };\n  /**\n   * @param {Number[]} xyz the [x,y,z] Array in world coordinates\n   * @param {Number?} comp the scalar component index for multi-component scalars\n   * @return {Number|NaN} the corresponding pixel's scalar value\n   */\n  publicAPI.getScalarValueFromWorld = (xyz, comp = 0) => {\n    const numberOfComponents = publicAPI\n      .getPointData()\n      .getScalars()\n      .getNumberOfComponents();\n    if (comp < 0 || comp >= numberOfComponents) {\n      vtkErrorMacro(\n        `GetScalarPointer: Scalar Component ${comp} is not within bounds. Current Scalar numberOfComponents: ${numberOfComponents}`\n      );\n      return NaN;\n    }\n    const offsetIndex = publicAPI.getOffsetIndexFromWorld(xyz);\n    if (Number.isNaN(offsetIndex)) {\n      // VTK Error Macro will have been tripped already, no need to do it again,\n      return offsetIndex;\n    }\n\n    return publicAPI\n      .getPointData()\n      .getScalars()\n      .getComponent(offsetIndex, comp);\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  direction: null, // a mat3\n  indexToWorld: null, // a mat4\n  worldToIndex: null, // a mat4\n  spacing: [1.0, 1.0, 1.0],\n  origin: [0.0, 0.0, 0.0],\n  extent: [0, -1, 0, -1, 0, -1],\n  dataDescription: StructuredType.EMPTY,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkDataSet.extend(publicAPI, model, initialValues);\n\n  if (!model.direction) {\n    model.direction = mat3.identity(new Float64Array(9));\n  } else if (Array.isArray(model.direction)) {\n    model.direction = new Float64Array(model.direction.slice(0, 9));\n  }\n\n  model.indexToWorld = new Float64Array(16);\n  model.worldToIndex = new Float64Array(16);\n\n  // Set/Get methods\n  macro.get(publicAPI, model, ['indexToWorld', 'worldToIndex']);\n  macro.setGetArray(publicAPI, model, ['origin', 'spacing'], 3);\n  macro.setGetArray(publicAPI, model, ['direction'], 9);\n  macro.getArray(publicAPI, model, ['extent'], 6);\n\n  // Object specific methods\n  vtkImageData(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkImageData');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","export const IntersectionState = {\n  NO_INTERSECTION: 0,\n  YES_INTERSECTION: 1,\n  ON_LINE: 2,\n};\n\nexport default {\n  IntersectionState,\n};\n","import macro from 'vtk.js/Sources/macros';\nimport Constants from 'vtk.js/Sources/Common/DataModel/Line/Constants';\nimport vtkCell from 'vtk.js/Sources/Common/DataModel/Cell';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\n\nconst { IntersectionState } = Constants;\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\nfunction distanceToLine(x, p1, p2, closestPoint = null) {\n  const outObj = { t: Number.MIN_VALUE, distance: 0 };\n  const p21 = [];\n  let closest;\n  // Determine appropriate vector\n  p21[0] = p2[0] - p1[0];\n  p21[1] = p2[1] - p1[1];\n  p21[2] = p2[2] - p1[2];\n\n  // Get parametric location\n  const num =\n    p21[0] * (x[0] - p1[0]) + p21[1] * (x[1] - p1[1]) + p21[2] * (x[2] - p1[2]);\n  const denom = vtkMath.dot(p21, p21);\n\n  // trying to avoid an expensive fabs\n  let tolerance = 1e-5 * num;\n  if (denom !== 0.0) {\n    outObj.t = num / denom;\n  }\n  if (tolerance < 0.0) {\n    tolerance = -tolerance;\n  }\n  if (-tolerance < denom && denom < tolerance) {\n    closest = p1;\n  } else if (denom <= 0.0 || outObj.t < 0.0) {\n    // If parametric coordinate is within 0<=p<=1, then the point is closest to\n    // the line.  Otherwise, it's closest to a point at the end of the line.\n    closest = p1;\n  } else if (outObj.t > 1.0) {\n    closest = p2;\n  } else {\n    closest = p21;\n    p21[0] = p1[0] + outObj.t * p21[0];\n    p21[1] = p1[1] + outObj.t * p21[1];\n    p21[2] = p1[2] + outObj.t * p21[2];\n  }\n\n  if (closestPoint) {\n    closestPoint[0] = closest[0];\n    closestPoint[1] = closest[1];\n    closestPoint[2] = closest[2];\n  }\n  outObj.distance = vtkMath.distance2BetweenPoints(closest, x);\n  return outObj;\n}\n\nfunction intersection(a1, a2, b1, b2, u, v) {\n  const a21 = [];\n  const b21 = [];\n  const b1a1 = [];\n\n  u[0] = 0.0;\n  v[0] = 0.0;\n\n  // Determine line vectors.\n  vtkMath.subtract(a2, a1, a21);\n  vtkMath.subtract(b2, b1, b21);\n  vtkMath.subtract(b1, a1, b1a1);\n\n  // Compute the system (least squares) matrix.\n  const A = [\n    vtkMath.dot(a21, a21),\n    -vtkMath.dot(a21, b21),\n    -vtkMath.dot(a21, b21),\n    vtkMath.dot(b21, b21),\n  ];\n\n  // Compute the least squares system constant term.\n  const c = [];\n  c[0] = vtkMath.dot(a21, b1a1);\n  c[1] = -vtkMath.dot(b21, b1a1);\n  // Solve the system of equations\n  if (vtkMath.solveLinearSystem(A, c, 2) === 0) {\n    // The lines are colinear. Therefore, one of the four endpoints is the\n    // point of closest approach\n    let minDist = Number.MAX_VALUE;\n    const p = [a1, a2, b1, b2];\n    const l1 = [b1, b1, a1, a1];\n    const l2 = [b2, b2, a2, a2];\n    const uv1 = [v[0], v[0], u[0], u[0]];\n    const uv2 = [u[0], u[0], v[0], v[0]];\n    let obj;\n    for (let i = 0; i < 4; i++) {\n      obj = distanceToLine(p[i], l1[i], l2[i]);\n      if (obj.distance < minDist) {\n        minDist = obj.distance;\n        uv1[i] = obj.t;\n        uv2[i] = i % 2;\n      }\n    }\n    return IntersectionState.ON_LINE;\n  }\n  u[0] = c[0];\n  v[0] = c[1];\n\n  // Check parametric coordinates for intersection.\n  if (u[0] >= 0.0 && u[0] <= 1.0 && v[0] >= 0.0 && v[0] <= 1.0) {\n    return IntersectionState.YES_INTERSECTION;\n  }\n\n  return IntersectionState.NO_INTERSECTION;\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nexport const STATIC = {\n  distanceToLine,\n  intersection,\n};\n\n// ----------------------------------------------------------------------------\n// vtkLine methods\n// ----------------------------------------------------------------------------\n\nfunction vtkLine(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkLine');\n\n  function isBetweenPoints(t) {\n    return t >= 0.0 && t <= 1.0;\n  }\n\n  publicAPI.getCellDimension = () => 1;\n  publicAPI.intersectWithLine = (p1, p2, tol, x, pcoords) => {\n    const outObj = {\n      intersect: 0,\n      t: Number.MAX_VALUE,\n      subId: 0,\n      betweenPoints: null,\n    };\n    pcoords[1] = 0.0;\n    pcoords[2] = 0.0;\n    const projXYZ = [];\n\n    const a1 = [];\n    const a2 = [];\n    model.points.getPoint(0, a1);\n    model.points.getPoint(1, a2);\n\n    const u = [];\n    const v = [];\n    const intersect = intersection(p1, p2, a1, a2, u, v);\n    outObj.t = u[0];\n    outObj.betweenPoints = isBetweenPoints(outObj.t);\n    pcoords[0] = v[0];\n\n    if (intersect === IntersectionState.YES_INTERSECTION) {\n      // make sure we are within tolerance\n      for (let i = 0; i < 3; i++) {\n        x[i] = a1[i] + pcoords[0] * (a2[i] - a1[i]);\n        projXYZ[i] = p1[i] + outObj.t * (p2[i] - p1[i]);\n      }\n      if (vtkMath.distance2BetweenPoints(x, projXYZ) <= tol * tol) {\n        outObj.intersect = 1;\n        return outObj;\n      }\n    } else {\n      let outDistance;\n      // check to see if it lies within tolerance\n      // one of the parametric coords must be outside 0-1\n      if (outObj.t < 0.0) {\n        outDistance = distanceToLine(p1, a1, a2, x);\n        if (outDistance.distance <= tol * tol) {\n          outObj.t = 0.0;\n          outObj.intersect = 1;\n          outObj.betweenPoints = true; // Intersection is near p1\n          return outObj;\n        }\n        return outObj;\n      }\n      if (outObj.t > 1.0) {\n        outDistance = distanceToLine(p2, a1, a2, x);\n        if (outDistance.distance <= tol * tol) {\n          outObj.t = 1.0;\n          outObj.intersect = 1;\n          outObj.betweenPoints = true; // Intersection is near p2\n          return outObj;\n        }\n        return outObj;\n      }\n      if (pcoords[0] < 0.0) {\n        pcoords[0] = 0.0;\n        outDistance = distanceToLine(a1, p1, p2, x);\n        outObj.t = outDistance.t;\n        if (outDistance.distance <= tol * tol) {\n          outObj.intersect = 1;\n          return outObj;\n        }\n        return outObj;\n      }\n      if (pcoords[0] > 1.0) {\n        pcoords[0] = 1.0;\n        outDistance = distanceToLine(a2, p1, p2, x);\n        outObj.t = outDistance.t;\n        if (outDistance.distance <= tol * tol) {\n          outObj.intersect = 1;\n          return outObj;\n        }\n        return outObj;\n      }\n    }\n    return outObj;\n  };\n\n  publicAPI.evaluateLocation = (pcoords, x, weights) => {\n    const a1 = [];\n    const a2 = [];\n    model.points.getPoint(0, a1);\n    model.points.getPoint(1, a2);\n\n    for (let i = 0; i < 3; i++) {\n      x[i] = a1[i] + pcoords[0] * (a2[i] - a1[i]);\n    }\n\n    weights[0] = 1.0 - pcoords[0];\n    weights[1] = pcoords[0];\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  vtkCell.extend(publicAPI, model, initialValues);\n\n  vtkLine(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkLine');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend, ...STATIC, ...Constants };\n","import * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport macro from 'vtk.js/Sources/macros';\n\nconst PLANE_TOLERANCE = 1.0e-6;\nconst COINCIDE = 'coincide';\nconst DISJOINT = 'disjoint';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction evaluate(normal, origin, x) {\n  return (\n    normal[0] * (x[0] - origin[0]) +\n    normal[1] * (x[1] - origin[1]) +\n    normal[2] * (x[2] - origin[2])\n  );\n}\n\nfunction distanceToPlane(x, origin, normal) {\n  const distance =\n    normal[0] * (x[0] - origin[0]) +\n    normal[1] * (x[1] - origin[1]) +\n    normal[2] * (x[2] - origin[2]);\n\n  return Math.abs(distance);\n}\n\nfunction projectPoint(x, origin, normal, xproj) {\n  const xo = [];\n  vtkMath.subtract(x, origin, xo);\n\n  const t = vtkMath.dot(normal, xo);\n\n  xproj[0] = x[0] - t * normal[0];\n  xproj[1] = x[1] - t * normal[1];\n  xproj[2] = x[2] - t * normal[2];\n}\n\nfunction projectVector(v, normal, vproj) {\n  const t = vtkMath.dot(v, normal);\n\n  let n2 = vtkMath.dot(normal, normal);\n  if (n2 === 0) {\n    n2 = 1.0;\n  }\n\n  vproj[0] = v[0] - (t * normal[0]) / n2;\n  vproj[1] = v[1] - (t * normal[1]) / n2;\n  vproj[2] = v[2] - (t * normal[2]) / n2;\n  return vproj;\n}\n\nfunction generalizedProjectPoint(x, origin, normal, xproj) {\n  const xo = [];\n  vtkMath.subtract(x, origin, xo);\n\n  const t = vtkMath.dot(normal, xo);\n  const n2 = vtkMath.dot(normal, normal);\n\n  if (n2 !== 0) {\n    xproj[0] = x[0] - (t * normal[0]) / n2;\n    xproj[1] = x[1] - (t * normal[1]) / n2;\n    xproj[2] = x[2] - (t * normal[2]) / n2;\n  } else {\n    xproj[0] = x[0];\n    xproj[1] = x[1];\n    xproj[2] = x[2];\n  }\n}\n\nfunction intersectWithLine(p1, p2, origin, normal) {\n  const outObj = {\n    intersection: false,\n    betweenPoints: false,\n    t: Number.MAX_VALUE,\n    x: [],\n  };\n\n  const p21 = [];\n  const p1Origin = [];\n  // Compute line vector\n  vtkMath.subtract(p2, p1, p21);\n  vtkMath.subtract(origin, p1, p1Origin);\n\n  // Compute denominator.  If ~0, line and plane are parallel.\n  // const num = vtkMath.dot(normal, origin) - vtkMath.dot(normal, p1);\n  const num = vtkMath.dot(normal, p1Origin);\n  const den = vtkMath.dot(normal, p21);\n\n  // If denominator with respect to numerator is \"zero\", then the line and\n  // plane are considered parallel.\n  let fabsden;\n  let fabstolerance;\n\n  // Trying to avoid an expensive call to fabs()\n  if (den < 0.0) {\n    fabsden = -den;\n  } else {\n    fabsden = den;\n  }\n  if (num < 0.0) {\n    fabstolerance = -num * PLANE_TOLERANCE;\n  } else {\n    fabstolerance = num * PLANE_TOLERANCE;\n  }\n  if (fabsden <= fabstolerance) {\n    return outObj;\n  }\n\n  // Where on the line between p1 and p2 is the intersection\n  // If between 0 and 1, it is between the two points. If < 0 it's before p1, if > 1 it's after p2\n  outObj.t = num / den;\n\n  outObj.x[0] = p1[0] + outObj.t * p21[0];\n  outObj.x[1] = p1[1] + outObj.t * p21[1];\n  outObj.x[2] = p1[2] + outObj.t * p21[2];\n\n  outObj.intersection = true;\n  outObj.betweenPoints = outObj.t >= 0.0 && outObj.t <= 1.0;\n  return outObj;\n}\n\nfunction intersectWithPlane(\n  plane1Origin,\n  plane1Normal,\n  plane2Origin,\n  plane2Normal\n) {\n  const outObj = {\n    intersection: false,\n    l0: [],\n    l1: [],\n    error: null,\n  };\n\n  const cross = [];\n  vtkMath.cross(plane1Normal, plane2Normal, cross);\n  const absCross = cross.map((n) => Math.abs(n));\n\n  // test if the two planes are parallel\n  if (absCross[0] + absCross[1] + absCross[2] < PLANE_TOLERANCE) {\n    // test if disjoint or coincide\n    const v = [];\n    vtkMath.subtract(plane1Origin, plane2Origin, v);\n    if (vtkMath.dot(plane1Normal, v) === 0) {\n      outObj.error = COINCIDE;\n    } else {\n      outObj.error = DISJOINT;\n    }\n    return outObj;\n  }\n\n  // Plane1 and Plane2 intersect in a line\n  // first determine max abs coordinate of the cross product\n  let maxc;\n  if (absCross[0] > absCross[1] && absCross[0] > absCross[2]) {\n    maxc = 'x';\n  } else if (absCross[1] > absCross[2]) {\n    maxc = 'y';\n  } else {\n    maxc = 'z';\n  }\n\n  // To get a point on the intersect line, zero the max coord, and solve for the other two\n  const iP = []; // intersectionPoint\n  // the constants in the 2 plane equations\n  const d1 = -vtkMath.dot(plane1Normal, plane1Origin);\n  const d2 = -vtkMath.dot(plane2Normal, plane2Origin);\n\n  // eslint-disable-next-line default-case\n  switch (maxc) {\n    case 'x': // intersect with x=0\n      iP[0] = 0;\n      iP[1] = (d2 * plane1Normal[2] - d1 * plane2Normal[2]) / cross[0];\n      iP[2] = (d1 * plane2Normal[1] - d2 * plane1Normal[1]) / cross[0];\n      break;\n    case 'y': // intersect with y=0\n      iP[0] = (d1 * plane2Normal[2] - d2 * plane1Normal[2]) / cross[1];\n      iP[1] = 0;\n      iP[2] = (d2 * plane1Normal[0] - d1 * plane2Normal[0]) / cross[1];\n      break;\n    case 'z': // intersect with z=0\n      iP[0] = (d2 * plane1Normal[1] - d1 * plane2Normal[1]) / cross[2];\n      iP[1] = (d1 * plane2Normal[0] - d2 * plane1Normal[0]) / cross[2];\n      iP[2] = 0;\n      break;\n  }\n\n  outObj.l0 = iP;\n  vtkMath.add(iP, cross, outObj.l1);\n  outObj.intersection = true;\n\n  return outObj;\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nexport const STATIC = {\n  evaluate,\n  distanceToPlane,\n  projectPoint,\n  projectVector,\n  generalizedProjectPoint,\n  intersectWithLine,\n  intersectWithPlane,\n  DISJOINT,\n  COINCIDE,\n};\n\n// ----------------------------------------------------------------------------\n// vtkPlane methods\n// ----------------------------------------------------------------------------\n\nexport function vtkPlane(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPlane');\n\n  publicAPI.distanceToPlane = (x) =>\n    distanceToPlane(x, model.origin, model.normal);\n\n  publicAPI.projectPoint = (x, xproj) => {\n    projectPoint(x, model.origin, model.normal, xproj);\n  };\n\n  publicAPI.projectVector = (v, vproj) => projectVector(v, model.normal, vproj);\n\n  publicAPI.push = (distance) => {\n    if (distance === 0.0) {\n      return;\n    }\n    for (let i = 0; i < 3; i++) {\n      model.origin[i] += distance * model.normal[i];\n    }\n  };\n\n  publicAPI.generalizedProjectPoint = (x, xproj) => {\n    generalizedProjectPoint(x, model.origin, model.normal, xproj);\n  };\n\n  publicAPI.evaluateFunction = (x, y, z) => {\n    if (!Array.isArray(x)) {\n      return (\n        model.normal[0] * (x - model.origin[0]) +\n        model.normal[1] * (y - model.origin[1]) +\n        model.normal[2] * (z - model.origin[2])\n      );\n    }\n    return (\n      model.normal[0] * (x[0] - model.origin[0]) +\n      model.normal[1] * (x[1] - model.origin[1]) +\n      model.normal[2] * (x[2] - model.origin[2])\n    );\n  };\n\n  publicAPI.evaluateGradient = (xyz) => {\n    const retVal = [model.normal[0], model.normal[1], model.normal[2]];\n    return retVal;\n  };\n\n  publicAPI.intersectWithLine = (p1, p2) =>\n    intersectWithLine(p1, p2, model.origin, model.normal);\n\n  publicAPI.intersectWithPlane = (planeOrigin, planeNormal) =>\n    intersectWithPlane(planeOrigin, planeNormal, model.origin, model.normal);\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  normal: [0.0, 0.0, 1.0],\n  origin: [0.0, 0.0, 0.0],\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Object methods\n  macro.obj(publicAPI, model);\n\n  macro.setGetArray(publicAPI, model, ['normal', 'origin'], 3);\n\n  vtkPlane(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkPlane');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend, ...STATIC };\n","import vtk from 'vtk.js/Sources/vtk';\nimport macro from 'vtk.js/Sources/macros';\nimport vtkDataSet from 'vtk.js/Sources/Common/DataModel/DataSet';\nimport vtkPoints from 'vtk.js/Sources/Common/Core/Points';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\n// ----------------------------------------------------------------------------\n// vtkPointSet methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPointSet(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPointSet');\n\n  // Create empty points\n  if (!model.points) {\n    model.points = vtkPoints.newInstance();\n  } else {\n    model.points = vtk(model.points);\n  }\n\n  publicAPI.getNumberOfPoints = () => model.points.getNumberOfPoints();\n\n  publicAPI.getBounds = () => model.points.getBounds();\n\n  publicAPI.computeBounds = () => {\n    publicAPI.getBounds();\n  };\n\n  const superShallowCopy = publicAPI.shallowCopy;\n  publicAPI.shallowCopy = (other, debug = false) => {\n    superShallowCopy(other, debug);\n    model.points = vtkPoints.newInstance();\n    model.points.shallowCopy(other.getPoints());\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // points: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkDataSet.extend(publicAPI, model, initialValues);\n  macro.setGet(publicAPI, model, ['points']);\n\n  // Object specific methods\n  vtkPointSet(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkPointSet');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","export const POLYDATA_FIELDS = ['verts', 'lines', 'polys', 'strips'];\n\nexport default {\n  POLYDATA_FIELDS,\n};\n","import macro from 'vtk.js/Sources/macros';\nimport vtk from 'vtk.js/Sources/vtk';\nimport vtkCellArray from 'vtk.js/Sources/Common/Core/CellArray';\nimport vtkCellLinks from 'vtk.js/Sources/Common/DataModel/CellLinks';\nimport vtkCellTypes from 'vtk.js/Sources/Common/DataModel/CellTypes';\nimport vtkLine from 'vtk.js/Sources/Common/DataModel/Line';\nimport vtkPointSet from 'vtk.js/Sources/Common/DataModel/PointSet';\nimport vtkTriangle from 'vtk.js/Sources/Common/DataModel/Triangle';\n\nimport { CellType } from 'vtk.js/Sources/Common/DataModel/CellTypes/Constants';\nimport { POLYDATA_FIELDS } from 'vtk.js/Sources/Common/DataModel/PolyData/Constants';\n\nconst { vtkWarningMacro } = macro;\n\nexport const CELL_FACTORY = {\n  [CellType.VTK_LINE]: vtkLine,\n  [CellType.VTK_POLY_LINE]: vtkLine,\n  [CellType.VTK_TRIANGLE]: vtkTriangle,\n};\n\n// ----------------------------------------------------------------------------\n// vtkPolyData methods\n// ----------------------------------------------------------------------------\n\nfunction vtkPolyData(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkPolyData');\n\n  function camelize(str) {\n    return str\n      .replace(/(?:^\\w|[A-Z]|\\b\\w)/g, (letter) => letter.toUpperCase())\n      .replace(/\\s+/g, '');\n  }\n\n  // build empty cell arrays and set methods\n  POLYDATA_FIELDS.forEach((type) => {\n    publicAPI[`getNumberOf${camelize(type)}`] = () =>\n      model[type].getNumberOfCells();\n    if (!model[type]) {\n      model[type] = vtkCellArray.newInstance();\n    } else {\n      model[type] = vtk(model[type]);\n    }\n  });\n\n  publicAPI.getNumberOfCells = () =>\n    POLYDATA_FIELDS.reduce(\n      (num, cellType) => num + model[cellType].getNumberOfCells(),\n      0\n    );\n\n  const superShallowCopy = publicAPI.shallowCopy;\n  publicAPI.shallowCopy = (other, debug = false) => {\n    superShallowCopy(other, debug);\n    POLYDATA_FIELDS.forEach((type) => {\n      model[type] = vtkCellArray.newInstance();\n      model[type].shallowCopy(other.getReferenceByName(type));\n    });\n  };\n\n  publicAPI.buildCells = () => {\n    // here are the number of cells we have\n    const nVerts = publicAPI.getNumberOfVerts();\n    const nLines = publicAPI.getNumberOfLines();\n    const nPolys = publicAPI.getNumberOfPolys();\n    const nStrips = publicAPI.getNumberOfStrips();\n\n    // pre-allocate the space we need\n    const nCells = nVerts + nLines + nPolys + nStrips;\n\n    const types = new Uint8Array(nCells);\n    let pTypes = types;\n    const locs = new Uint32Array(nCells);\n    let pLocs = locs;\n\n    // record locations and type of each cell.\n    // verts\n    if (nVerts) {\n      let nextCellPts = 0;\n      model.verts.getCellSizes().forEach((numCellPts, index) => {\n        pLocs[index] = nextCellPts;\n        pTypes[index] =\n          numCellPts > 1 ? CellType.VTK_POLY_VERTEX : CellType.VTK_VERTEX;\n        nextCellPts += numCellPts + 1;\n      });\n\n      pLocs = pLocs.subarray(nVerts);\n      pTypes = pTypes.subarray(nVerts);\n    }\n\n    // lines\n    if (nLines) {\n      let nextCellPts = 0;\n      model.lines.getCellSizes().forEach((numCellPts, index) => {\n        pLocs[index] = nextCellPts;\n        pTypes[index] =\n          numCellPts > 2 ? CellType.VTK_POLY_LINE : CellType.VTK_LINE;\n        if (numCellPts === 1) {\n          vtkWarningMacro(\n            'Building VTK_LINE ',\n            index,\n            ' with only one point, but VTK_LINE needs at least two points. Check the input.'\n          );\n        }\n        nextCellPts += numCellPts + 1;\n      });\n\n      pLocs = pLocs.subarray(nLines);\n      pTypes = pTypes.subarray(nLines);\n    }\n\n    // polys\n    if (nPolys) {\n      let nextCellPts = 0;\n      model.polys.getCellSizes().forEach((numCellPts, index) => {\n        pLocs[index] = nextCellPts;\n        switch (numCellPts) {\n          case 3:\n            pTypes[index] = CellType.VTK_TRIANGLE;\n            break;\n          case 4:\n            pTypes[index] = CellType.VTK_QUAD;\n            break;\n          default:\n            pTypes[index] = CellType.VTK_POLYGON;\n            break;\n        }\n        if (numCellPts < 3) {\n          vtkWarningMacro(\n            'Building VTK_TRIANGLE ',\n            index,\n            ' with less than three points, but VTK_TRIANGLE needs at least three points. Check the input.'\n          );\n        }\n        nextCellPts += numCellPts + 1;\n      });\n\n      pLocs += pLocs.subarray(nPolys);\n      pTypes += pTypes.subarray(nPolys);\n    }\n\n    // strips\n    if (nStrips) {\n      let nextCellPts = 0;\n      pTypes.fill(CellType.VTK_TRIANGLE_STRIP, 0, nStrips);\n\n      model.strips.getCellSizes().forEach((numCellPts, index) => {\n        pLocs[index] = nextCellPts;\n        nextCellPts += numCellPts + 1;\n      });\n    }\n\n    // set up the cell types data structure\n    model.cells = vtkCellTypes.newInstance();\n    model.cells.setCellTypes(nCells, types, locs);\n  };\n\n  /**\n   * Create upward links from points to cells that use each point. Enables\n   * topologically complex queries.\n   */\n  publicAPI.buildLinks = (initialSize = 0) => {\n    if (model.cells === undefined) {\n      publicAPI.buildCells();\n    }\n\n    model.links = vtkCellLinks.newInstance();\n    if (initialSize > 0) {\n      model.links.allocate(initialSize);\n    } else {\n      model.links.allocate(publicAPI.getPoints().getNumberOfPoints());\n    }\n\n    model.links.buildLinks(publicAPI);\n  };\n\n  publicAPI.getCellType = (cellId) => model.cells.getCellType(cellId);\n\n  publicAPI.getCellPoints = (cellId) => {\n    const cellType = publicAPI.getCellType(cellId);\n    let cells = null;\n    switch (cellType) {\n      case CellType.VTK_VERTEX:\n      case CellType.VTK_POLY_VERTEX:\n        cells = model.verts;\n        break;\n\n      case CellType.VTK_LINE:\n      case CellType.VTK_POLY_LINE:\n        cells = model.lines;\n        break;\n\n      case CellType.VTK_TRIANGLE:\n      case CellType.VTK_QUAD:\n      case CellType.VTK_POLYGON:\n        cells = model.polys;\n        break;\n\n      case CellType.VTK_TRIANGLE_STRIP:\n        cells = model.strips;\n        break;\n\n      default:\n        cells = null;\n        return { type: 0, cellPointIds: null };\n    }\n    const loc = model.cells.getCellLocation(cellId);\n    const cellPointIds = cells.getCell(loc);\n    return { cellType, cellPointIds };\n  };\n\n  publicAPI.getPointCells = (ptId) => model.links.getCells(ptId);\n\n  publicAPI.getCellEdgeNeighbors = (cellId, point1, point2) => {\n    const link1 = model.links.getLink(point1);\n    const link2 = model.links.getLink(point2);\n\n    return link1.cells.filter(\n      (cell) => cell !== cellId && link2.cells.indexOf(cell) !== -1\n    );\n  };\n\n  /**\n   * If you know the type of cell, you may provide it to improve performances.\n   */\n  publicAPI.getCell = (cellId, cellHint = null) => {\n    const cellInfo = publicAPI.getCellPoints(cellId);\n    const cell = cellHint || CELL_FACTORY[cellInfo.cellType].newInstance();\n    cell.initialize(publicAPI.getPoints(), cellInfo.cellPointIds);\n    return cell;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {\n  // verts: null,\n  // lines: null,\n  // polys: null,\n  // strips: null,\n  // cells: null,\n  // links: null,\n};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  // Inheritance\n  vtkPointSet.extend(publicAPI, model, initialValues);\n  macro.get(publicAPI, model, ['cells', 'links']);\n  macro.setGet(publicAPI, model, ['verts', 'lines', 'polys', 'strips']);\n\n  // Object specific methods\n  vtkPolyData(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkPolyData');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend };\n","export const StructuredType = {\n  UNCHANGED: 0,\n  SINGLE_POINT: 1,\n  X_LINE: 2,\n  Y_LINE: 3,\n  Z_LINE: 4,\n  XY_PLANE: 5,\n  YZ_PLANE: 6,\n  XZ_PLANE: 7,\n  XYZ_GRID: 8,\n  EMPTY: 9,\n};\n\nexport default {\n  StructuredType,\n};\n","import Constants from 'vtk.js/Sources/Common/DataModel/StructuredData/Constants';\n\nconst { StructuredType } = Constants;\n\nexport function getDataDescriptionFromExtent(inExt) {\n  let dataDim = 0;\n  for (let i = 0; i < 3; ++i) {\n    if (inExt[i * 2] < inExt[i * 2 + 1]) {\n      dataDim++;\n    }\n  }\n\n  if (inExt[0] > inExt[1] || inExt[2] > inExt[3] || inExt[4] > inExt[5]) {\n    return StructuredType.EMPTY;\n  }\n\n  if (dataDim === 3) {\n    return StructuredType.XYZ_GRID;\n  }\n\n  if (dataDim === 2) {\n    if (inExt[0] === inExt[1]) {\n      return StructuredType.YZ_PLANE;\n    }\n\n    if (inExt[2] === inExt[3]) {\n      return StructuredType.XZ_PLANE;\n    }\n    return StructuredType.XY_PLANE;\n  }\n\n  if (dataDim === 1) {\n    if (inExt[0] < inExt[1]) {\n      return StructuredType.X_LINE;\n    }\n\n    if (inExt[2] < inExt[3]) {\n      return StructuredType.Y_LINE;\n    }\n\n    return StructuredType.Z_LINE;\n  }\n\n  return StructuredType.SINGLE_POINT;\n}\n\nexport default { getDataDescriptionFromExtent, ...Constants };\n","import macro from 'vtk.js/Sources/macros';\nimport vtkCell from 'vtk.js/Sources/Common/DataModel/Cell';\nimport * as vtkMath from 'vtk.js/Sources/Common/Core/Math';\nimport vtkLine from 'vtk.js/Sources/Common/DataModel/Line';\nimport vtkPlane from 'vtk.js/Sources/Common/DataModel/Plane';\n\n// ----------------------------------------------------------------------------\n// Global methods\n// ----------------------------------------------------------------------------\n\nfunction computeNormalDirection(v1, v2, v3, n) {\n  // order is important!!! maintain consistency with triangle vertex order\n  const ax = v3[0] - v2[0];\n  const ay = v3[1] - v2[1];\n  const az = v3[2] - v2[2];\n  const bx = v1[0] - v2[0];\n  const by = v1[1] - v2[1];\n  const bz = v1[2] - v2[2];\n\n  n[0] = ay * bz - az * by;\n  n[1] = az * bx - ax * bz;\n  n[2] = ax * by - ay * bx;\n}\n\nfunction computeNormal(v1, v2, v3, n) {\n  computeNormalDirection(v1, v2, v3, n);\n  const length = Math.sqrt(n[0] * n[0] + n[1] * n[1] + n[2] * n[2]);\n  if (length !== 0.0) {\n    n[0] /= length;\n    n[1] /= length;\n    n[2] /= length;\n  }\n}\n\nfunction intersectWithTriangle(p1, q1, r1, p2, q2, r2, tolerance = 1e-6) {\n  let coplanar = false;\n  const pt1 = [];\n  const pt2 = [];\n  const surfaceId = [];\n\n  const n1 = [];\n  const n2 = [];\n\n  // Compute supporting plane normals.\n  computeNormal(p1, q1, r1, n1);\n  computeNormal(p2, q2, r2, n2);\n  const s1 = -vtkMath.dot(n1, p1);\n  const s2 = -vtkMath.dot(n2, p2);\n\n  // Compute signed distances of points p1, q1, r1 from supporting\n  // plane of second triangle.\n  const dist1 = [\n    vtkMath.dot(n2, p1) + s2,\n    vtkMath.dot(n2, q1) + s2,\n    vtkMath.dot(n2, r1) + s2,\n  ];\n\n  // If signs of all points are the same, all the points lie on the\n  // same side of the supporting plane, and we can exit early.\n  if (dist1[0] * dist1[1] > tolerance && dist1[0] * dist1[2] > tolerance) {\n    // vtkDebugMacro(<<\"Same side supporting plane 1!\");\n    return { intersect: false, coplanar, pt1, pt2, surfaceId };\n  }\n  // Do the same for p2, q2, r2 and supporting plane of first\n  // triangle.\n  const dist2 = [\n    vtkMath.dot(n1, p2) + s1,\n    vtkMath.dot(n1, q2) + s1,\n    vtkMath.dot(n1, r2) + s1,\n  ];\n\n  // If signs of all points are the same, all the points lie on the\n  // same side of the supporting plane, and we can exit early.\n  if (dist2[0] * dist2[1] > tolerance && dist2[0] * dist2[2] > tolerance) {\n    // vtkDebugMacro(<<\"Same side supporting plane 2!\");\n    return { intersect: false, coplanar, pt1, pt2, surfaceId };\n  }\n  // Check for coplanarity of the supporting planes.\n  if (\n    Math.abs(n1[0] - n2[0]) < 1e-9 &&\n    Math.abs(n1[1] - n2[1]) < 1e-9 &&\n    Math.abs(n1[2] - n2[2]) < 1e-9 &&\n    Math.abs(s1 - s2) < 1e-9\n  ) {\n    coplanar = true;\n    // vtkDebugMacro(<<\"Coplanar!\");\n    return { intersect: false, coplanar, pt1, pt2, surfaceId };\n  }\n\n  // There are more efficient ways to find the intersection line (if\n  // it exists), but this is clear enough.\n  const pts1 = [p1, q1, r1];\n  const pts2 = [p2, q2, r2];\n\n  // Find line of intersection (L = p + t*v) between two planes.\n  const n1n2 = vtkMath.dot(n1, n2);\n  const a = (s1 - s2 * n1n2) / (n1n2 * n1n2 - 1.0);\n  const b = (s2 - s1 * n1n2) / (n1n2 * n1n2 - 1.0);\n  const p = [\n    a * n1[0] + b * n2[0],\n    a * n1[1] + b * n2[1],\n    a * n1[2] + b * n2[2],\n  ];\n  const v = vtkMath.cross(n1, n2, []);\n  vtkMath.normalize(v);\n\n  let index1 = 0;\n  let index2 = 0;\n  const t1 = [];\n  const t2 = [];\n  let ts1 = 50;\n  let ts2 = 50;\n  for (let i = 0; i < 3; i++) {\n    const id1 = i;\n    const id2 = (i + 1) % 3;\n\n    // Find t coordinate on line of intersection between two planes.\n    const val1 = vtkPlane.intersectWithLine(pts1[id1], pts1[id2], p2, n2);\n    if (val1.intersection && val1.t > 0 - tolerance && val1.t < 1 + tolerance) {\n      if (val1.t < 1 + tolerance && val1.t > 1 - tolerance) {\n        ts1 = index1;\n      }\n      t1[index1++] = vtkMath.dot(val1.x, v) - vtkMath.dot(p, v);\n    }\n\n    const val2 = vtkPlane.intersectWithLine(pts2[id1], pts2[id2], p1, n1);\n    if (val2.intersection && val2.t > 0 - tolerance && val2.t < 1 + tolerance) {\n      if (val2.t < 1 + tolerance && val2.t > 1 - tolerance) {\n        ts2 = index2;\n      }\n      t2[index2++] = vtkMath.dot(val2.x, v) - vtkMath.dot(p, v);\n    }\n  }\n\n  // If the value of the index is greater than 2, the intersecting point\n  // actually is intersected by all three edges. In this case, set the two\n  // edges to the two edges where the intersecting point is not the end point\n  if (index1 > 2) {\n    index1--;\n    // swap\n    const t12 = t1[2];\n    t1[2] = t1[ts1];\n    t1[ts1] = t12;\n  }\n  if (index2 > 2) {\n    index2--;\n    const t22 = t2[2];\n    t2[2] = t2[ts2];\n    t2[ts2] = t22;\n  }\n  // Check if only one edge or all edges intersect the supporting\n  // planes intersection.\n  if (index1 !== 2 || index2 !== 2) {\n    // vtkDebugMacro(<<\"Only one edge intersecting!\");\n    return { intersect: false, coplanar, pt1, pt2, surfaceId };\n  }\n\n  // Check for NaNs\n  if (\n    Number.isNaN(t1[0]) ||\n    Number.isNaN(t1[1]) ||\n    Number.isNaN(t2[0]) ||\n    Number.isNaN(t2[1])\n  ) {\n    // vtkWarningMacro(<<\"NaNs!\");\n    return { intersect: false, coplanar, pt1, pt2, surfaceId };\n  }\n\n  if (t1[0] > t1[1]) {\n    // swap\n    const t11 = t1[1];\n    t1[1] = t1[0];\n    t1[0] = t11;\n  }\n  if (t2[0] > t2[1]) {\n    // swap\n    const t21 = t2[1];\n    t2[1] = t2[0];\n    t2[0] = t21;\n  }\n  // Handle the different interval configuration cases.\n  let tt1;\n  let tt2;\n  if (t1[1] < t2[0] || t2[1] < t1[0]) {\n    // vtkDebugMacro(<<\"No Overlap!\");\n    return { intersect: false, coplanar, pt1, pt2, surfaceId }; // No overlap\n  }\n  if (t1[0] < t2[0]) {\n    if (t1[1] < t2[1]) {\n      // First point on surface 2, second point on surface 1\n      surfaceId[0] = 2;\n      surfaceId[1] = 1;\n      tt1 = t2[0];\n      tt2 = t1[1];\n    } else {\n      // Both points belong to lines on surface 2\n      surfaceId[0] = 2;\n      surfaceId[1] = 2;\n      tt1 = t2[0];\n      tt2 = t2[1];\n    }\n  } // t1[0] >= t2[0]\n  else if (t1[1] < t2[1]) {\n    // Both points belong to lines on surface 1\n    surfaceId[0] = 1;\n    surfaceId[1] = 1;\n    tt1 = t1[0];\n    tt2 = t1[1];\n  } else {\n    // First point on surface 1, second point on surface 2\n    surfaceId[0] = 1;\n    surfaceId[1] = 2;\n    tt1 = t1[0];\n    tt2 = t2[1];\n  }\n\n  // Create actual intersection points.\n  vtkMath.multiplyAccumulate(p, v, tt1, pt1);\n  vtkMath.multiplyAccumulate(p, v, tt2, pt2);\n\n  return { intersect: true, coplanar, pt1, pt2, surfaceId };\n}\n\n// ----------------------------------------------------------------------------\n// Static API\n// ----------------------------------------------------------------------------\n\nexport const STATIC = {\n  computeNormalDirection,\n  computeNormal,\n  intersectWithTriangle,\n};\n\n// ----------------------------------------------------------------------------\n// vtkTriangle methods\n// ----------------------------------------------------------------------------\n\nfunction vtkTriangle(publicAPI, model) {\n  // Set our className\n  model.classHierarchy.push('vtkTriangle');\n\n  publicAPI.getCellDimension = () => 2;\n  publicAPI.intersectWithLine = (p1, p2, tol, x, pcoords) => {\n    const outObj = {\n      subId: 0,\n      t: Number.MAX_VALUE,\n      intersect: 0,\n      betweenPoints: false,\n    };\n    pcoords[2] = 0.0;\n    const closestPoint = [];\n    const tol2 = tol * tol;\n\n    // Get normal for triangle\n    const pt1 = [];\n    const pt2 = [];\n    const pt3 = [];\n    model.points.getPoint(0, pt1);\n    model.points.getPoint(1, pt2);\n    model.points.getPoint(2, pt3);\n    const n = [];\n    const weights = [];\n    computeNormal(pt1, pt2, pt3, n);\n    if (n[0] !== 0 || n[1] !== 0 || n[2] !== 0) {\n      // Intersect plane of triangle with line\n      const plane = vtkPlane.intersectWithLine(p1, p2, pt1, n);\n      outObj.betweenPoints = plane.betweenPoints;\n      outObj.t = plane.t;\n      x[0] = plane.x[0];\n      x[1] = plane.x[1];\n      x[2] = plane.x[2];\n      if (!plane.intersection) {\n        pcoords[0] = 0.0;\n        pcoords[1] = 0.0;\n        outObj.intersect = 0;\n        return outObj;\n      }\n\n      // Evaluate position\n      const inside = publicAPI.evaluatePosition(\n        x,\n        closestPoint,\n        pcoords,\n        weights\n      );\n      if (inside.evaluation >= 0) {\n        if (inside.dist2 <= tol2) {\n          outObj.intersect = 1;\n          return outObj;\n        }\n        outObj.intersect = inside.evaluation;\n        return outObj;\n      }\n    }\n\n    // Normals are null, so the triangle is degenerated and\n    // we still need to check intersection between line and\n    // the longest edge.\n    const dist2Pt1Pt2 = vtkMath.distance2BetweenPoints(pt1, pt2);\n    const dist2Pt2Pt3 = vtkMath.distance2BetweenPoints(pt2, pt3);\n    const dist2Pt3Pt1 = vtkMath.distance2BetweenPoints(pt3, pt1);\n    if (!model.line) {\n      model.line = vtkLine.newInstance();\n    }\n    if (dist2Pt1Pt2 > dist2Pt2Pt3 && dist2Pt1Pt2 > dist2Pt3Pt1) {\n      model.line.getPoints().setPoint(0, pt1);\n      model.line.getPoints().setPoint(1, pt2);\n    } else if (dist2Pt2Pt3 > dist2Pt3Pt1 && dist2Pt2Pt3 > dist2Pt1Pt2) {\n      model.line.getPoints().setPoint(0, pt2);\n      model.line.getPoints().setPoint(1, pt3);\n    } else {\n      model.line.getPoints().setPoint(0, pt3);\n      model.line.getPoints().setPoint(1, pt1);\n    }\n\n    const intersectLine = model.line.intersectWithLine(p1, p2, tol, x, pcoords);\n    outObj.betweenPoints = intersectLine.betweenPoints;\n    outObj.t = intersectLine.t;\n    if (intersectLine.intersect) {\n      const pt3Pt1 = [];\n      const pt3Pt2 = [];\n      const pt3X = [];\n      // Compute r and s manually, using dot and norm.\n      for (let i = 0; i < 3; i++) {\n        pt3Pt1[i] = pt1[i] - pt3[i];\n        pt3Pt2[i] = pt2[i] - pt3[i];\n        pt3X[i] = x[i] - pt3[i];\n      }\n      pcoords[0] = vtkMath.dot(pt3X, pt3Pt1) / dist2Pt3Pt1;\n      pcoords[1] = vtkMath.dot(pt3X, pt3Pt2) / dist2Pt2Pt3;\n      outObj.intersect = 1;\n      return outObj;\n    }\n\n    pcoords[0] = 0.0;\n    pcoords[1] = 0.0;\n    outObj.intersect = 0;\n    return outObj;\n  };\n\n  publicAPI.evaluatePosition = (x, closestPoint, pcoords, weights) => {\n    // will return obj\n    const outObj = { subId: 0, dist2: 0, evaluation: -1 };\n    let i;\n    let j;\n    const pt1 = [];\n    const pt2 = [];\n    const pt3 = [];\n    const n = [];\n    let fabsn;\n    const rhs = [];\n    const c1 = [];\n    const c2 = [];\n    let det = 0;\n    let idx = 0;\n    const indices = [];\n    let dist2Point;\n    let dist2Line1;\n    let dist2Line2;\n    let closest = [];\n    const closestPoint1 = [];\n    const closestPoint2 = [];\n    const cp = [];\n\n    outObj.subId = 0;\n    pcoords[2] = 0.0;\n\n    // Get normal for triangle, only the normal direction is needed, i.e. the\n    // normal need not be normalized (unit length)\n    //\n    model.points.getPoint(1, pt1);\n    model.points.getPoint(2, pt2);\n    model.points.getPoint(0, pt3);\n\n    computeNormalDirection(pt1, pt2, pt3, n);\n\n    // Project point to plane\n    vtkPlane.generalizedProjectPoint(x, pt1, n, cp);\n\n    // Construct matrices.  Since we have over determined system, need to find\n    // which 2 out of 3 equations to use to develop equations. (Any 2 should\n    // work since we've projected point to plane.)\n    let maxComponent = 0.0;\n    for (i = 0; i < 3; i++) {\n      // trying to avoid an expensive call to fabs()\n      if (n[i] < 0) {\n        fabsn = -n[i];\n      } else {\n        fabsn = n[i];\n      }\n      if (fabsn > maxComponent) {\n        maxComponent = fabsn;\n        idx = i;\n      }\n    }\n\n    for (j = 0, i = 0; i < 3; i++) {\n      if (i !== idx) {\n        indices[j++] = i;\n      }\n    }\n\n    for (i = 0; i < 2; i++) {\n      rhs[i] = cp[indices[i]] - pt3[indices[i]];\n      c1[i] = pt1[indices[i]] - pt3[indices[i]];\n      c2[i] = pt2[indices[i]] - pt3[indices[i]];\n    }\n    det = vtkMath.determinant2x2(c1, c2);\n    if (det === 0.0) {\n      pcoords[0] = 0.0;\n      pcoords[1] = 0.0;\n      outObj.evaluation = -1;\n      return outObj;\n    }\n\n    pcoords[0] = vtkMath.determinant2x2(rhs, c2) / det;\n    pcoords[1] = vtkMath.determinant2x2(c1, rhs) / det;\n\n    // Okay, now find closest point to element\n    weights[0] = 1 - (pcoords[0] + pcoords[1]);\n    weights[1] = pcoords[0];\n    weights[2] = pcoords[1];\n\n    if (\n      weights[0] >= 0.0 &&\n      weights[0] <= 1.0 &&\n      weights[1] >= 0.0 &&\n      weights[1] <= 1.0 &&\n      weights[2] >= 0.0 &&\n      weights[2] <= 1.0\n    ) {\n      // projection distance\n      if (closestPoint) {\n        outObj.dist2 = vtkMath.distance2BetweenPoints(cp, x);\n        closestPoint[0] = cp[0];\n        closestPoint[1] = cp[1];\n        closestPoint[2] = cp[2];\n      }\n      outObj.evaluation = 1;\n    } else {\n      let t;\n      if (closestPoint) {\n        if (weights[1] < 0.0 && weights[2] < 0.0) {\n          dist2Point = vtkMath.distance2BetweenPoints(x, pt3);\n          dist2Line1 = vtkLine.distanceToLine(x, pt1, pt3, t, closestPoint1);\n          dist2Line2 = vtkLine.distanceToLine(x, pt3, pt2, t, closestPoint2);\n          if (dist2Point < dist2Line1) {\n            outObj.dist2 = dist2Point;\n            closest = pt3;\n          } else {\n            outObj.dist2 = dist2Line1;\n            closest = closestPoint1;\n          }\n          if (dist2Line2 < outObj.dist2) {\n            outObj.dist2 = dist2Line2;\n            closest = closestPoint2;\n          }\n          for (i = 0; i < 3; i++) {\n            closestPoint[i] = closest[i];\n          }\n        } else if (weights[2] < 0.0 && weights[0] < 0.0) {\n          dist2Point = vtkMath.distance2BetweenPoints(x, pt1);\n          dist2Line1 = vtkLine.distanceToLine(x, pt1, pt3, t, closestPoint1);\n          dist2Line2 = vtkLine.distanceToLine(x, pt1, pt2, t, closestPoint2);\n          if (dist2Point < dist2Line1) {\n            outObj.dist2 = dist2Point;\n            closest = pt1;\n          } else {\n            outObj.dist2 = dist2Line1;\n            closest = closestPoint1;\n          }\n          if (dist2Line2 < outObj.dist2) {\n            outObj.dist2 = dist2Line2;\n            closest = closestPoint2;\n          }\n          for (i = 0; i < 3; i++) {\n            closestPoint[i] = closest[i];\n          }\n        } else if (weights[1] < 0.0 && weights[0] < 0.0) {\n          dist2Point = vtkMath.distance2BetweenPoints(x, pt2);\n          dist2Line1 = vtkLine.distanceToLine(x, pt2, pt3, t, closestPoint1);\n          dist2Line2 = vtkLine.distanceToLine(x, pt1, pt2, t, closestPoint2);\n          if (dist2Point < dist2Line1) {\n            outObj.dist2 = dist2Point;\n            closest = pt2;\n          } else {\n            outObj.dist2 = dist2Line1;\n            closest = closestPoint1;\n          }\n          if (dist2Line2 < outObj.dist2) {\n            outObj.dist2 = dist2Line2;\n            closest = closestPoint2;\n          }\n          for (i = 0; i < 3; i++) {\n            closestPoint[i] = closest[i];\n          }\n        } else if (weights[0] < 0.0) {\n          const lineDistance = vtkLine.distanceToLine(\n            x,\n            pt1,\n            pt2,\n            closestPoint\n          );\n          outObj.dist2 = lineDistance.distance;\n        } else if (weights[1] < 0.0) {\n          const lineDistance = vtkLine.distanceToLine(\n            x,\n            pt2,\n            pt3,\n            closestPoint\n          );\n          outObj.dist2 = lineDistance.distance;\n        } else if (weights[2] < 0.0) {\n          const lineDistance = vtkLine.distanceToLine(\n            x,\n            pt1,\n            pt3,\n            closestPoint\n          );\n          outObj.dist2 = lineDistance.distance;\n        }\n      }\n      outObj.evaluation = 0;\n    }\n\n    return outObj;\n  };\n\n  publicAPI.evaluateLocation = (pcoords, x, weights) => {\n    const p0 = [];\n    const p1 = [];\n    const p2 = [];\n    model.points.getPoint(0, p0);\n    model.points.getPoint(1, p1);\n    model.points.getPoint(2, p2);\n    const u3 = 1.0 - pcoords[0] - pcoords[1];\n\n    for (let i = 0; i < 3; i++) {\n      x[i] = p0[i] * u3 + p1[i] * pcoords[0] + p2[i] * pcoords[1];\n    }\n\n    weights[0] = u3;\n    weights[1] = pcoords[0];\n    weights[2] = pcoords[1];\n  };\n\n  publicAPI.getParametricDistance = (pcoords) => {\n    let pDist;\n    let pDistMax = 0.0;\n    const pc = [];\n    pc[0] = pcoords[0];\n    pc[1] = pcoords[1];\n    pc[2] = 1.0 - pcoords[0] - pcoords[1];\n\n    for (let i = 0; i < 3; i++) {\n      if (pc[i] < 0.0) {\n        pDist = -pc[i];\n      } else if (pc[i] > 1.0) {\n        pDist = pc[i] - 1.0;\n      } else {\n        // inside the cell in the parametric direction\n        pDist = 0.0;\n      }\n      if (pDist > pDistMax) {\n        pDistMax = pDist;\n      }\n    }\n    return pDistMax;\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Object factory\n// ----------------------------------------------------------------------------\n\nconst DEFAULT_VALUES = {};\n\n// ----------------------------------------------------------------------------\n\nexport function extend(publicAPI, model, initialValues = {}) {\n  Object.assign(model, DEFAULT_VALUES, initialValues);\n\n  vtkCell.extend(publicAPI, model, initialValues);\n\n  vtkTriangle(publicAPI, model);\n}\n\n// ----------------------------------------------------------------------------\n\nexport const newInstance = macro.newInstance(extend, 'vtkTriangle');\n\n// ----------------------------------------------------------------------------\n\nexport default { newInstance, extend, ...STATIC };\n","/**\n * macros.js is the old macro.js.\n * The name change is so we do not get eaten by babel-plugin-macros.\n */\nimport DeepEqual from 'fast-deep-equal';\nimport vtk, { vtkGlobal } from './vtk';\nimport ClassHierarchy from './Common/Core/ClassHierarchy';\n\nlet globalMTime = 0;\n\nexport const VOID = Symbol('void');\n\nfunction getCurrentGlobalMTime() {\n  return globalMTime;\n}\n\n// ----------------------------------------------------------------------------\n// Logging function calls\n// ----------------------------------------------------------------------------\n/* eslint-disable no-prototype-builtins                                      */\n\nconst fakeConsole = {};\n\nfunction noOp() {}\n\nconst consoleMethods = [\n  'log',\n  'debug',\n  'info',\n  'warn',\n  'error',\n  'time',\n  'timeEnd',\n  'group',\n  'groupEnd',\n];\nconsoleMethods.forEach((methodName) => {\n  fakeConsole[methodName] = noOp;\n});\n\nvtkGlobal.console = console.hasOwnProperty('log') ? console : fakeConsole;\n\nconst loggerFunctions = {\n  debug: noOp, // Don't print debug by default\n  error: vtkGlobal.console.error || noOp,\n  info: vtkGlobal.console.info || noOp,\n  log: vtkGlobal.console.log || noOp,\n  warn: vtkGlobal.console.warn || noOp,\n};\n\nexport function setLoggerFunction(name, fn) {\n  if (loggerFunctions[name]) {\n    loggerFunctions[name] = fn || noOp;\n  }\n}\n\nexport function vtkLogMacro(...args) {\n  loggerFunctions.log(...args);\n}\n\nexport function vtkInfoMacro(...args) {\n  loggerFunctions.info(...args);\n}\n\nexport function vtkDebugMacro(...args) {\n  loggerFunctions.debug(...args);\n}\n\nexport function vtkErrorMacro(...args) {\n  loggerFunctions.error(...args);\n}\n\nexport function vtkWarningMacro(...args) {\n  loggerFunctions.warn(...args);\n}\n\nconst ERROR_ONCE_MAP = {};\n\nexport function vtkOnceErrorMacro(str) {\n  if (!ERROR_ONCE_MAP[str]) {\n    loggerFunctions.error(str);\n    ERROR_ONCE_MAP[str] = true;\n  }\n}\n\n// ----------------------------------------------------------------------------\n// TypedArray\n// ----------------------------------------------------------------------------\n\nexport const TYPED_ARRAYS = Object.create(null);\nTYPED_ARRAYS.Float32Array = Float32Array;\nTYPED_ARRAYS.Float64Array = Float64Array;\nTYPED_ARRAYS.Uint8Array = Uint8Array;\nTYPED_ARRAYS.Int8Array = Int8Array;\nTYPED_ARRAYS.Uint16Array = Uint16Array;\nTYPED_ARRAYS.Int16Array = Int16Array;\nTYPED_ARRAYS.Uint32Array = Uint32Array;\nTYPED_ARRAYS.Int32Array = Int32Array;\nTYPED_ARRAYS.Uint8ClampedArray = Uint8ClampedArray;\n\ntry {\n  TYPED_ARRAYS.BigInt64Array = BigInt64Array;\n  TYPED_ARRAYS.BigUint64Array = BigUint64Array;\n} catch {\n  // ignore\n}\n\nexport function newTypedArray(type, ...args) {\n  return new (TYPED_ARRAYS[type] || Float64Array)(...args);\n}\n\nexport function newTypedArrayFrom(type, ...args) {\n  return (TYPED_ARRAYS[type] || Float64Array).from(...args);\n}\n\n// ----------------------------------------------------------------------------\n// capitilize provided string\n// ----------------------------------------------------------------------------\n\nexport function capitalize(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n}\n\nexport function _capitalize(str) {\n  return capitalize(str[0] === '_' ? str.slice(1) : str);\n}\n\nexport function uncapitalize(str) {\n  return str.charAt(0).toLowerCase() + str.slice(1);\n}\n\n// ----------------------------------------------------------------------------\n// Convert byte size into a well formatted string\n// ----------------------------------------------------------------------------\n\nexport function formatBytesToProperUnit(size, precision = 2, chunkSize = 1000) {\n  const units = ['TB', 'GB', 'MB', 'KB'];\n  let value = Number(size);\n  let currentUnit = 'B';\n  while (value > chunkSize) {\n    value /= chunkSize;\n    currentUnit = units.pop();\n  }\n  return `${value.toFixed(precision)} ${currentUnit}`;\n}\n\n// ----------------------------------------------------------------------------\n// Convert thousand number with proper separator\n// ----------------------------------------------------------------------------\n\nexport function formatNumbersWithThousandSeparator(n, separator = ' ') {\n  const sections = [];\n  let size = n;\n  while (size > 1000) {\n    sections.push(`000${size % 1000}`.slice(-3));\n    size = Math.floor(size / 1000);\n  }\n  if (size > 0) {\n    sections.push(size);\n  }\n  sections.reverse();\n  return sections.join(separator);\n}\n\n// ----------------------------------------------------------------------------\n// Array helper\n// ----------------------------------------------------------------------------\n\nfunction safeArrays(model) {\n  Object.keys(model).forEach((key) => {\n    if (Array.isArray(model[key])) {\n      model[key] = [].concat(model[key]);\n    }\n  });\n}\n\n// ----------------------------------------------------------------------------\n// shallow equals\n// ----------------------------------------------------------------------------\n\nfunction shallowEquals(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (Array.isArray(a) && Array.isArray(b)) {\n    if (a.length !== b.length) {\n      return false;\n    }\n    for (let i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  return false;\n}\n\n// ----------------------------------------------------------------------------\n\nfunction enumToString(e, value) {\n  return Object.keys(e).find((key) => e[key] === value);\n}\n\nfunction getStateArrayMapFunc(item) {\n  if (item && item.isA) {\n    return item.getState();\n  }\n  return item;\n}\n\n// ----------------------------------------------------------------------------\n// setImmediate\n// ----------------------------------------------------------------------------\n\nexport function setImmediateVTK(fn) {\n  setTimeout(fn, 0);\n}\n\n// ----------------------------------------------------------------------------\n// measurePromiseExecution\n//\n// Measures the time it takes for a promise to finish from\n//   the time this function is invoked.\n// The callback receives the time it took for the promise to resolve or reject.\n// ----------------------------------------------------------------------------\n\nexport function measurePromiseExecution(promise, callback) {\n  const start = performance.now();\n  promise.finally(() => {\n    const delta = performance.now() - start;\n    callback(delta);\n  });\n}\n\n// ----------------------------------------------------------------------------\n// vtkObject: modified(), onModified(callback), delete()\n// ----------------------------------------------------------------------------\n\nexport function obj(publicAPI = {}, model = {}) {\n  // Ensure each instance as a unique ref of array\n  safeArrays(model);\n\n  const callbacks = [];\n  if (!Number.isInteger(model.mtime)) {\n    model.mtime = ++globalMTime;\n  }\n\n  if (!('classHierarchy' in model)) {\n    model.classHierarchy = new ClassHierarchy('vtkObject');\n  } else if (!(model.classHierarchy instanceof ClassHierarchy)) {\n    const hierarchy = new ClassHierarchy();\n    for (let i = 0; i < model.classHierarchy.length; i++) {\n      hierarchy.push(model.classHierarchy[i]);\n    }\n    model.classHierarchy = hierarchy;\n  }\n\n  function off(index) {\n    callbacks[index] = null;\n  }\n\n  function on(index) {\n    function unsubscribe() {\n      off(index);\n    }\n\n    return Object.freeze({\n      unsubscribe,\n    });\n  }\n\n  publicAPI.isDeleted = () => !!model.deleted;\n\n  publicAPI.modified = (otherMTime) => {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n\n    if (otherMTime && otherMTime < publicAPI.getMTime()) {\n      return;\n    }\n\n    model.mtime = ++globalMTime;\n    callbacks.forEach((callback) => callback && callback(publicAPI));\n  };\n\n  publicAPI.onModified = (callback) => {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n\n    const index = callbacks.length;\n    callbacks.push(callback);\n    return on(index);\n  };\n\n  publicAPI.getMTime = () => model.mtime;\n\n  publicAPI.isA = (className) => {\n    let count = model.classHierarchy.length;\n    // we go backwards as that is more likely for\n    // early termination\n    while (count--) {\n      if (model.classHierarchy[count] === className) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  publicAPI.getClassName = (depth = 0) =>\n    model.classHierarchy[model.classHierarchy.length - 1 - depth];\n\n  publicAPI.set = (map = {}, noWarning = false, noFunction = false) => {\n    let ret = false;\n    Object.keys(map).forEach((name) => {\n      const fn = noFunction ? null : publicAPI[`set${capitalize(name)}`];\n      if (fn && Array.isArray(map[name]) && fn.length > 1) {\n        ret = fn(...map[name]) || ret;\n      } else if (fn) {\n        ret = fn(map[name]) || ret;\n      } else {\n        // Set data on model directly\n        if (['mtime'].indexOf(name) === -1 && !noWarning) {\n          vtkWarningMacro(\n            `Warning: Set value to model directly ${name}, ${map[name]}`\n          );\n        }\n        ret = model[name] !== map[name] || ret;\n        model[name] = map[name];\n      }\n    });\n    return ret;\n  };\n\n  publicAPI.get = (...list) => {\n    if (!list.length) {\n      return model;\n    }\n    const subset = {};\n    list.forEach((name) => {\n      subset[name] = model[name];\n    });\n    return subset;\n  };\n\n  publicAPI.getReferenceByName = (val) => model[val];\n\n  publicAPI.delete = () => {\n    Object.keys(model).forEach((field) => delete model[field]);\n    callbacks.forEach((el, index) => off(index));\n\n    // Flag the instance being deleted\n    model.deleted = true;\n  };\n\n  // Add serialization support\n  publicAPI.getState = () => {\n    if (model.deleted) {\n      return null;\n    }\n    const jsonArchive = { ...model, vtkClass: publicAPI.getClassName() };\n\n    // Convert every vtkObject to its serializable form\n    Object.keys(jsonArchive).forEach((keyName) => {\n      if (\n        jsonArchive[keyName] === null ||\n        jsonArchive[keyName] === undefined ||\n        keyName[0] === '_' // protected members start with _\n      ) {\n        delete jsonArchive[keyName];\n      } else if (jsonArchive[keyName].isA) {\n        jsonArchive[keyName] = jsonArchive[keyName].getState();\n      } else if (Array.isArray(jsonArchive[keyName])) {\n        jsonArchive[keyName] = jsonArchive[keyName].map(getStateArrayMapFunc);\n      }\n    });\n\n    // Sort resulting object by key name\n    const sortedObj = {};\n    Object.keys(jsonArchive)\n      .sort()\n      .forEach((name) => {\n        sortedObj[name] = jsonArchive[name];\n      });\n\n    // Remove mtime\n    if (sortedObj.mtime) {\n      delete sortedObj.mtime;\n    }\n\n    return sortedObj;\n  };\n\n  // Add shallowCopy(otherInstance) support\n  publicAPI.shallowCopy = (other, debug = false) => {\n    if (other.getClassName() !== publicAPI.getClassName()) {\n      throw new Error(\n        `Cannot ShallowCopy ${other.getClassName()} into ${publicAPI.getClassName()}`\n      );\n    }\n    const otherModel = other.get();\n\n    const keyList = Object.keys(model).sort();\n    const otherKeyList = Object.keys(otherModel).sort();\n\n    otherKeyList.forEach((key) => {\n      const keyIdx = keyList.indexOf(key);\n      if (keyIdx === -1) {\n        if (debug) {\n          vtkDebugMacro(`add ${key} in shallowCopy`);\n        }\n      } else {\n        keyList.splice(keyIdx, 1);\n      }\n      model[key] = otherModel[key];\n    });\n    if (keyList.length && debug) {\n      vtkDebugMacro(`Untouched keys: ${keyList.join(', ')}`);\n    }\n\n    publicAPI.modified();\n  };\n\n  // This function will get called when one invoke JSON.stringify(vtkObject)\n  // JSON.stringify will only stringify the return value of this function\n  publicAPI.toJSON = function vtkObjToJSON() {\n    return publicAPI.getState();\n  };\n\n  // Allow usage as decorator\n  return publicAPI;\n}\n\n// ----------------------------------------------------------------------------\n// getXXX: add getters\n// ----------------------------------------------------------------------------\n\nconst objectGetterMap = {\n  object(publicAPI, model, field) {\n    return function getter() {\n      return { ...model[field.name] };\n    };\n  },\n};\n\nexport function get(publicAPI, model, fieldNames) {\n  fieldNames.forEach((field) => {\n    if (typeof field === 'object') {\n      const getter = objectGetterMap[field.type];\n      if (getter) {\n        publicAPI[`get${_capitalize(field.name)}`] = getter(\n          publicAPI,\n          model,\n          field\n        );\n      } else {\n        publicAPI[`get${_capitalize(field.name)}`] = () => model[field.name];\n      }\n    } else {\n      publicAPI[`get${_capitalize(field)}`] = () => model[field];\n    }\n  });\n}\n\n// ----------------------------------------------------------------------------\n// setXXX: add setters\n// ----------------------------------------------------------------------------\n\nconst objectSetterMap = {\n  enum(publicAPI, model, field) {\n    return (value) => {\n      if (typeof value === 'string') {\n        if (field.enum[value] !== undefined) {\n          if (model[field.name] !== field.enum[value]) {\n            model[field.name] = field.enum[value];\n            publicAPI.modified();\n            return true;\n          }\n          return false;\n        }\n        vtkErrorMacro(`Set Enum with invalid argument ${field}, ${value}`);\n        throw new RangeError('Set Enum with invalid string argument');\n      }\n      if (typeof value === 'number') {\n        if (model[field.name] !== value) {\n          if (\n            Object.keys(field.enum)\n              .map((key) => field.enum[key])\n              .indexOf(value) !== -1\n          ) {\n            model[field.name] = value;\n            publicAPI.modified();\n            return true;\n          }\n          vtkErrorMacro(`Set Enum outside numeric range ${field}, ${value}`);\n          throw new RangeError('Set Enum outside numeric range');\n        }\n        return false;\n      }\n      vtkErrorMacro(\n        `Set Enum with invalid argument (String/Number) ${field}, ${value}`\n      );\n      throw new TypeError('Set Enum with invalid argument (String/Number)');\n    };\n  },\n  object(publicAPI, model, field) {\n    return (value) => {\n      if (!DeepEqual(model[field.name], value)) {\n        model[field.name] = value;\n        publicAPI.modified();\n        return true;\n      }\n      return false;\n    };\n  },\n};\n\nfunction findSetter(field) {\n  if (typeof field === 'object') {\n    const fn = objectSetterMap[field.type];\n    if (fn) {\n      return (publicAPI, model) => fn(publicAPI, model, field);\n    }\n\n    vtkErrorMacro(`No setter for field ${field}`);\n    throw new TypeError('No setter for field');\n  }\n  return function getSetter(publicAPI, model) {\n    return function setter(value) {\n      if (model.deleted) {\n        vtkErrorMacro('instance deleted - cannot call any method');\n        return false;\n      }\n\n      if (model[field] !== value) {\n        model[field] = value;\n        publicAPI.modified();\n        return true;\n      }\n      return false;\n    };\n  };\n}\n\nexport function set(publicAPI, model, fields) {\n  fields.forEach((field) => {\n    if (typeof field === 'object') {\n      publicAPI[`set${_capitalize(field.name)}`] = findSetter(field)(\n        publicAPI,\n        model\n      );\n    } else {\n      publicAPI[`set${_capitalize(field)}`] = findSetter(field)(\n        publicAPI,\n        model\n      );\n    }\n  });\n}\n\n// ----------------------------------------------------------------------------\n// set/get XXX: add both setters and getters\n// ----------------------------------------------------------------------------\n\nexport function setGet(publicAPI, model, fieldNames) {\n  get(publicAPI, model, fieldNames);\n  set(publicAPI, model, fieldNames);\n}\n\n// ----------------------------------------------------------------------------\n// getXXX: add getters for object of type array with copy to be safe\n// getXXXByReference: add getters for object of type array without copy\n// ----------------------------------------------------------------------------\n\nexport function getArray(publicAPI, model, fieldNames) {\n  fieldNames.forEach((field) => {\n    publicAPI[`get${_capitalize(field)}`] = () =>\n      model[field] ? Array.from(model[field]) : model[field];\n    publicAPI[`get${_capitalize(field)}ByReference`] = () => model[field];\n  });\n}\n\n// ----------------------------------------------------------------------------\n// setXXX: add setter for object of type array\n// if 'defaultVal' is supplied, shorter arrays will be padded to 'size' with 'defaultVal'\n// set...From: fast path to copy the content of an array to the current one without call to modified.\n// ----------------------------------------------------------------------------\n\nexport function setArray(\n  publicAPI,\n  model,\n  fieldNames,\n  size,\n  defaultVal = undefined\n) {\n  fieldNames.forEach((field) => {\n    if (model[field] && size && model[field].length !== size) {\n      throw new RangeError(\n        `Invalid initial number of values for array (${field})`\n      );\n    }\n\n    publicAPI[`set${_capitalize(field)}`] = (...args) => {\n      if (model.deleted) {\n        vtkErrorMacro('instance deleted - cannot call any method');\n        return false;\n      }\n\n      let array = args;\n      let changeDetected;\n      let needCopy = false;\n      // allow null or an array to be passed as a single arg.\n      if (array.length === 1 && (array[0] == null || array[0].length >= 0)) {\n        /* eslint-disable prefer-destructuring */\n        array = array[0];\n        /* eslint-enable prefer-destructuring */\n        needCopy = true;\n      }\n      if (array == null) {\n        changeDetected = model[field] !== array;\n      } else {\n        if (size && array.length !== size) {\n          if (array.length < size && defaultVal !== undefined) {\n            array = Array.from(array);\n            needCopy = false;\n            while (array.length < size) array.push(defaultVal);\n          } else {\n            throw new RangeError(\n              `Invalid number of values for array setter (${field})`\n            );\n          }\n        }\n        changeDetected =\n          model[field] == null || model[field].length !== array.length;\n        for (let i = 0; !changeDetected && i < array.length; ++i) {\n          changeDetected = model[field][i] !== array[i];\n        }\n        if (changeDetected && needCopy) {\n          array = Array.from(array);\n        }\n      }\n\n      if (changeDetected) {\n        model[field] = array;\n        publicAPI.modified();\n      }\n      return changeDetected;\n    };\n\n    publicAPI[`set${_capitalize(field)}From`] = (otherArray) => {\n      const target = model[field];\n      otherArray.forEach((v, i) => {\n        target[i] = v;\n      });\n    };\n  });\n}\n\n// ----------------------------------------------------------------------------\n// set/get XXX: add setter and getter for object of type array\n// ----------------------------------------------------------------------------\n\nexport function setGetArray(\n  publicAPI,\n  model,\n  fieldNames,\n  size,\n  defaultVal = undefined\n) {\n  getArray(publicAPI, model, fieldNames);\n  setArray(publicAPI, model, fieldNames, size, defaultVal);\n}\n\nexport function moveToProtected(publicAPI, model, fieldNames) {\n  for (let i = 0; i < fieldNames.length; i++) {\n    const fieldName = fieldNames[i];\n    if (model[fieldName] !== undefined) {\n      model[`_${fieldName}`] = model[fieldName];\n      delete model[fieldName];\n    }\n  }\n}\n// ----------------------------------------------------------------------------\n// vtkAlgorithm: setInputData(), setInputConnection(), getOutputData(), getOutputPort()\n// ----------------------------------------------------------------------------\n\nexport function algo(publicAPI, model, numberOfInputs, numberOfOutputs) {\n  if (model.inputData) {\n    model.inputData = model.inputData.map(vtk);\n  } else {\n    model.inputData = [];\n  }\n\n  if (model.inputConnection) {\n    model.inputConnection = model.inputConnection.map(vtk);\n  } else {\n    model.inputConnection = [];\n  }\n\n  if (model.output) {\n    model.output = model.output.map(vtk);\n  } else {\n    model.output = [];\n  }\n\n  if (model.inputArrayToProcess) {\n    model.inputArrayToProcess = model.inputArrayToProcess.map(vtk);\n  } else {\n    model.inputArrayToProcess = [];\n  }\n\n  // Cache the argument for later manipulation\n  model.numberOfInputs = numberOfInputs;\n\n  // Methods\n  function setInputData(dataset, port = 0) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    if (port >= model.numberOfInputs) {\n      vtkErrorMacro(\n        `algorithm ${publicAPI.getClassName()} only has ${\n          model.numberOfInputs\n        } input ports. To add more input ports, use addInputData()`\n      );\n      return;\n    }\n    if (model.inputData[port] !== dataset || model.inputConnection[port]) {\n      model.inputData[port] = dataset;\n      model.inputConnection[port] = null;\n      if (publicAPI.modified) {\n        publicAPI.modified();\n      }\n    }\n  }\n\n  function getInputData(port = 0) {\n    if (model.inputConnection[port]) {\n      model.inputData[port] = model.inputConnection[port]();\n    }\n    return model.inputData[port];\n  }\n\n  function setInputConnection(outputPort, port = 0) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    if (port >= model.numberOfInputs) {\n      let msg = `algorithm ${publicAPI.getClassName()} only has `;\n      msg += `${model.numberOfInputs}`;\n      msg += ' input ports. To add more input ports, use addInputConnection()';\n      vtkErrorMacro(msg);\n      return;\n    }\n    model.inputData[port] = null;\n    model.inputConnection[port] = outputPort;\n  }\n\n  function getInputConnection(port = 0) {\n    return model.inputConnection[port];\n  }\n\n  function getPortToFill() {\n    let portToFill = model.numberOfInputs;\n    while (\n      portToFill &&\n      !model.inputData[portToFill - 1] &&\n      !model.inputConnection[portToFill - 1]\n    ) {\n      portToFill--;\n    }\n    if (portToFill === model.numberOfInputs) {\n      model.numberOfInputs++;\n    }\n    return portToFill;\n  }\n\n  function addInputConnection(outputPort) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    setInputConnection(outputPort, getPortToFill());\n  }\n\n  function addInputData(dataset) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    setInputData(dataset, getPortToFill());\n  }\n\n  function getOutputData(port = 0) {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n    if (publicAPI.shouldUpdate()) {\n      publicAPI.update();\n    }\n    return model.output[port];\n  }\n\n  publicAPI.shouldUpdate = () => {\n    const localMTime = publicAPI.getMTime();\n    let minOutputMTime = Infinity;\n\n    let count = numberOfOutputs;\n    while (count--) {\n      if (!model.output[count] || model.output[count].isDeleted()) {\n        return true;\n      }\n      const mt = model.output[count].getMTime();\n      if (mt < localMTime) {\n        return true;\n      }\n      if (mt < minOutputMTime) {\n        minOutputMTime = mt;\n      }\n    }\n\n    count = model.numberOfInputs;\n    while (count--) {\n      if (\n        model.inputConnection[count]?.filter.shouldUpdate() ||\n        publicAPI.getInputData(count)?.getMTime() > minOutputMTime\n      ) {\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  function getOutputPort(port = 0) {\n    const outputPortAccess = () => getOutputData(port);\n    // Add reference to filter\n    outputPortAccess.filter = publicAPI;\n    return outputPortAccess;\n  }\n\n  // Handle input if needed\n  if (model.numberOfInputs) {\n    // Reserve inputs\n    let count = model.numberOfInputs;\n    while (count--) {\n      model.inputData.push(null);\n      model.inputConnection.push(null);\n    }\n\n    // Expose public methods\n    publicAPI.setInputData = setInputData;\n    publicAPI.setInputConnection = setInputConnection;\n    publicAPI.addInputData = addInputData;\n    publicAPI.addInputConnection = addInputConnection;\n    publicAPI.getInputData = getInputData;\n    publicAPI.getInputConnection = getInputConnection;\n  }\n\n  if (numberOfOutputs) {\n    publicAPI.getOutputData = getOutputData;\n    publicAPI.getOutputPort = getOutputPort;\n  }\n\n  publicAPI.update = () => {\n    const ins = [];\n    if (model.numberOfInputs) {\n      let count = 0;\n      while (count < model.numberOfInputs) {\n        ins[count] = publicAPI.getInputData(count);\n        count++;\n      }\n    }\n    if (publicAPI.shouldUpdate() && publicAPI.requestData) {\n      publicAPI.requestData(ins, model.output);\n    }\n  };\n\n  publicAPI.getNumberOfInputPorts = () => model.numberOfInputs;\n  publicAPI.getNumberOfOutputPorts = () =>\n    numberOfOutputs || model.output.length;\n\n  publicAPI.getInputArrayToProcess = (inputPort) => {\n    const arrayDesc = model.inputArrayToProcess[inputPort];\n    const ds = model.inputData[inputPort];\n    if (arrayDesc && ds) {\n      return ds[`get${arrayDesc.fieldAssociation}`]().getArray(\n        arrayDesc.arrayName\n      );\n    }\n    return null;\n  };\n  publicAPI.setInputArrayToProcess = (\n    inputPort,\n    arrayName,\n    fieldAssociation,\n    attributeType = 'Scalars'\n  ) => {\n    while (model.inputArrayToProcess.length < inputPort) {\n      model.inputArrayToProcess.push(null);\n    }\n    model.inputArrayToProcess[inputPort] = {\n      arrayName,\n      fieldAssociation,\n      attributeType,\n    };\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Event handling: onXXX(callback), invokeXXX(args...)\n// ----------------------------------------------------------------------------\n\nexport const EVENT_ABORT = Symbol('Event abort');\n\nexport function event(publicAPI, model, eventName) {\n  const callbacks = [];\n  const previousDelete = publicAPI.delete;\n  let curCallbackID = 1;\n\n  function off(callbackID) {\n    for (let i = 0; i < callbacks.length; ++i) {\n      const [cbID] = callbacks[i];\n      if (cbID === callbackID) {\n        callbacks.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  function on(callbackID) {\n    function unsubscribe() {\n      off(callbackID);\n    }\n\n    return Object.freeze({\n      unsubscribe,\n    });\n  }\n\n  function invoke() {\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return;\n    }\n    /* eslint-disable prefer-rest-params */\n    // Go through a copy of the callbacks array in case new callbacks\n    // get prepended within previous callbacks\n    const currentCallbacks = callbacks.slice();\n    for (let index = 0; index < currentCallbacks.length; ++index) {\n      const [, cb, priority] = currentCallbacks[index];\n\n      if (!cb) {\n        continue; // eslint-disable-line\n      }\n\n      if (priority < 0) {\n        setTimeout(() => cb.apply(publicAPI, arguments), 1 - priority);\n      } else {\n        // Abort only if the callback explicitly returns false\n        const continueNext = cb.apply(publicAPI, arguments);\n        if (continueNext === EVENT_ABORT) {\n          break;\n        }\n      }\n    }\n    /* eslint-enable prefer-rest-params */\n  }\n\n  publicAPI[`invoke${_capitalize(eventName)}`] = invoke;\n\n  publicAPI[`on${_capitalize(eventName)}`] = (callback, priority = 0.0) => {\n    if (!callback.apply) {\n      console.error(`Invalid callback for event ${eventName}`);\n      return null;\n    }\n\n    if (model.deleted) {\n      vtkErrorMacro('instance deleted - cannot call any method');\n      return null;\n    }\n\n    const callbackID = curCallbackID++;\n    callbacks.push([callbackID, callback, priority]);\n    callbacks.sort((cb1, cb2) => cb2[2] - cb1[2]);\n    return on(callbackID);\n  };\n\n  publicAPI.delete = () => {\n    previousDelete();\n    callbacks.forEach(([cbID]) => off(cbID));\n  };\n}\n\n// ----------------------------------------------------------------------------\n// newInstance\n// ----------------------------------------------------------------------------\n\nexport function newInstance(extend, className) {\n  const constructor = (initialValues = {}) => {\n    const model = {};\n    const publicAPI = {};\n    extend(publicAPI, model, initialValues);\n\n    return Object.freeze(publicAPI);\n  };\n\n  // Register constructor to factory\n  if (className) {\n    vtk.register(className, constructor);\n  }\n\n  return constructor;\n}\n\n// ----------------------------------------------------------------------------\n// Chain function calls\n// ----------------------------------------------------------------------------\n\nexport function chain(...fn) {\n  return (...args) => fn.filter((i) => !!i).map((i) => i(...args));\n}\n\n// ----------------------------------------------------------------------------\n// Some utility methods for vtk objects\n// ----------------------------------------------------------------------------\n\nexport function isVtkObject(instance) {\n  return instance && instance.isA && instance.isA('vtkObject');\n}\n\nexport function traverseInstanceTree(\n  instance,\n  extractFunction,\n  accumulator = [],\n  visitedInstances = []\n) {\n  if (isVtkObject(instance)) {\n    if (visitedInstances.indexOf(instance) >= 0) {\n      // avoid cycles\n      return accumulator;\n    }\n\n    visitedInstances.push(instance);\n    const result = extractFunction(instance);\n    if (result !== undefined) {\n      accumulator.push(result);\n    }\n\n    // Now go through this instance's model\n    const model = instance.get();\n    Object.keys(model).forEach((key) => {\n      const modelObj = model[key];\n      if (Array.isArray(modelObj)) {\n        modelObj.forEach((subObj) => {\n          traverseInstanceTree(\n            subObj,\n            extractFunction,\n            accumulator,\n            visitedInstances\n          );\n        });\n      } else {\n        traverseInstanceTree(\n          modelObj,\n          extractFunction,\n          accumulator,\n          visitedInstances\n        );\n      }\n    });\n  }\n\n  return accumulator;\n}\n\n// ----------------------------------------------------------------------------\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\n\nexport function debounce(func, wait, immediate) {\n  let timeout;\n  const debounced = (...args) => {\n    const context = this;\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n\n  debounced.cancel = () => clearTimeout(timeout);\n\n  return debounced;\n}\n\n// ----------------------------------------------------------------------------\n// Creates a throttled function that only invokes `func` at most once per\n// every `wait` milliseconds.\n\nexport function throttle(callback, delay) {\n  let isThrottled = false;\n  let argsToUse = null;\n\n  function next() {\n    isThrottled = false;\n    if (argsToUse !== null) {\n      wrapper(...argsToUse); // eslint-disable-line\n      argsToUse = null;\n    }\n  }\n\n  function wrapper(...args) {\n    if (isThrottled) {\n      argsToUse = args;\n      return;\n    }\n    isThrottled = true;\n    callback(...args);\n    setTimeout(next, delay);\n  }\n\n  return wrapper;\n}\n\n// ----------------------------------------------------------------------------\n// keystore(publicAPI, model, initialKeystore)\n//\n//    - initialKeystore: Initial keystore. This can be either a Map or an\n//      object.\n//\n// Generated API\n//  setKey(key, value) : mixed (returns value)\n//  getKey(key) : mixed\n//  getAllKeys() : [mixed]\n//  deleteKey(key) : Boolean\n// ----------------------------------------------------------------------------\n\nexport function keystore(publicAPI, model, initialKeystore = {}) {\n  model.keystore = Object.assign(model.keystore || {}, initialKeystore);\n\n  publicAPI.setKey = (key, value) => {\n    model.keystore[key] = value;\n  };\n  publicAPI.getKey = (key) => model.keystore[key];\n  publicAPI.getAllKeys = () => Object.keys(model.keystore);\n  publicAPI.deleteKey = (key) => delete model.keystore[key];\n  publicAPI.clearKeystore = () =>\n    publicAPI.getAllKeys().forEach((key) => delete model.keystore[key]);\n}\n\n// ----------------------------------------------------------------------------\n// proxy(publicAPI, model, sectionName, propertyUI)\n//\n//    - sectionName: Name of the section for UI\n//    - propertyUI: List of props with their UI description\n//\n// Generated API\n//  getProxyId() : String\n//  listProxyProperties() : [string]\n//  updateProxyProperty(name, prop)\n//  getProxySection() => List of properties for UI generation\n// ----------------------------------------------------------------------------\nlet nextProxyId = 1;\nconst ROOT_GROUP_NAME = '__root__';\n\nexport function proxy(publicAPI, model) {\n  // Proxies are keystores\n  keystore(publicAPI, model);\n\n  const parentDelete = publicAPI.delete;\n\n  // getProxyId\n  model.proxyId = `${nextProxyId++}`;\n\n  // ui handling\n  model.ui = JSON.parse(JSON.stringify(model.ui || [])); // deep copy\n  get(publicAPI, model, ['proxyId', 'proxyGroup', 'proxyName']);\n  setGet(publicAPI, model, ['proxyManager']);\n\n  // group properties\n  const propertyMap = {};\n  const groupChildrenNames = {};\n\n  function registerProperties(descriptionList, currentGroupName) {\n    if (!groupChildrenNames[currentGroupName]) {\n      groupChildrenNames[currentGroupName] = [];\n    }\n    const childrenNames = groupChildrenNames[currentGroupName];\n\n    for (let i = 0; i < descriptionList.length; i++) {\n      childrenNames.push(descriptionList[i].name);\n      propertyMap[descriptionList[i].name] = descriptionList[i];\n      if (descriptionList[i].children && descriptionList[i].children.length) {\n        registerProperties(\n          descriptionList[i].children,\n          descriptionList[i].name\n        );\n      }\n    }\n  }\n\n  registerProperties(model.ui, ROOT_GROUP_NAME);\n\n  publicAPI.updateUI = (ui) => {\n    model.ui = JSON.parse(JSON.stringify(ui || [])); // deep copy\n    Object.keys(propertyMap).forEach((k) => delete propertyMap[k]);\n    Object.keys(groupChildrenNames).forEach(\n      (k) => delete groupChildrenNames[k]\n    );\n    registerProperties(model.ui, ROOT_GROUP_NAME);\n    publicAPI.modified();\n  };\n\n  function listProxyProperties(gName = ROOT_GROUP_NAME) {\n    return groupChildrenNames[gName];\n  }\n\n  publicAPI.updateProxyProperty = (propertyName, propUI) => {\n    const prop = propertyMap[propertyName];\n    if (prop) {\n      Object.assign(prop, propUI);\n    } else {\n      propertyMap[propertyName] = { ...propUI };\n    }\n  };\n\n  publicAPI.activate = () => {\n    if (model.proxyManager) {\n      const setActiveMethod = `setActive${_capitalize(\n        publicAPI.getProxyGroup().slice(0, -1)\n      )}`;\n      if (model.proxyManager[setActiveMethod]) {\n        model.proxyManager[setActiveMethod](publicAPI);\n      }\n    }\n  };\n\n  // property link\n  model.propertyLinkSubscribers = {};\n  publicAPI.registerPropertyLinkForGC = (otherLink, type) => {\n    if (!(type in model.propertyLinkSubscribers)) {\n      model.propertyLinkSubscribers[type] = [];\n    }\n    model.propertyLinkSubscribers[type].push(otherLink);\n  };\n\n  publicAPI.gcPropertyLinks = (type) => {\n    const subscribers = model.propertyLinkSubscribers[type] || [];\n    while (subscribers.length) {\n      subscribers.pop().unbind(publicAPI);\n    }\n  };\n\n  model.propertyLinkMap = {};\n  publicAPI.getPropertyLink = (id, persistent = false) => {\n    if (model.propertyLinkMap[id]) {\n      return model.propertyLinkMap[id];\n    }\n    let value = null;\n    const links = [];\n    let count = 0;\n    let updateInProgress = false;\n\n    function update(source, force = false) {\n      if (updateInProgress) {\n        return null;\n      }\n\n      const needUpdate = [];\n      let sourceLink = null;\n      count = links.length;\n      while (count--) {\n        const link = links[count];\n        if (link.instance === source) {\n          sourceLink = link;\n        } else {\n          needUpdate.push(link);\n        }\n      }\n\n      if (!sourceLink) {\n        return null;\n      }\n\n      const newValue =\n        sourceLink.instance[`get${_capitalize(sourceLink.propertyName)}`]();\n      if (!shallowEquals(newValue, value) || force) {\n        value = newValue;\n        updateInProgress = true;\n        while (needUpdate.length) {\n          const linkToUpdate = needUpdate.pop();\n          linkToUpdate.instance.set({\n            [linkToUpdate.propertyName]: value,\n          });\n        }\n        updateInProgress = false;\n      }\n\n      if (model.propertyLinkMap[id].persistent) {\n        model.propertyLinkMap[id].value = newValue;\n      }\n\n      return newValue;\n    }\n\n    function unbind(instance, propertyName) {\n      const indexToDelete = [];\n      count = links.length;\n      while (count--) {\n        const link = links[count];\n        if (\n          link.instance === instance &&\n          (link.propertyName === propertyName || propertyName === undefined)\n        ) {\n          link.subscription.unsubscribe();\n          indexToDelete.push(count);\n        }\n      }\n      while (indexToDelete.length) {\n        links.splice(indexToDelete.pop(), 1);\n      }\n    }\n\n    function bind(instance, propertyName, updateMe = false) {\n      const subscription = instance.onModified(update);\n      const other = links[0];\n      links.push({\n        instance,\n        propertyName,\n        subscription,\n      });\n      if (updateMe) {\n        if (\n          model.propertyLinkMap[id].persistent &&\n          model.propertyLinkMap[id].value !== undefined\n        ) {\n          instance.set({\n            [propertyName]: model.propertyLinkMap[id].value,\n          });\n        } else if (other) {\n          update(other.instance, true);\n        }\n      }\n      return {\n        unsubscribe: () => unbind(instance, propertyName),\n      };\n    }\n\n    function unsubscribe() {\n      while (links.length) {\n        links.pop().subscription.unsubscribe();\n      }\n    }\n\n    const linkHandler = {\n      bind,\n      unbind,\n      unsubscribe,\n      persistent,\n    };\n    model.propertyLinkMap[id] = linkHandler;\n    return linkHandler;\n  };\n\n  // extract values\n  function getProperties(groupName = ROOT_GROUP_NAME) {\n    const values = [];\n    const id = model.proxyId;\n    const propertyNames = listProxyProperties(groupName) || [];\n    for (let i = 0; i < propertyNames.length; i++) {\n      const name = propertyNames[i];\n      const method = publicAPI[`get${_capitalize(name)}`];\n      const value = method ? method() : undefined;\n      const prop = {\n        id,\n        name,\n        value,\n      };\n      const children = getProperties(name);\n      if (children.length) {\n        prop.children = children;\n      }\n      values.push(prop);\n    }\n    return values;\n  }\n\n  publicAPI.listPropertyNames = () => getProperties().map((p) => p.name);\n\n  publicAPI.getPropertyByName = (name) =>\n    getProperties().find((p) => p.name === name);\n\n  publicAPI.getPropertyDomainByName = (name) =>\n    (propertyMap[name] || {}).domain;\n\n  // ui section\n  publicAPI.getProxySection = () => ({\n    id: model.proxyId,\n    name: model.proxyGroup,\n    ui: model.ui,\n    properties: getProperties(),\n  });\n\n  // free resources\n  publicAPI.delete = () => {\n    const list = Object.keys(model.propertyLinkMap);\n    let count = list.length;\n    while (count--) {\n      model.propertyLinkMap[list[count]].unsubscribe();\n    }\n    Object.keys(model.propertyLinkSubscribers).forEach(\n      publicAPI.gcPropertyLinks\n    );\n    parentDelete();\n  };\n\n  // @todo fix infinite recursion due to active source\n  publicAPI.getState = () => null;\n\n  function registerLinks() {\n    // Allow dynamic registration of links at the application level\n    if (model.links) {\n      for (let i = 0; i < model.links.length; i++) {\n        const { link, property, persistent, updateOnBind, type } =\n          model.links[i];\n        if (type === 'application') {\n          const sLink = model.proxyManager.getPropertyLink(link, persistent);\n          publicAPI.registerPropertyLinkForGC(sLink, 'application');\n          sLink.bind(publicAPI, property, updateOnBind);\n        }\n      }\n    }\n  }\n\n  setImmediateVTK(registerLinks);\n}\n\n// ----------------------------------------------------------------------------\n// proxyPropertyMapping(publicAPI, model, map)\n//\n//   map = {\n//      opacity: { modelKey: 'property', property: 'opacity' },\n//   }\n//\n// Generated API:\n//  Elevate set/get methods from internal object stored in the model to current one\n// ----------------------------------------------------------------------------\n\nexport function proxyPropertyMapping(publicAPI, model, map) {\n  const parentDelete = publicAPI.delete;\n  const subscriptions = [];\n\n  const propertyNames = Object.keys(map);\n  let count = propertyNames.length;\n  while (count--) {\n    const propertyName = propertyNames[count];\n    const { modelKey, property, modified = true } = map[propertyName];\n    const methodSrc = _capitalize(property);\n    const methodDst = _capitalize(propertyName);\n    publicAPI[`get${methodDst}`] = model[modelKey][`get${methodSrc}`];\n    publicAPI[`set${methodDst}`] = model[modelKey][`set${methodSrc}`];\n    if (modified) {\n      subscriptions.push(model[modelKey].onModified(publicAPI.modified));\n    }\n  }\n\n  publicAPI.delete = () => {\n    while (subscriptions.length) {\n      subscriptions.pop().unsubscribe();\n    }\n    parentDelete();\n  };\n}\n\n// ----------------------------------------------------------------------------\n// proxyPropertyState(publicAPI, model, state, defaults)\n//\n//   state = {\n//     representation: {\n//       'Surface with edges': { property: { edgeVisibility: true, representation: 2 } },\n//       Surface: { property: { edgeVisibility: false, representation: 2 } },\n//       Wireframe: { property: { edgeVisibility: false, representation: 1 } },\n//       Points: { property: { edgeVisibility: false, representation: 0 } },\n//     },\n//   }\n//\n//   defaults = {\n//      representation: 'Surface',\n//   }\n//\n// Generated API\n//   get / set Representation ( string ) => push state to various internal objects\n// ----------------------------------------------------------------------------\n\nexport function proxyPropertyState(\n  publicAPI,\n  model,\n  state = {},\n  defaults = {}\n) {\n  model.this = publicAPI;\n\n  function applyState(map) {\n    const modelKeys = Object.keys(map);\n    let count = modelKeys.length;\n    while (count--) {\n      const modelKey = modelKeys[count];\n      model[modelKey].set(map[modelKey]);\n    }\n  }\n\n  const modelKeys = Object.keys(defaults);\n  let count = modelKeys.length;\n  while (count--) {\n    // Add default\n    const key = modelKeys[count];\n    model[key] = defaults[key];\n\n    // Add set method\n    const mapping = state[key];\n    publicAPI[`set${_capitalize(key)}`] = (value) => {\n      if (value !== model[key]) {\n        model[key] = value;\n        const propValues = mapping[value];\n        applyState(propValues);\n        publicAPI.modified();\n      }\n    };\n  }\n\n  // Add getter\n  if (modelKeys.length) {\n    get(publicAPI, model, modelKeys);\n  }\n}\n\n// ----------------------------------------------------------------------------\n// From : https://github.com/facebookarchive/fixed-data-table/blob/master/src/vendor_upstream/dom/normalizeWheel.js\n//\n//\n// Copyright (c) 2015, Facebook, Inc.\n// All rights reserved.\n//\n// This source code is licensed under the BSD-style license found in the\n// LICENSE file in the root directory of this source tree. An additional grant\n// of patent rights can be found in the PATENTS file in the same directory.\n//\n//\n// Mouse wheel (and 2-finger trackpad) support on the web sucks.  It is\n// complicated, thus this doc is long and (hopefully) detailed enough to answer\n// your questions.\n//\n// If you need to react to the mouse wheel in a predictable way, this code is\n// like your bestest friend.// hugs//\n//\n// As of today, there are 4 DOM event types you can listen to:\n//\n//   'wheel'                -- Chrome(31+), FF(17+), IE(9+)\n//   'mousewheel'           -- Chrome, IE(6+), Opera, Safari\n//   'MozMousePixelScroll'  -- FF(3.5 only!) (2010-2013) -- don't bother!\n//   'DOMMouseScroll'       -- FF(0.9.7+) since 2003\n//\n// So what to do?  The is the best:\n//\n//   normalizeWheel.getEventType();\n//\n// In your event callback, use this code to get sane interpretation of the\n// deltas.  This code will return an object with properties:\n//\n//   spinX   -- normalized spin speed (use for zoom) - x plane\n//   spinY   -- \" - y plane\n//   pixelX  -- normalized distance (to pixels) - x plane\n//   pixelY  -- \" - y plane\n//\n// Wheel values are provided by the browser assuming you are using the wheel to\n// scroll a web page by a number of lines or pixels (or pages).  Values can vary\n// significantly on different platforms and browsers, forgetting that you can\n// scroll at different speeds.  Some devices (like trackpads) emit more events\n// at smaller increments with fine granularity, and some emit massive jumps with\n// linear speed or acceleration.\n//\n// This code does its best to normalize the deltas for you:\n//\n//   - spin is trying to normalize how far the wheel was spun (or trackpad\n//     dragged).  This is super useful for zoom support where you want to\n//     throw away the chunky scroll steps on the PC and make those equal to\n//     the slow and smooth tiny steps on the Mac. Key data: This code tries to\n//     resolve a single slow step on a wheel to 1.\n//\n//   - pixel is normalizing the desired scroll delta in pixel units.  You'll\n//     get the crazy differences between browsers, but at least it'll be in\n//     pixels!\n//\n//   - positive value indicates scrolling DOWN/RIGHT, negative UP/LEFT.  This\n//     should translate to positive value zooming IN, negative zooming OUT.\n//     This matches the newer 'wheel' event.\n//\n// Why are there spinX, spinY (or pixels)?\n//\n//   - spinX is a 2-finger side drag on the trackpad, and a shift + wheel turn\n//     with a mouse.  It results in side-scrolling in the browser by default.\n//\n//   - spinY is what you expect -- it's the classic axis of a mouse wheel.\n//\n//   - I dropped spinZ/pixelZ.  It is supported by the DOM 3 'wheel' event and\n//     probably is by browsers in conjunction with fancy 3D controllers .. but\n//     you know.\n//\n// Implementation info:\n//\n// Examples of 'wheel' event if you scroll slowly (down) by one step with an\n// average mouse:\n//\n//   OS X + Chrome  (mouse)     -    4   pixel delta  (wheelDelta -120)\n//   OS X + Safari  (mouse)     -  N/A   pixel delta  (wheelDelta  -12)\n//   OS X + Firefox (mouse)     -    0.1 line  delta  (wheelDelta  N/A)\n//   Win8 + Chrome  (mouse)     -  100   pixel delta  (wheelDelta -120)\n//   Win8 + Firefox (mouse)     -    3   line  delta  (wheelDelta -120)\n//\n// On the trackpad:\n//\n//   OS X + Chrome  (trackpad)  -    2   pixel delta  (wheelDelta   -6)\n//   OS X + Firefox (trackpad)  -    1   pixel delta  (wheelDelta  N/A)\n//\n// On other/older browsers.. it's more complicated as there can be multiple and\n// also missing delta values.\n//\n// The 'wheel' event is more standard:\n//\n// http://www.w3.org/TR/DOM-Level-3-Events/#events-wheelevents\n//\n// The basics is that it includes a unit, deltaMode (pixels, lines, pages), and\n// deltaX, deltaY and deltaZ.  Some browsers provide other values to maintain\n// backward compatibility with older events.  Those other values help us\n// better normalize spin speed.  Example of what the browsers provide:\n//\n//                          | event.wheelDelta | event.detail\n//        ------------------+------------------+--------------\n//          Safari v5/OS X  |       -120       |       0\n//          Safari v5/Win7  |       -120       |       0\n//         Chrome v17/OS X  |       -120       |       0\n//         Chrome v17/Win7  |       -120       |       0\n//                IE9/Win7  |       -120       |   undefined\n//         Firefox v4/OS X  |     undefined    |       1\n//         Firefox v4/Win7  |     undefined    |       3\n//\n// ----------------------------------------------------------------------------\n\n// Reasonable defaults\nconst PIXEL_STEP = 10;\nconst LINE_HEIGHT = 40;\nconst PAGE_HEIGHT = 800;\n\nexport function normalizeWheel(wheelEvent) {\n  let sX = 0; // spinX\n  let sY = 0; // spinY\n  let pX = 0; // pixelX\n  let pY = 0; // pixelY\n\n  // Legacy\n  if ('detail' in wheelEvent) {\n    sY = wheelEvent.detail;\n  }\n  if ('wheelDelta' in wheelEvent) {\n    sY = -wheelEvent.wheelDelta / 120;\n  }\n  if ('wheelDeltaY' in wheelEvent) {\n    sY = -wheelEvent.wheelDeltaY / 120;\n  }\n  if ('wheelDeltaX' in wheelEvent) {\n    sX = -wheelEvent.wheelDeltaX / 120;\n  }\n\n  // side scrolling on FF with DOMMouseScroll\n  if ('axis' in wheelEvent && wheelEvent.axis === wheelEvent.HORIZONTAL_AXIS) {\n    sX = sY;\n    sY = 0;\n  }\n\n  pX = sX * PIXEL_STEP;\n  pY = sY * PIXEL_STEP;\n\n  if ('deltaY' in wheelEvent) {\n    pY = wheelEvent.deltaY;\n  }\n  if ('deltaX' in wheelEvent) {\n    pX = wheelEvent.deltaX;\n  }\n\n  if ((pX || pY) && wheelEvent.deltaMode) {\n    if (wheelEvent.deltaMode === 1) {\n      // delta in LINE units\n      pX *= LINE_HEIGHT;\n      pY *= LINE_HEIGHT;\n    } else {\n      // delta in PAGE units\n      pX *= PAGE_HEIGHT;\n      pY *= PAGE_HEIGHT;\n    }\n  }\n\n  // Fall-back if spin cannot be determined\n  if (pX && !sX) {\n    sX = pX < 1 ? -1 : 1;\n  }\n  if (pY && !sY) {\n    sY = pY < 1 ? -1 : 1;\n  }\n\n  return {\n    spinX: sX,\n    spinY: sY,\n    pixelX: pX,\n    pixelY: pY,\n  };\n}\n\n// ----------------------------------------------------------------------------\n// Default export\n// ----------------------------------------------------------------------------\n\nexport default {\n  algo,\n  capitalize,\n  chain,\n  debounce,\n  enumToString,\n  event,\n  EVENT_ABORT,\n  formatBytesToProperUnit,\n  formatNumbersWithThousandSeparator,\n  get,\n  getArray,\n  getCurrentGlobalMTime,\n  getStateArrayMapFunc,\n  isVtkObject,\n  keystore,\n  measurePromiseExecution,\n  moveToProtected,\n  newInstance,\n  newTypedArray,\n  newTypedArrayFrom,\n  normalizeWheel,\n  obj,\n  proxy,\n  proxyPropertyMapping,\n  proxyPropertyState,\n  safeArrays,\n  set,\n  setArray,\n  setGet,\n  setGetArray,\n  setImmediate: setImmediateVTK,\n  setLoggerFunction,\n  throttle,\n  traverseInstanceTree,\n  TYPED_ARRAYS, // deprecated todo remove on breaking API revision\n  uncapitalize,\n  VOID,\n  vtkDebugMacro,\n  vtkErrorMacro,\n  vtkInfoMacro,\n  vtkLogMacro,\n  vtkOnceErrorMacro,\n  vtkWarningMacro,\n};\n","import globalThisShim from 'globalthis';\n\nexport const vtkGlobal = globalThisShim(); // returns native globalThis if compliant\n\nconst factoryMapping = {\n  vtkObject: () => null,\n};\n\nexport default function vtk(obj) {\n  if (obj === null || obj === undefined) {\n    return obj;\n  }\n  if (obj.isA) {\n    return obj;\n  }\n  if (!obj.vtkClass) {\n    if (vtkGlobal.console && vtkGlobal.console.error) {\n      vtkGlobal.console.error('Invalid VTK object');\n    }\n    return null;\n  }\n  const constructor = factoryMapping[obj.vtkClass];\n  if (!constructor) {\n    if (vtkGlobal.console && vtkGlobal.console.error) {\n      vtkGlobal.console.error(\n        `No vtk class found for Object of type ${obj.vtkClass}`\n      );\n    }\n    return null;\n  }\n\n  // Shallow copy object\n  const model = { ...obj };\n\n  // Convert into vtkObject any nested key\n  Object.keys(model).forEach((keyName) => {\n    if (\n      model[keyName] &&\n      typeof model[keyName] === 'object' &&\n      model[keyName].vtkClass\n    ) {\n      model[keyName] = vtk(model[keyName]);\n    }\n  });\n\n  // Return the root\n  const newInst = constructor(model);\n  if (newInst && newInst.modified) {\n    newInst.modified();\n  }\n  return newInst;\n}\n\nfunction register(vtkClassName, constructor) {\n  factoryMapping[vtkClassName] = constructor;\n}\n\n// Nest register method under the vtk function\nvtk.register = register;\n","'use strict';\n\nvar keys = require('object-keys');\nvar hasSymbols = typeof Symbol === 'function' && typeof Symbol('foo') === 'symbol';\n\nvar toStr = Object.prototype.toString;\nvar concat = Array.prototype.concat;\nvar origDefineProperty = Object.defineProperty;\n\nvar isFunction = function (fn) {\n\treturn typeof fn === 'function' && toStr.call(fn) === '[object Function]';\n};\n\nvar arePropertyDescriptorsSupported = function () {\n\tvar obj = {};\n\ttry {\n\t\torigDefineProperty(obj, 'x', { enumerable: false, value: obj });\n\t\t// eslint-disable-next-line no-unused-vars, no-restricted-syntax\n\t\tfor (var _ in obj) { // jscs:ignore disallowUnusedVariables\n\t\t\treturn false;\n\t\t}\n\t\treturn obj.x === obj;\n\t} catch (e) { /* this is IE 8. */\n\t\treturn false;\n\t}\n};\nvar supportsDescriptors = origDefineProperty && arePropertyDescriptorsSupported();\n\nvar defineProperty = function (object, name, value, predicate) {\n\tif (name in object && (!isFunction(predicate) || !predicate())) {\n\t\treturn;\n\t}\n\tif (supportsDescriptors) {\n\t\torigDefineProperty(object, name, {\n\t\t\tconfigurable: true,\n\t\t\tenumerable: false,\n\t\t\tvalue: value,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\tobject[name] = value;\n\t}\n};\n\nvar defineProperties = function (object, map) {\n\tvar predicates = arguments.length > 2 ? arguments[2] : {};\n\tvar props = keys(map);\n\tif (hasSymbols) {\n\t\tprops = concat.call(props, Object.getOwnPropertySymbols(map));\n\t}\n\tfor (var i = 0; i < props.length; i += 1) {\n\t\tdefineProperty(object, props[i], map[props[i]], predicates[props[i]]);\n\t}\n};\n\ndefineProperties.supportsDescriptors = !!supportsDescriptors;\n\nmodule.exports = defineProperties;\n","'use strict';\n\n// do not edit .js files directly - edit src/index.jst\n\n\n\nmodule.exports = function equal(a, b) {\n  if (a === b) return true;\n\n  if (a && b && typeof a == 'object' && typeof b == 'object') {\n    if (a.constructor !== b.constructor) return false;\n\n    var length, i, keys;\n    if (Array.isArray(a)) {\n      length = a.length;\n      if (length != b.length) return false;\n      for (i = length; i-- !== 0;)\n        if (!equal(a[i], b[i])) return false;\n      return true;\n    }\n\n\n\n    if (a.constructor === RegExp) return a.source === b.source && a.flags === b.flags;\n    if (a.valueOf !== Object.prototype.valueOf) return a.valueOf() === b.valueOf();\n    if (a.toString !== Object.prototype.toString) return a.toString() === b.toString();\n\n    keys = Object.keys(a);\n    length = keys.length;\n    if (length !== Object.keys(b).length) return false;\n\n    for (i = length; i-- !== 0;)\n      if (!Object.prototype.hasOwnProperty.call(b, keys[i])) return false;\n\n    for (i = length; i-- !== 0;) {\n      var key = keys[i];\n\n      if (!equal(a[key], b[key])) return false;\n    }\n\n    return true;\n  }\n\n  // true if both NaN, false otherwise\n  return a!==a && b!==b;\n};\n","/**\n * Common utilities\n * @module glMatrix\n */\n// Configuration Constants\nexport var EPSILON = 0.000001;\nexport var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport var RANDOM = Math.random;\n/**\n * Sets the type of array used when creating new vectors and matrices\n *\n * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array\n */\n\nexport function setMatrixArrayType(type) {\n  ARRAY_TYPE = type;\n}\nvar degree = Math.PI / 180;\n/**\n * Convert Degree To Radian\n *\n * @param {Number} a Angle in Degrees\n */\n\nexport function toRadian(a) {\n  return a * degree;\n}\n/**\n * Tests whether or not the arguments have approximately the same value, within an absolute\n * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less\n * than or equal to 1.0, and a relative tolerance is used for larger values)\n *\n * @param {Number} a The first number to test.\n * @param {Number} b The second number to test.\n * @returns {Boolean} True if the numbers are approximately equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n}\nif (!Math.hypot) Math.hypot = function () {\n  var y = 0,\n      i = arguments.length;\n\n  while (i--) {\n    y += arguments[i] * arguments[i];\n  }\n\n  return Math.sqrt(y);\n};","import * as glMatrix from \"./common.js\";\n/**\n * 3x3 Matrix\n * @module mat3\n */\n\n/**\n * Creates a new identity mat3\n *\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(9);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[5] = 0;\n    out[6] = 0;\n    out[7] = 0;\n  }\n\n  out[0] = 1;\n  out[4] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the upper-left 3x3 values into the given mat3.\n *\n * @param {mat3} out the receiving 3x3 matrix\n * @param {ReadonlyMat4} a   the source 4x4 matrix\n * @returns {mat3} out\n */\n\nexport function fromMat4(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[4];\n  out[4] = a[5];\n  out[5] = a[6];\n  out[6] = a[8];\n  out[7] = a[9];\n  out[8] = a[10];\n  return out;\n}\n/**\n * Creates a new mat3 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat3} a matrix to clone\n * @returns {mat3} a new 3x3 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Copy the values from one mat3 to another\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Create a new mat3 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} A new mat3\n */\n\nexport function fromValues(m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  var out = new glMatrix.ARRAY_TYPE(9);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set the components of a mat3 to the given values\n *\n * @param {mat3} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m10 Component in column 1, row 0 position (index 3)\n * @param {Number} m11 Component in column 1, row 1 position (index 4)\n * @param {Number} m12 Component in column 1, row 2 position (index 5)\n * @param {Number} m20 Component in column 2, row 0 position (index 6)\n * @param {Number} m21 Component in column 2, row 1 position (index 7)\n * @param {Number} m22 Component in column 2, row 2 position (index 8)\n * @returns {mat3} out\n */\n\nexport function set(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m10;\n  out[4] = m11;\n  out[5] = m12;\n  out[6] = m20;\n  out[7] = m21;\n  out[8] = m22;\n  return out;\n}\n/**\n * Set a mat3 to the identity matrix\n *\n * @param {mat3} out the receiving matrix\n * @returns {mat3} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a12 = a[5];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a01;\n    out[5] = a[7];\n    out[6] = a02;\n    out[7] = a12;\n  } else {\n    out[0] = a[0];\n    out[1] = a[3];\n    out[2] = a[6];\n    out[3] = a[1];\n    out[4] = a[4];\n    out[5] = a[7];\n    out[6] = a[2];\n    out[7] = a[5];\n    out[8] = a[8];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b01 = a22 * a11 - a12 * a21;\n  var b11 = -a22 * a10 + a12 * a20;\n  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant\n\n  var det = a00 * b01 + a01 * b11 + a02 * b21;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = b01 * det;\n  out[1] = (-a22 * a01 + a02 * a21) * det;\n  out[2] = (a12 * a01 - a02 * a11) * det;\n  out[3] = b11 * det;\n  out[4] = (a22 * a00 - a02 * a20) * det;\n  out[5] = (-a12 * a00 + a02 * a10) * det;\n  out[6] = b21 * det;\n  out[7] = (-a21 * a00 + a01 * a20) * det;\n  out[8] = (a11 * a00 - a01 * a10) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the source matrix\n * @returns {mat3} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  out[0] = a11 * a22 - a12 * a21;\n  out[1] = a02 * a21 - a01 * a22;\n  out[2] = a01 * a12 - a02 * a11;\n  out[3] = a12 * a20 - a10 * a22;\n  out[4] = a00 * a22 - a02 * a20;\n  out[5] = a02 * a10 - a00 * a12;\n  out[6] = a10 * a21 - a11 * a20;\n  out[7] = a01 * a20 - a00 * a21;\n  out[8] = a00 * a11 - a01 * a10;\n  return out;\n}\n/**\n * Calculates the determinant of a mat3\n *\n * @param {ReadonlyMat3} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\n}\n/**\n * Multiplies two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2];\n  var a10 = a[3],\n      a11 = a[4],\n      a12 = a[5];\n  var a20 = a[6],\n      a21 = a[7],\n      a22 = a[8];\n  var b00 = b[0],\n      b01 = b[1],\n      b02 = b[2];\n  var b10 = b[3],\n      b11 = b[4],\n      b12 = b[5];\n  var b20 = b[6],\n      b21 = b[7],\n      b22 = b[8];\n  out[0] = b00 * a00 + b01 * a10 + b02 * a20;\n  out[1] = b00 * a01 + b01 * a11 + b02 * a21;\n  out[2] = b00 * a02 + b01 * a12 + b02 * a22;\n  out[3] = b10 * a00 + b11 * a10 + b12 * a20;\n  out[4] = b10 * a01 + b11 * a11 + b12 * a21;\n  out[5] = b10 * a02 + b11 * a12 + b12 * a22;\n  out[6] = b20 * a00 + b21 * a10 + b22 * a20;\n  out[7] = b20 * a01 + b21 * a11 + b22 * a21;\n  out[8] = b20 * a02 + b21 * a12 + b22 * a22;\n  return out;\n}\n/**\n * Translate a mat3 by the given vector\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to translate\n * @param {ReadonlyVec2} v vector to translate by\n * @returns {mat3} out\n */\n\nexport function translate(out, a, v) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      x = v[0],\n      y = v[1];\n  out[0] = a00;\n  out[1] = a01;\n  out[2] = a02;\n  out[3] = a10;\n  out[4] = a11;\n  out[5] = a12;\n  out[6] = x * a00 + y * a10 + a20;\n  out[7] = x * a01 + y * a11 + a21;\n  out[8] = x * a02 + y * a12 + a22;\n  return out;\n}\n/**\n * Rotates a mat3 by the given angle\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function rotate(out, a, rad) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a10 = a[3],\n      a11 = a[4],\n      a12 = a[5],\n      a20 = a[6],\n      a21 = a[7],\n      a22 = a[8],\n      s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c * a00 + s * a10;\n  out[1] = c * a01 + s * a11;\n  out[2] = c * a02 + s * a12;\n  out[3] = c * a10 - s * a00;\n  out[4] = c * a11 - s * a01;\n  out[5] = c * a12 - s * a02;\n  out[6] = a20;\n  out[7] = a21;\n  out[8] = a22;\n  return out;\n}\n/**\n * Scales the mat3 by the dimensions in the given vec2\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to rotate\n * @param {ReadonlyVec2} v the vec2 to scale the matrix by\n * @returns {mat3} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1];\n  out[0] = x * a[0];\n  out[1] = x * a[1];\n  out[2] = x * a[2];\n  out[3] = y * a[3];\n  out[4] = y * a[4];\n  out[5] = y * a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.translate(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Translation vector\n * @returns {mat3} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 1;\n  out[5] = 0;\n  out[6] = v[0];\n  out[7] = v[1];\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.rotate(dest, dest, rad);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat3} out\n */\n\nexport function fromRotation(out, rad) {\n  var s = Math.sin(rad),\n      c = Math.cos(rad);\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = -s;\n  out[4] = c;\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat3.identity(dest);\n *     mat3.scale(dest, dest, vec);\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyVec2} v Scaling vector\n * @returns {mat3} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = v[1];\n  out[5] = 0;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 1;\n  return out;\n}\n/**\n * Copies the values from a mat2d into a mat3\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat2d} a the matrix to copy\n * @returns {mat3} out\n **/\n\nexport function fromMat2d(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = 0;\n  out[3] = a[2];\n  out[4] = a[3];\n  out[5] = 0;\n  out[6] = a[4];\n  out[7] = a[5];\n  out[8] = 1;\n  return out;\n}\n/**\n * Calculates a 3x3 matrix from the given quaternion\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat3} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[3] = yx - wz;\n  out[6] = zx + wy;\n  out[1] = yx + wz;\n  out[4] = 1 - xx - zz;\n  out[7] = zy - wx;\n  out[2] = zx - wy;\n  out[5] = zy + wx;\n  out[8] = 1 - xx - yy;\n  return out;\n}\n/**\n * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\n *\n * @param {mat3} out mat3 receiving operation result\n * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from\n *\n * @returns {mat3} out\n */\n\nexport function normalFromMat4(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  return out;\n}\n/**\n * Generates a 2D projection matrix with the given bounds\n *\n * @param {mat3} out mat3 frustum matrix will be written into\n * @param {number} width Width of your gl context\n * @param {number} height Height of gl context\n * @returns {mat3} out\n */\n\nexport function projection(out, width, height) {\n  out[0] = 2 / width;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -2 / height;\n  out[5] = 0;\n  out[6] = -1;\n  out[7] = 1;\n  out[8] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat3\n *\n * @param {ReadonlyMat3} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat3\n *\n * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);\n}\n/**\n * Adds two mat3's\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @returns {mat3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat3} out the receiving matrix\n * @param {ReadonlyMat3} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat3} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  return out;\n}\n/**\n * Adds two mat3's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat3} out the receiving vector\n * @param {ReadonlyMat3} a the first operand\n * @param {ReadonlyMat3} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat3} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat3} a The first matrix.\n * @param {ReadonlyMat3} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3],\n      a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7],\n      a8 = a[8];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3],\n      b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7],\n      b8 = b[8];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));\n}\n/**\n * Alias for {@link mat3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat3.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.\n * @module mat4\n */\n\n/**\n * Creates a new identity mat4\n *\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(16);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[1] = 0;\n    out[2] = 0;\n    out[3] = 0;\n    out[4] = 0;\n    out[6] = 0;\n    out[7] = 0;\n    out[8] = 0;\n    out[9] = 0;\n    out[11] = 0;\n    out[12] = 0;\n    out[13] = 0;\n    out[14] = 0;\n  }\n\n  out[0] = 1;\n  out[5] = 1;\n  out[10] = 1;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 initialized with values from an existing matrix\n *\n * @param {ReadonlyMat4} a matrix to clone\n * @returns {mat4} a new 4x4 matrix\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Copy the values from one mat4 to another\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  out[3] = a[3];\n  out[4] = a[4];\n  out[5] = a[5];\n  out[6] = a[6];\n  out[7] = a[7];\n  out[8] = a[8];\n  out[9] = a[9];\n  out[10] = a[10];\n  out[11] = a[11];\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Create a new mat4 with the given values\n *\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} A new mat4\n */\n\nexport function fromValues(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  var out = new glMatrix.ARRAY_TYPE(16);\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set the components of a mat4 to the given values\n *\n * @param {mat4} out the receiving matrix\n * @param {Number} m00 Component in column 0, row 0 position (index 0)\n * @param {Number} m01 Component in column 0, row 1 position (index 1)\n * @param {Number} m02 Component in column 0, row 2 position (index 2)\n * @param {Number} m03 Component in column 0, row 3 position (index 3)\n * @param {Number} m10 Component in column 1, row 0 position (index 4)\n * @param {Number} m11 Component in column 1, row 1 position (index 5)\n * @param {Number} m12 Component in column 1, row 2 position (index 6)\n * @param {Number} m13 Component in column 1, row 3 position (index 7)\n * @param {Number} m20 Component in column 2, row 0 position (index 8)\n * @param {Number} m21 Component in column 2, row 1 position (index 9)\n * @param {Number} m22 Component in column 2, row 2 position (index 10)\n * @param {Number} m23 Component in column 2, row 3 position (index 11)\n * @param {Number} m30 Component in column 3, row 0 position (index 12)\n * @param {Number} m31 Component in column 3, row 1 position (index 13)\n * @param {Number} m32 Component in column 3, row 2 position (index 14)\n * @param {Number} m33 Component in column 3, row 3 position (index 15)\n * @returns {mat4} out\n */\n\nexport function set(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {\n  out[0] = m00;\n  out[1] = m01;\n  out[2] = m02;\n  out[3] = m03;\n  out[4] = m10;\n  out[5] = m11;\n  out[6] = m12;\n  out[7] = m13;\n  out[8] = m20;\n  out[9] = m21;\n  out[10] = m22;\n  out[11] = m23;\n  out[12] = m30;\n  out[13] = m31;\n  out[14] = m32;\n  out[15] = m33;\n  return out;\n}\n/**\n * Set a mat4 to the identity matrix\n *\n * @param {mat4} out the receiving matrix\n * @returns {mat4} out\n */\n\nexport function identity(out) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Transpose the values of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function transpose(out, a) {\n  // If we are transposing ourselves we can skip a few steps but have to cache some values\n  if (out === a) {\n    var a01 = a[1],\n        a02 = a[2],\n        a03 = a[3];\n    var a12 = a[6],\n        a13 = a[7];\n    var a23 = a[11];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a01;\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a02;\n    out[9] = a12;\n    out[11] = a[14];\n    out[12] = a03;\n    out[13] = a13;\n    out[14] = a23;\n  } else {\n    out[0] = a[0];\n    out[1] = a[4];\n    out[2] = a[8];\n    out[3] = a[12];\n    out[4] = a[1];\n    out[5] = a[5];\n    out[6] = a[9];\n    out[7] = a[13];\n    out[8] = a[2];\n    out[9] = a[6];\n    out[10] = a[10];\n    out[11] = a[14];\n    out[12] = a[3];\n    out[13] = a[7];\n    out[14] = a[11];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Inverts a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function invert(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n\n  if (!det) {\n    return null;\n  }\n\n  det = 1.0 / det;\n  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\n  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\n  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\n  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\n  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\n  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\n  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\n  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\n  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\n  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\n  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\n  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\n  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\n  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\n  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\n  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\n  return out;\n}\n/**\n * Calculates the adjugate of a mat4\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the source matrix\n * @returns {mat4} out\n */\n\nexport function adjoint(out, a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\n  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\n  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\n  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\n  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\n  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\n  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\n  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\n  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\n  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\n  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\n  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\n  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\n  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\n  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\n  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\n  return out;\n}\n/**\n * Calculates the determinant of a mat4\n *\n * @param {ReadonlyMat4} a the source matrix\n * @returns {Number} determinant of a\n */\n\nexport function determinant(a) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15];\n  var b00 = a00 * a11 - a01 * a10;\n  var b01 = a00 * a12 - a02 * a10;\n  var b02 = a00 * a13 - a03 * a10;\n  var b03 = a01 * a12 - a02 * a11;\n  var b04 = a01 * a13 - a03 * a11;\n  var b05 = a02 * a13 - a03 * a12;\n  var b06 = a20 * a31 - a21 * a30;\n  var b07 = a20 * a32 - a22 * a30;\n  var b08 = a20 * a33 - a23 * a30;\n  var b09 = a21 * a32 - a22 * a31;\n  var b10 = a21 * a33 - a23 * a31;\n  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant\n\n  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\n}\n/**\n * Multiplies two mat4s\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function multiply(out, a, b) {\n  var a00 = a[0],\n      a01 = a[1],\n      a02 = a[2],\n      a03 = a[3];\n  var a10 = a[4],\n      a11 = a[5],\n      a12 = a[6],\n      a13 = a[7];\n  var a20 = a[8],\n      a21 = a[9],\n      a22 = a[10],\n      a23 = a[11];\n  var a30 = a[12],\n      a31 = a[13],\n      a32 = a[14],\n      a33 = a[15]; // Cache only the current line of the second matrix\n\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[4];\n  b1 = b[5];\n  b2 = b[6];\n  b3 = b[7];\n  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[8];\n  b1 = b[9];\n  b2 = b[10];\n  b3 = b[11];\n  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  b0 = b[12];\n  b1 = b[13];\n  b2 = b[14];\n  b3 = b[15];\n  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\n  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\n  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\n  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\n  return out;\n}\n/**\n * Translate a mat4 by the given vector\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to translate\n * @param {ReadonlyVec3} v vector to translate by\n * @returns {mat4} out\n */\n\nexport function translate(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n\n  if (a === out) {\n    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\n    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\n    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\n    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\n  } else {\n    a00 = a[0];\n    a01 = a[1];\n    a02 = a[2];\n    a03 = a[3];\n    a10 = a[4];\n    a11 = a[5];\n    a12 = a[6];\n    a13 = a[7];\n    a20 = a[8];\n    a21 = a[9];\n    a22 = a[10];\n    a23 = a[11];\n    out[0] = a00;\n    out[1] = a01;\n    out[2] = a02;\n    out[3] = a03;\n    out[4] = a10;\n    out[5] = a11;\n    out[6] = a12;\n    out[7] = a13;\n    out[8] = a20;\n    out[9] = a21;\n    out[10] = a22;\n    out[11] = a23;\n    out[12] = a00 * x + a10 * y + a20 * z + a[12];\n    out[13] = a01 * x + a11 * y + a21 * z + a[13];\n    out[14] = a02 * x + a12 * y + a22 * z + a[14];\n    out[15] = a03 * x + a13 * y + a23 * z + a[15];\n  }\n\n  return out;\n}\n/**\n * Scales the mat4 by the dimensions in the given vec3 not using vectorization\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {ReadonlyVec3} v the vec3 to scale the matrix by\n * @returns {mat4} out\n **/\n\nexport function scale(out, a, v) {\n  var x = v[0],\n      y = v[1],\n      z = v[2];\n  out[0] = a[0] * x;\n  out[1] = a[1] * x;\n  out[2] = a[2] * x;\n  out[3] = a[3] * x;\n  out[4] = a[4] * y;\n  out[5] = a[5] * y;\n  out[6] = a[6] * y;\n  out[7] = a[7] * y;\n  out[8] = a[8] * z;\n  out[9] = a[9] * z;\n  out[10] = a[10] * z;\n  out[11] = a[11] * z;\n  out[12] = a[12];\n  out[13] = a[13];\n  out[14] = a[14];\n  out[15] = a[15];\n  return out;\n}\n/**\n * Rotates a mat4 by the given angle around the given axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function rotate(out, a, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n  var a00, a01, a02, a03;\n  var a10, a11, a12, a13;\n  var a20, a21, a22, a23;\n  var b00, b01, b02;\n  var b10, b11, b12;\n  var b20, b21, b22;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c;\n  a00 = a[0];\n  a01 = a[1];\n  a02 = a[2];\n  a03 = a[3];\n  a10 = a[4];\n  a11 = a[5];\n  a12 = a[6];\n  a13 = a[7];\n  a20 = a[8];\n  a21 = a[9];\n  a22 = a[10];\n  a23 = a[11]; // Construct the elements of the rotation matrix\n\n  b00 = x * x * t + c;\n  b01 = y * x * t + z * s;\n  b02 = z * x * t - y * s;\n  b10 = x * y * t - z * s;\n  b11 = y * y * t + c;\n  b12 = z * y * t + x * s;\n  b20 = x * z * t + y * s;\n  b21 = y * z * t - x * s;\n  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication\n\n  out[0] = a00 * b00 + a10 * b01 + a20 * b02;\n  out[1] = a01 * b00 + a11 * b01 + a21 * b02;\n  out[2] = a02 * b00 + a12 * b01 + a22 * b02;\n  out[3] = a03 * b00 + a13 * b01 + a23 * b02;\n  out[4] = a00 * b10 + a10 * b11 + a20 * b12;\n  out[5] = a01 * b10 + a11 * b11 + a21 * b12;\n  out[6] = a02 * b10 + a12 * b11 + a22 * b12;\n  out[7] = a03 * b10 + a13 * b11 + a23 * b12;\n  out[8] = a00 * b20 + a10 * b21 + a20 * b22;\n  out[9] = a01 * b20 + a11 * b21 + a21 * b22;\n  out[10] = a02 * b20 + a12 * b21 + a22 * b22;\n  out[11] = a03 * b20 + a13 * b21 + a23 * b22;\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  }\n\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the X axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateX(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[0] = a[0];\n    out[1] = a[1];\n    out[2] = a[2];\n    out[3] = a[3];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[4] = a10 * c + a20 * s;\n  out[5] = a11 * c + a21 * s;\n  out[6] = a12 * c + a22 * s;\n  out[7] = a13 * c + a23 * s;\n  out[8] = a20 * c - a10 * s;\n  out[9] = a21 * c - a11 * s;\n  out[10] = a22 * c - a12 * s;\n  out[11] = a23 * c - a13 * s;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Y axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateY(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a20 = a[8];\n  var a21 = a[9];\n  var a22 = a[10];\n  var a23 = a[11];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged rows\n    out[4] = a[4];\n    out[5] = a[5];\n    out[6] = a[6];\n    out[7] = a[7];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c - a20 * s;\n  out[1] = a01 * c - a21 * s;\n  out[2] = a02 * c - a22 * s;\n  out[3] = a03 * c - a23 * s;\n  out[8] = a00 * s + a20 * c;\n  out[9] = a01 * s + a21 * c;\n  out[10] = a02 * s + a22 * c;\n  out[11] = a03 * s + a23 * c;\n  return out;\n}\n/**\n * Rotates a matrix by the given angle around the Z axis\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to rotate\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function rotateZ(out, a, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad);\n  var a00 = a[0];\n  var a01 = a[1];\n  var a02 = a[2];\n  var a03 = a[3];\n  var a10 = a[4];\n  var a11 = a[5];\n  var a12 = a[6];\n  var a13 = a[7];\n\n  if (a !== out) {\n    // If the source and destination differ, copy the unchanged last row\n    out[8] = a[8];\n    out[9] = a[9];\n    out[10] = a[10];\n    out[11] = a[11];\n    out[12] = a[12];\n    out[13] = a[13];\n    out[14] = a[14];\n    out[15] = a[15];\n  } // Perform axis-specific matrix multiplication\n\n\n  out[0] = a00 * c + a10 * s;\n  out[1] = a01 * c + a11 * s;\n  out[2] = a02 * c + a12 * s;\n  out[3] = a03 * c + a13 * s;\n  out[4] = a10 * c - a00 * s;\n  out[5] = a11 * c - a01 * s;\n  out[6] = a12 * c - a02 * s;\n  out[7] = a13 * c - a03 * s;\n  return out;\n}\n/**\n * Creates a matrix from a vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromTranslation(out, v) {\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a vector scaling\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.scale(dest, dest, vec);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyVec3} v Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromScaling(out, v) {\n  out[0] = v[0];\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = v[1];\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = v[2];\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a given angle around a given axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotate(dest, dest, rad, axis);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @param {ReadonlyVec3} axis the axis to rotate around\n * @returns {mat4} out\n */\n\nexport function fromRotation(out, rad, axis) {\n  var x = axis[0],\n      y = axis[1],\n      z = axis[2];\n  var len = Math.hypot(x, y, z);\n  var s, c, t;\n\n  if (len < glMatrix.EPSILON) {\n    return null;\n  }\n\n  len = 1 / len;\n  x *= len;\n  y *= len;\n  z *= len;\n  s = Math.sin(rad);\n  c = Math.cos(rad);\n  t = 1 - c; // Perform rotation-specific matrix multiplication\n\n  out[0] = x * x * t + c;\n  out[1] = y * x * t + z * s;\n  out[2] = z * x * t - y * s;\n  out[3] = 0;\n  out[4] = x * y * t - z * s;\n  out[5] = y * y * t + c;\n  out[6] = z * y * t + x * s;\n  out[7] = 0;\n  out[8] = x * z * t + y * s;\n  out[9] = y * z * t - x * s;\n  out[10] = z * z * t + c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the X axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateX(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromXRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = 1;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = c;\n  out[6] = s;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = -s;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Y axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateY(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromYRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = 0;\n  out[2] = -s;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = 1;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = s;\n  out[9] = 0;\n  out[10] = c;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from the given angle around the Z axis\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.rotateZ(dest, dest, rad);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {Number} rad the angle to rotate the matrix by\n * @returns {mat4} out\n */\n\nexport function fromZRotation(out, rad) {\n  var s = Math.sin(rad);\n  var c = Math.cos(rad); // Perform axis-specific matrix multiplication\n\n  out[0] = c;\n  out[1] = s;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = -s;\n  out[5] = c;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 1;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation and vector translation\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslation(out, q, v) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - (yy + zz);\n  out[1] = xy + wz;\n  out[2] = xz - wy;\n  out[3] = 0;\n  out[4] = xy - wz;\n  out[5] = 1 - (xx + zz);\n  out[6] = yz + wx;\n  out[7] = 0;\n  out[8] = xz + wy;\n  out[9] = yz - wx;\n  out[10] = 1 - (xx + yy);\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a new mat4 from a dual quat.\n *\n * @param {mat4} out Matrix\n * @param {ReadonlyQuat2} a Dual Quaternion\n * @returns {mat4} mat4 receiving operation result\n */\n\nexport function fromQuat2(out, a) {\n  var translation = new glMatrix.ARRAY_TYPE(3);\n  var bx = -a[0],\n      by = -a[1],\n      bz = -a[2],\n      bw = a[3],\n      ax = a[4],\n      ay = a[5],\n      az = a[6],\n      aw = a[7];\n  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense\n\n  if (magnitude > 0) {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;\n  } else {\n    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;\n    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;\n    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;\n  }\n\n  fromRotationTranslation(out, a, translation);\n  return out;\n}\n/**\n * Returns the translation vector component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslation,\n *  the returned vector will be the same as the translation vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive translation component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getTranslation(out, mat) {\n  out[0] = mat[12];\n  out[1] = mat[13];\n  out[2] = mat[14];\n  return out;\n}\n/**\n * Returns the scaling factor component of a transformation\n *  matrix. If a matrix is built with fromRotationTranslationScale\n *  with a normalized Quaternion paramter, the returned vector will be\n *  the same as the scaling vector\n *  originally supplied.\n * @param  {vec3} out Vector to receive scaling factor component\n * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {vec3} out\n */\n\nexport function getScaling(out, mat) {\n  var m11 = mat[0];\n  var m12 = mat[1];\n  var m13 = mat[2];\n  var m21 = mat[4];\n  var m22 = mat[5];\n  var m23 = mat[6];\n  var m31 = mat[8];\n  var m32 = mat[9];\n  var m33 = mat[10];\n  out[0] = Math.hypot(m11, m12, m13);\n  out[1] = Math.hypot(m21, m22, m23);\n  out[2] = Math.hypot(m31, m32, m33);\n  return out;\n}\n/**\n * Returns a quaternion representing the rotational component\n *  of a transformation matrix. If a matrix is built with\n *  fromRotationTranslation, the returned quaternion will be the\n *  same as the quaternion originally supplied.\n * @param {quat} out Quaternion to receive the rotation component\n * @param {ReadonlyMat4} mat Matrix to be decomposed (input)\n * @return {quat} out\n */\n\nexport function getRotation(out, mat) {\n  var scaling = new glMatrix.ARRAY_TYPE(3);\n  getScaling(scaling, mat);\n  var is1 = 1 / scaling[0];\n  var is2 = 1 / scaling[1];\n  var is3 = 1 / scaling[2];\n  var sm11 = mat[0] * is1;\n  var sm12 = mat[1] * is2;\n  var sm13 = mat[2] * is3;\n  var sm21 = mat[4] * is1;\n  var sm22 = mat[5] * is2;\n  var sm23 = mat[6] * is3;\n  var sm31 = mat[8] * is1;\n  var sm32 = mat[9] * is2;\n  var sm33 = mat[10] * is3;\n  var trace = sm11 + sm22 + sm33;\n  var S = 0;\n\n  if (trace > 0) {\n    S = Math.sqrt(trace + 1.0) * 2;\n    out[3] = 0.25 * S;\n    out[0] = (sm23 - sm32) / S;\n    out[1] = (sm31 - sm13) / S;\n    out[2] = (sm12 - sm21) / S;\n  } else if (sm11 > sm22 && sm11 > sm33) {\n    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;\n    out[3] = (sm23 - sm32) / S;\n    out[0] = 0.25 * S;\n    out[1] = (sm12 + sm21) / S;\n    out[2] = (sm31 + sm13) / S;\n  } else if (sm22 > sm33) {\n    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;\n    out[3] = (sm31 - sm13) / S;\n    out[0] = (sm12 + sm21) / S;\n    out[1] = 0.25 * S;\n    out[2] = (sm23 + sm32) / S;\n  } else {\n    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;\n    out[3] = (sm12 - sm21) / S;\n    out[0] = (sm31 + sm13) / S;\n    out[1] = (sm23 + sm32) / S;\n    out[2] = 0.25 * S;\n  }\n\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScale(out, q, v, s) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  out[0] = (1 - (yy + zz)) * sx;\n  out[1] = (xy + wz) * sx;\n  out[2] = (xz - wy) * sx;\n  out[3] = 0;\n  out[4] = (xy - wz) * sy;\n  out[5] = (1 - (xx + zz)) * sy;\n  out[6] = (yz + wx) * sy;\n  out[7] = 0;\n  out[8] = (xz + wy) * sz;\n  out[9] = (yz - wx) * sz;\n  out[10] = (1 - (xx + yy)) * sz;\n  out[11] = 0;\n  out[12] = v[0];\n  out[13] = v[1];\n  out[14] = v[2];\n  out[15] = 1;\n  return out;\n}\n/**\n * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\n * This is equivalent to (but much faster than):\n *\n *     mat4.identity(dest);\n *     mat4.translate(dest, vec);\n *     mat4.translate(dest, origin);\n *     let quatMat = mat4.create();\n *     quat4.toMat4(quat, quatMat);\n *     mat4.multiply(dest, quatMat);\n *     mat4.scale(dest, scale)\n *     mat4.translate(dest, negativeOrigin);\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {quat4} q Rotation quaternion\n * @param {ReadonlyVec3} v Translation vector\n * @param {ReadonlyVec3} s Scaling vector\n * @param {ReadonlyVec3} o The origin vector around which to scale and rotate\n * @returns {mat4} out\n */\n\nexport function fromRotationTranslationScaleOrigin(out, q, v, s, o) {\n  // Quaternion math\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var xy = x * y2;\n  var xz = x * z2;\n  var yy = y * y2;\n  var yz = y * z2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  var sx = s[0];\n  var sy = s[1];\n  var sz = s[2];\n  var ox = o[0];\n  var oy = o[1];\n  var oz = o[2];\n  var out0 = (1 - (yy + zz)) * sx;\n  var out1 = (xy + wz) * sx;\n  var out2 = (xz - wy) * sx;\n  var out4 = (xy - wz) * sy;\n  var out5 = (1 - (xx + zz)) * sy;\n  var out6 = (yz + wx) * sy;\n  var out8 = (xz + wy) * sz;\n  var out9 = (yz - wx) * sz;\n  var out10 = (1 - (xx + yy)) * sz;\n  out[0] = out0;\n  out[1] = out1;\n  out[2] = out2;\n  out[3] = 0;\n  out[4] = out4;\n  out[5] = out5;\n  out[6] = out6;\n  out[7] = 0;\n  out[8] = out8;\n  out[9] = out9;\n  out[10] = out10;\n  out[11] = 0;\n  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);\n  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);\n  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);\n  out[15] = 1;\n  return out;\n}\n/**\n * Calculates a 4x4 matrix from the given quaternion\n *\n * @param {mat4} out mat4 receiving operation result\n * @param {ReadonlyQuat} q Quaternion to create matrix from\n *\n * @returns {mat4} out\n */\n\nexport function fromQuat(out, q) {\n  var x = q[0],\n      y = q[1],\n      z = q[2],\n      w = q[3];\n  var x2 = x + x;\n  var y2 = y + y;\n  var z2 = z + z;\n  var xx = x * x2;\n  var yx = y * x2;\n  var yy = y * y2;\n  var zx = z * x2;\n  var zy = z * y2;\n  var zz = z * z2;\n  var wx = w * x2;\n  var wy = w * y2;\n  var wz = w * z2;\n  out[0] = 1 - yy - zz;\n  out[1] = yx + wz;\n  out[2] = zx - wy;\n  out[3] = 0;\n  out[4] = yx - wz;\n  out[5] = 1 - xx - zz;\n  out[6] = zy + wx;\n  out[7] = 0;\n  out[8] = zx + wy;\n  out[9] = zy - wx;\n  out[10] = 1 - xx - yy;\n  out[11] = 0;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = 0;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a frustum matrix with the given bounds\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Number} left Left bound of the frustum\n * @param {Number} right Right bound of the frustum\n * @param {Number} bottom Bottom bound of the frustum\n * @param {Number} top Top bound of the frustum\n * @param {Number} near Near bound of the frustum\n * @param {Number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function frustum(out, left, right, bottom, top, near, far) {\n  var rl = 1 / (right - left);\n  var tb = 1 / (top - bottom);\n  var nf = 1 / (near - far);\n  out[0] = near * 2 * rl;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = near * 2 * tb;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = (right + left) * rl;\n  out[9] = (top + bottom) * tb;\n  out[10] = (far + near) * nf;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[14] = far * near * 2 * nf;\n  out[15] = 0;\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveNO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = (far + near) * nf;\n    out[14] = 2 * far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -2 * near;\n  }\n\n  return out;\n}\n/**\n * Alias for {@link mat4.perspectiveNO}\n * @function\n */\n\nexport var perspective = perspectiveNO;\n/**\n * Generates a perspective projection matrix suitable for WebGPU with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n * Passing null/undefined/no value for far will generate infinite projection matrix.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} fovy Vertical field of view in radians\n * @param {number} aspect Aspect ratio. typically viewport width/height\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum, can be null or Infinity\n * @returns {mat4} out\n */\n\nexport function perspectiveZO(out, fovy, aspect, near, far) {\n  var f = 1.0 / Math.tan(fovy / 2),\n      nf;\n  out[0] = f / aspect;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = f;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[11] = -1;\n  out[12] = 0;\n  out[13] = 0;\n  out[15] = 0;\n\n  if (far != null && far !== Infinity) {\n    nf = 1 / (near - far);\n    out[10] = far * nf;\n    out[14] = far * near * nf;\n  } else {\n    out[10] = -1;\n    out[14] = -near;\n  }\n\n  return out;\n}\n/**\n * Generates a perspective projection matrix with the given field of view.\n * This is primarily useful for generating projection matrices to be used\n * with the still experiemental WebVR API.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function perspectiveFromFieldOfView(out, fov, near, far) {\n  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);\n  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);\n  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);\n  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);\n  var xScale = 2.0 / (leftTan + rightTan);\n  var yScale = 2.0 / (upTan + downTan);\n  out[0] = xScale;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  out[3] = 0.0;\n  out[4] = 0.0;\n  out[5] = yScale;\n  out[6] = 0.0;\n  out[7] = 0.0;\n  out[8] = -((leftTan - rightTan) * xScale * 0.5);\n  out[9] = (upTan - downTan) * yScale * 0.5;\n  out[10] = far / (near - far);\n  out[11] = -1.0;\n  out[12] = 0.0;\n  out[13] = 0.0;\n  out[14] = far * near / (near - far);\n  out[15] = 0.0;\n  return out;\n}\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],\n * which matches WebGL/OpenGL's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoNO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = 2 * nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = (far + near) * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Alias for {@link mat4.orthoNO}\n * @function\n */\n\nexport var ortho = orthoNO;\n/**\n * Generates a orthogonal projection matrix with the given bounds.\n * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],\n * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {number} left Left bound of the frustum\n * @param {number} right Right bound of the frustum\n * @param {number} bottom Bottom bound of the frustum\n * @param {number} top Top bound of the frustum\n * @param {number} near Near bound of the frustum\n * @param {number} far Far bound of the frustum\n * @returns {mat4} out\n */\n\nexport function orthoZO(out, left, right, bottom, top, near, far) {\n  var lr = 1 / (left - right);\n  var bt = 1 / (bottom - top);\n  var nf = 1 / (near - far);\n  out[0] = -2 * lr;\n  out[1] = 0;\n  out[2] = 0;\n  out[3] = 0;\n  out[4] = 0;\n  out[5] = -2 * bt;\n  out[6] = 0;\n  out[7] = 0;\n  out[8] = 0;\n  out[9] = 0;\n  out[10] = nf;\n  out[11] = 0;\n  out[12] = (left + right) * lr;\n  out[13] = (top + bottom) * bt;\n  out[14] = near * nf;\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a look-at matrix with the given eye position, focal point, and up axis.\n * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function lookAt(out, eye, center, up) {\n  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;\n  var eyex = eye[0];\n  var eyey = eye[1];\n  var eyez = eye[2];\n  var upx = up[0];\n  var upy = up[1];\n  var upz = up[2];\n  var centerx = center[0];\n  var centery = center[1];\n  var centerz = center[2];\n\n  if (Math.abs(eyex - centerx) < glMatrix.EPSILON && Math.abs(eyey - centery) < glMatrix.EPSILON && Math.abs(eyez - centerz) < glMatrix.EPSILON) {\n    return identity(out);\n  }\n\n  z0 = eyex - centerx;\n  z1 = eyey - centery;\n  z2 = eyez - centerz;\n  len = 1 / Math.hypot(z0, z1, z2);\n  z0 *= len;\n  z1 *= len;\n  z2 *= len;\n  x0 = upy * z2 - upz * z1;\n  x1 = upz * z0 - upx * z2;\n  x2 = upx * z1 - upy * z0;\n  len = Math.hypot(x0, x1, x2);\n\n  if (!len) {\n    x0 = 0;\n    x1 = 0;\n    x2 = 0;\n  } else {\n    len = 1 / len;\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  y0 = z1 * x2 - z2 * x1;\n  y1 = z2 * x0 - z0 * x2;\n  y2 = z0 * x1 - z1 * x0;\n  len = Math.hypot(y0, y1, y2);\n\n  if (!len) {\n    y0 = 0;\n    y1 = 0;\n    y2 = 0;\n  } else {\n    len = 1 / len;\n    y0 *= len;\n    y1 *= len;\n    y2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = y0;\n  out[2] = z0;\n  out[3] = 0;\n  out[4] = x1;\n  out[5] = y1;\n  out[6] = z1;\n  out[7] = 0;\n  out[8] = x2;\n  out[9] = y2;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\n  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\n  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\n  out[15] = 1;\n  return out;\n}\n/**\n * Generates a matrix that makes something look at something else.\n *\n * @param {mat4} out mat4 frustum matrix will be written into\n * @param {ReadonlyVec3} eye Position of the viewer\n * @param {ReadonlyVec3} center Point the viewer is looking at\n * @param {ReadonlyVec3} up vec3 pointing up\n * @returns {mat4} out\n */\n\nexport function targetTo(out, eye, target, up) {\n  var eyex = eye[0],\n      eyey = eye[1],\n      eyez = eye[2],\n      upx = up[0],\n      upy = up[1],\n      upz = up[2];\n  var z0 = eyex - target[0],\n      z1 = eyey - target[1],\n      z2 = eyez - target[2];\n  var len = z0 * z0 + z1 * z1 + z2 * z2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    z0 *= len;\n    z1 *= len;\n    z2 *= len;\n  }\n\n  var x0 = upy * z2 - upz * z1,\n      x1 = upz * z0 - upx * z2,\n      x2 = upx * z1 - upy * z0;\n  len = x0 * x0 + x1 * x1 + x2 * x2;\n\n  if (len > 0) {\n    len = 1 / Math.sqrt(len);\n    x0 *= len;\n    x1 *= len;\n    x2 *= len;\n  }\n\n  out[0] = x0;\n  out[1] = x1;\n  out[2] = x2;\n  out[3] = 0;\n  out[4] = z1 * x2 - z2 * x1;\n  out[5] = z2 * x0 - z0 * x2;\n  out[6] = z0 * x1 - z1 * x0;\n  out[7] = 0;\n  out[8] = z0;\n  out[9] = z1;\n  out[10] = z2;\n  out[11] = 0;\n  out[12] = eyex;\n  out[13] = eyey;\n  out[14] = eyez;\n  out[15] = 1;\n  return out;\n}\n/**\n * Returns a string representation of a mat4\n *\n * @param {ReadonlyMat4} a matrix to represent as a string\n * @returns {String} string representation of the matrix\n */\n\nexport function str(a) {\n  return \"mat4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \", \" + a[4] + \", \" + a[5] + \", \" + a[6] + \", \" + a[7] + \", \" + a[8] + \", \" + a[9] + \", \" + a[10] + \", \" + a[11] + \", \" + a[12] + \", \" + a[13] + \", \" + a[14] + \", \" + a[15] + \")\";\n}\n/**\n * Returns Frobenius norm of a mat4\n *\n * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of\n * @returns {Number} Frobenius norm\n */\n\nexport function frob(a) {\n  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);\n}\n/**\n * Adds two mat4's\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  out[3] = a[3] + b[3];\n  out[4] = a[4] + b[4];\n  out[5] = a[5] + b[5];\n  out[6] = a[6] + b[6];\n  out[7] = a[7] + b[7];\n  out[8] = a[8] + b[8];\n  out[9] = a[9] + b[9];\n  out[10] = a[10] + b[10];\n  out[11] = a[11] + b[11];\n  out[12] = a[12] + b[12];\n  out[13] = a[13] + b[13];\n  out[14] = a[14] + b[14];\n  out[15] = a[15] + b[15];\n  return out;\n}\n/**\n * Subtracts matrix b from matrix a\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @returns {mat4} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  out[3] = a[3] - b[3];\n  out[4] = a[4] - b[4];\n  out[5] = a[5] - b[5];\n  out[6] = a[6] - b[6];\n  out[7] = a[7] - b[7];\n  out[8] = a[8] - b[8];\n  out[9] = a[9] - b[9];\n  out[10] = a[10] - b[10];\n  out[11] = a[11] - b[11];\n  out[12] = a[12] - b[12];\n  out[13] = a[13] - b[13];\n  out[14] = a[14] - b[14];\n  out[15] = a[15] - b[15];\n  return out;\n}\n/**\n * Multiply each element of the matrix by a scalar.\n *\n * @param {mat4} out the receiving matrix\n * @param {ReadonlyMat4} a the matrix to scale\n * @param {Number} b amount to scale the matrix's elements by\n * @returns {mat4} out\n */\n\nexport function multiplyScalar(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  out[3] = a[3] * b;\n  out[4] = a[4] * b;\n  out[5] = a[5] * b;\n  out[6] = a[6] * b;\n  out[7] = a[7] * b;\n  out[8] = a[8] * b;\n  out[9] = a[9] * b;\n  out[10] = a[10] * b;\n  out[11] = a[11] * b;\n  out[12] = a[12] * b;\n  out[13] = a[13] * b;\n  out[14] = a[14] * b;\n  out[15] = a[15] * b;\n  return out;\n}\n/**\n * Adds two mat4's after multiplying each element of the second operand by a scalar value.\n *\n * @param {mat4} out the receiving vector\n * @param {ReadonlyMat4} a the first operand\n * @param {ReadonlyMat4} b the second operand\n * @param {Number} scale the amount to scale b's elements by before adding\n * @returns {mat4} out\n */\n\nexport function multiplyScalarAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  out[3] = a[3] + b[3] * scale;\n  out[4] = a[4] + b[4] * scale;\n  out[5] = a[5] + b[5] * scale;\n  out[6] = a[6] + b[6] * scale;\n  out[7] = a[7] + b[7] * scale;\n  out[8] = a[8] + b[8] * scale;\n  out[9] = a[9] + b[9] * scale;\n  out[10] = a[10] + b[10] * scale;\n  out[11] = a[11] + b[11] * scale;\n  out[12] = a[12] + b[12] * scale;\n  out[13] = a[13] + b[13] * scale;\n  out[14] = a[14] + b[14] * scale;\n  out[15] = a[15] + b[15] * scale;\n  return out;\n}\n/**\n * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];\n}\n/**\n * Returns whether or not the matrices have approximately the same elements in the same position.\n *\n * @param {ReadonlyMat4} a The first matrix.\n * @param {ReadonlyMat4} b The second matrix.\n * @returns {Boolean} True if the matrices are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2],\n      a3 = a[3];\n  var a4 = a[4],\n      a5 = a[5],\n      a6 = a[6],\n      a7 = a[7];\n  var a8 = a[8],\n      a9 = a[9],\n      a10 = a[10],\n      a11 = a[11];\n  var a12 = a[12],\n      a13 = a[13],\n      a14 = a[14],\n      a15 = a[15];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2],\n      b3 = b[3];\n  var b4 = b[4],\n      b5 = b[5],\n      b6 = b[6],\n      b7 = b[7];\n  var b8 = b[8],\n      b9 = b[9],\n      b10 = b[10],\n      b11 = b[11];\n  var b12 = b[12],\n      b13 = b[13],\n      b14 = b[14],\n      b15 = b[15];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));\n}\n/**\n * Alias for {@link mat4.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link mat4.subtract}\n * @function\n */\n\nexport var sub = subtract;","import * as glMatrix from \"./common.js\";\n/**\n * 3 Dimensional Vector\n * @module vec3\n */\n\n/**\n * Creates a new, empty vec3\n *\n * @returns {vec3} a new 3D vector\n */\n\nexport function create() {\n  var out = new glMatrix.ARRAY_TYPE(3);\n\n  if (glMatrix.ARRAY_TYPE != Float32Array) {\n    out[0] = 0;\n    out[1] = 0;\n    out[2] = 0;\n  }\n\n  return out;\n}\n/**\n * Creates a new vec3 initialized with values from an existing vector\n *\n * @param {ReadonlyVec3} a vector to clone\n * @returns {vec3} a new 3D vector\n */\n\nexport function clone(a) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Calculates the length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate length of\n * @returns {Number} length of a\n */\n\nexport function length(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Creates a new vec3 initialized with the given values\n *\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} a new 3D vector\n */\n\nexport function fromValues(x, y, z) {\n  var out = new glMatrix.ARRAY_TYPE(3);\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Copy the values from one vec3 to another\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the source vector\n * @returns {vec3} out\n */\n\nexport function copy(out, a) {\n  out[0] = a[0];\n  out[1] = a[1];\n  out[2] = a[2];\n  return out;\n}\n/**\n * Set the components of a vec3 to the given values\n *\n * @param {vec3} out the receiving vector\n * @param {Number} x X component\n * @param {Number} y Y component\n * @param {Number} z Z component\n * @returns {vec3} out\n */\n\nexport function set(out, x, y, z) {\n  out[0] = x;\n  out[1] = y;\n  out[2] = z;\n  return out;\n}\n/**\n * Adds two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function add(out, a, b) {\n  out[0] = a[0] + b[0];\n  out[1] = a[1] + b[1];\n  out[2] = a[2] + b[2];\n  return out;\n}\n/**\n * Subtracts vector b from vector a\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function subtract(out, a, b) {\n  out[0] = a[0] - b[0];\n  out[1] = a[1] - b[1];\n  out[2] = a[2] - b[2];\n  return out;\n}\n/**\n * Multiplies two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function multiply(out, a, b) {\n  out[0] = a[0] * b[0];\n  out[1] = a[1] * b[1];\n  out[2] = a[2] * b[2];\n  return out;\n}\n/**\n * Divides two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function divide(out, a, b) {\n  out[0] = a[0] / b[0];\n  out[1] = a[1] / b[1];\n  out[2] = a[2] / b[2];\n  return out;\n}\n/**\n * Math.ceil the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to ceil\n * @returns {vec3} out\n */\n\nexport function ceil(out, a) {\n  out[0] = Math.ceil(a[0]);\n  out[1] = Math.ceil(a[1]);\n  out[2] = Math.ceil(a[2]);\n  return out;\n}\n/**\n * Math.floor the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to floor\n * @returns {vec3} out\n */\n\nexport function floor(out, a) {\n  out[0] = Math.floor(a[0]);\n  out[1] = Math.floor(a[1]);\n  out[2] = Math.floor(a[2]);\n  return out;\n}\n/**\n * Returns the minimum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function min(out, a, b) {\n  out[0] = Math.min(a[0], b[0]);\n  out[1] = Math.min(a[1], b[1]);\n  out[2] = Math.min(a[2], b[2]);\n  return out;\n}\n/**\n * Returns the maximum of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function max(out, a, b) {\n  out[0] = Math.max(a[0], b[0]);\n  out[1] = Math.max(a[1], b[1]);\n  out[2] = Math.max(a[2], b[2]);\n  return out;\n}\n/**\n * Math.round the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to round\n * @returns {vec3} out\n */\n\nexport function round(out, a) {\n  out[0] = Math.round(a[0]);\n  out[1] = Math.round(a[1]);\n  out[2] = Math.round(a[2]);\n  return out;\n}\n/**\n * Scales a vec3 by a scalar number\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to scale\n * @param {Number} b amount to scale the vector by\n * @returns {vec3} out\n */\n\nexport function scale(out, a, b) {\n  out[0] = a[0] * b;\n  out[1] = a[1] * b;\n  out[2] = a[2] * b;\n  return out;\n}\n/**\n * Adds two vec3's after scaling the second operand by a scalar value\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} scale the amount to scale b by before adding\n * @returns {vec3} out\n */\n\nexport function scaleAndAdd(out, a, b, scale) {\n  out[0] = a[0] + b[0] * scale;\n  out[1] = a[1] + b[1] * scale;\n  out[2] = a[2] + b[2] * scale;\n  return out;\n}\n/**\n * Calculates the euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} distance between a and b\n */\n\nexport function distance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return Math.hypot(x, y, z);\n}\n/**\n * Calculates the squared euclidian distance between two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} squared distance between a and b\n */\n\nexport function squaredDistance(a, b) {\n  var x = b[0] - a[0];\n  var y = b[1] - a[1];\n  var z = b[2] - a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Calculates the squared length of a vec3\n *\n * @param {ReadonlyVec3} a vector to calculate squared length of\n * @returns {Number} squared length of a\n */\n\nexport function squaredLength(a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  return x * x + y * y + z * z;\n}\n/**\n * Negates the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to negate\n * @returns {vec3} out\n */\n\nexport function negate(out, a) {\n  out[0] = -a[0];\n  out[1] = -a[1];\n  out[2] = -a[2];\n  return out;\n}\n/**\n * Returns the inverse of the components of a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to invert\n * @returns {vec3} out\n */\n\nexport function inverse(out, a) {\n  out[0] = 1.0 / a[0];\n  out[1] = 1.0 / a[1];\n  out[2] = 1.0 / a[2];\n  return out;\n}\n/**\n * Normalize a vec3\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a vector to normalize\n * @returns {vec3} out\n */\n\nexport function normalize(out, a) {\n  var x = a[0];\n  var y = a[1];\n  var z = a[2];\n  var len = x * x + y * y + z * z;\n\n  if (len > 0) {\n    //TODO: evaluate use of glm_invsqrt here?\n    len = 1 / Math.sqrt(len);\n  }\n\n  out[0] = a[0] * len;\n  out[1] = a[1] * len;\n  out[2] = a[2] * len;\n  return out;\n}\n/**\n * Calculates the dot product of two vec3's\n *\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {Number} dot product of a and b\n */\n\nexport function dot(a, b) {\n  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n}\n/**\n * Computes the cross product of two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @returns {vec3} out\n */\n\nexport function cross(out, a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2];\n  var bx = b[0],\n      by = b[1],\n      bz = b[2];\n  out[0] = ay * bz - az * by;\n  out[1] = az * bx - ax * bz;\n  out[2] = ax * by - ay * bx;\n  return out;\n}\n/**\n * Performs a linear interpolation between two vec3's\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function lerp(out, a, b, t) {\n  var ax = a[0];\n  var ay = a[1];\n  var az = a[2];\n  out[0] = ax + t * (b[0] - ax);\n  out[1] = ay + t * (b[1] - ay);\n  out[2] = az + t * (b[2] - az);\n  return out;\n}\n/**\n * Performs a hermite interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function hermite(out, a, b, c, d, t) {\n  var factorTimes2 = t * t;\n  var factor1 = factorTimes2 * (2 * t - 3) + 1;\n  var factor2 = factorTimes2 * (t - 2) + t;\n  var factor3 = factorTimes2 * (t - 1);\n  var factor4 = factorTimes2 * (3 - 2 * t);\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Performs a bezier interpolation with two control points\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the first operand\n * @param {ReadonlyVec3} b the second operand\n * @param {ReadonlyVec3} c the third operand\n * @param {ReadonlyVec3} d the fourth operand\n * @param {Number} t interpolation amount, in the range [0-1], between the two inputs\n * @returns {vec3} out\n */\n\nexport function bezier(out, a, b, c, d, t) {\n  var inverseFactor = 1 - t;\n  var inverseFactorTimesTwo = inverseFactor * inverseFactor;\n  var factorTimes2 = t * t;\n  var factor1 = inverseFactorTimesTwo * inverseFactor;\n  var factor2 = 3 * t * inverseFactorTimesTwo;\n  var factor3 = 3 * factorTimes2 * inverseFactor;\n  var factor4 = factorTimes2 * t;\n  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\n  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\n  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\n  return out;\n}\n/**\n * Generates a random vector with the given scale\n *\n * @param {vec3} out the receiving vector\n * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned\n * @returns {vec3} out\n */\n\nexport function random(out, scale) {\n  scale = scale || 1.0;\n  var r = glMatrix.RANDOM() * 2.0 * Math.PI;\n  var z = glMatrix.RANDOM() * 2.0 - 1.0;\n  var zScale = Math.sqrt(1.0 - z * z) * scale;\n  out[0] = Math.cos(r) * zScale;\n  out[1] = Math.sin(r) * zScale;\n  out[2] = z * scale;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat4.\n * 4th vector component is implicitly '1'\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat4} m matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat4(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  var w = m[3] * x + m[7] * y + m[11] * z + m[15];\n  w = w || 1.0;\n  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\n  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\n  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\n  return out;\n}\n/**\n * Transforms the vec3 with a mat3.\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyMat3} m the 3x3 matrix to transform with\n * @returns {vec3} out\n */\n\nexport function transformMat3(out, a, m) {\n  var x = a[0],\n      y = a[1],\n      z = a[2];\n  out[0] = x * m[0] + y * m[3] + z * m[6];\n  out[1] = x * m[1] + y * m[4] + z * m[7];\n  out[2] = x * m[2] + y * m[5] + z * m[8];\n  return out;\n}\n/**\n * Transforms the vec3 with a quat\n * Can also be used for dual quaternions. (Multiply it with the real part)\n *\n * @param {vec3} out the receiving vector\n * @param {ReadonlyVec3} a the vector to transform\n * @param {ReadonlyQuat} q quaternion to transform with\n * @returns {vec3} out\n */\n\nexport function transformQuat(out, a, q) {\n  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed\n  var qx = q[0],\n      qy = q[1],\n      qz = q[2],\n      qw = q[3];\n  var x = a[0],\n      y = a[1],\n      z = a[2]; // var qvec = [qx, qy, qz];\n  // var uv = vec3.cross([], qvec, a);\n\n  var uvx = qy * z - qz * y,\n      uvy = qz * x - qx * z,\n      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);\n\n  var uuvx = qy * uvz - qz * uvy,\n      uuvy = qz * uvx - qx * uvz,\n      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);\n\n  var w2 = qw * 2;\n  uvx *= w2;\n  uvy *= w2;\n  uvz *= w2; // vec3.scale(uuv, uuv, 2);\n\n  uuvx *= 2;\n  uuvy *= 2;\n  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));\n\n  out[0] = x + uvx + uuvx;\n  out[1] = y + uvy + uuvy;\n  out[2] = z + uvz + uuvz;\n  return out;\n}\n/**\n * Rotate a 3D vector around the x-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateX(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0];\n  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);\n  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the y-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateY(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);\n  r[1] = p[1];\n  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Rotate a 3D vector around the z-axis\n * @param {vec3} out The receiving vec3\n * @param {ReadonlyVec3} a The vec3 point to rotate\n * @param {ReadonlyVec3} b The origin of the rotation\n * @param {Number} rad The angle of rotation in radians\n * @returns {vec3} out\n */\n\nexport function rotateZ(out, a, b, rad) {\n  var p = [],\n      r = []; //Translate point to the origin\n\n  p[0] = a[0] - b[0];\n  p[1] = a[1] - b[1];\n  p[2] = a[2] - b[2]; //perform rotation\n\n  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);\n  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);\n  r[2] = p[2]; //translate to correct position\n\n  out[0] = r[0] + b[0];\n  out[1] = r[1] + b[1];\n  out[2] = r[2] + b[2];\n  return out;\n}\n/**\n * Get the angle between two 3D vectors\n * @param {ReadonlyVec3} a The first operand\n * @param {ReadonlyVec3} b The second operand\n * @returns {Number} The angle in radians\n */\n\nexport function angle(a, b) {\n  var ax = a[0],\n      ay = a[1],\n      az = a[2],\n      bx = b[0],\n      by = b[1],\n      bz = b[2],\n      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),\n      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),\n      mag = mag1 * mag2,\n      cosine = mag && dot(a, b) / mag;\n  return Math.acos(Math.min(Math.max(cosine, -1), 1));\n}\n/**\n * Set the components of a vec3 to zero\n *\n * @param {vec3} out the receiving vector\n * @returns {vec3} out\n */\n\nexport function zero(out) {\n  out[0] = 0.0;\n  out[1] = 0.0;\n  out[2] = 0.0;\n  return out;\n}\n/**\n * Returns a string representation of a vector\n *\n * @param {ReadonlyVec3} a vector to represent as a string\n * @returns {String} string representation of the vector\n */\n\nexport function str(a) {\n  return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\n}\n/**\n * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function exactEquals(a, b) {\n  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\n}\n/**\n * Returns whether or not the vectors have approximately the same elements in the same position.\n *\n * @param {ReadonlyVec3} a The first vector.\n * @param {ReadonlyVec3} b The second vector.\n * @returns {Boolean} True if the vectors are equal, false otherwise.\n */\n\nexport function equals(a, b) {\n  var a0 = a[0],\n      a1 = a[1],\n      a2 = a[2];\n  var b0 = b[0],\n      b1 = b[1],\n      b2 = b[2];\n  return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));\n}\n/**\n * Alias for {@link vec3.subtract}\n * @function\n */\n\nexport var sub = subtract;\n/**\n * Alias for {@link vec3.multiply}\n * @function\n */\n\nexport var mul = multiply;\n/**\n * Alias for {@link vec3.divide}\n * @function\n */\n\nexport var div = divide;\n/**\n * Alias for {@link vec3.distance}\n * @function\n */\n\nexport var dist = distance;\n/**\n * Alias for {@link vec3.squaredDistance}\n * @function\n */\n\nexport var sqrDist = squaredDistance;\n/**\n * Alias for {@link vec3.length}\n * @function\n */\n\nexport var len = length;\n/**\n * Alias for {@link vec3.squaredLength}\n * @function\n */\n\nexport var sqrLen = squaredLength;\n/**\n * Perform some operation over an array of vec3s.\n *\n * @param {Array} a the array of vectors to iterate over\n * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed\n * @param {Number} offset Number of elements to skip at the beginning of the array\n * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array\n * @param {Function} fn Function to call for each vector in the array\n * @param {Object} [arg] additional argument to pass to fn\n * @returns {Array} a\n * @function\n */\n\nexport var forEach = function () {\n  var vec = create();\n  return function (a, stride, offset, count, fn, arg) {\n    var i, l;\n\n    if (!stride) {\n      stride = 3;\n    }\n\n    if (!offset) {\n      offset = 0;\n    }\n\n    if (count) {\n      l = Math.min(count * stride + offset, a.length);\n    } else {\n      l = a.length;\n    }\n\n    for (i = offset; i < l; i += stride) {\n      vec[0] = a[i];\n      vec[1] = a[i + 1];\n      vec[2] = a[i + 2];\n      fn(vec, vec, arg);\n      a[i] = vec[0];\n      a[i + 1] = vec[1];\n      a[i + 2] = vec[2];\n    }\n\n    return a;\n  };\n}();","/* eslint no-negated-condition: 0, no-new-func: 0 */\n\n'use strict';\n\nif (typeof self !== 'undefined') {\n\tmodule.exports = self;\n} else if (typeof window !== 'undefined') {\n\tmodule.exports = window;\n} else {\n\tmodule.exports = Function('return this')();\n}\n","'use strict';\n\nvar defineProperties = require('define-properties');\n\nvar implementation = require('./implementation');\nvar getPolyfill = require('./polyfill');\nvar shim = require('./shim');\n\nvar polyfill = getPolyfill();\n\nvar getGlobal = function () { return polyfill; };\n\ndefineProperties(getGlobal, {\n\tgetPolyfill: getPolyfill,\n\timplementation: implementation,\n\tshim: shim\n});\n\nmodule.exports = getGlobal;\n","'use strict';\n\nvar implementation = require('./implementation');\n\nmodule.exports = function getPolyfill() {\n\tif (typeof global !== 'object' || !global || global.Math !== Math || global.Array !== Array) {\n\t\treturn implementation;\n\t}\n\treturn global;\n};\n","'use strict';\n\nvar define = require('define-properties');\nvar getPolyfill = require('./polyfill');\n\nmodule.exports = function shimGlobal() {\n\tvar polyfill = getPolyfill();\n\tif (define.supportsDescriptors) {\n\t\tvar descriptor = Object.getOwnPropertyDescriptor(polyfill, 'globalThis');\n\t\tif (!descriptor || (descriptor.configurable && (descriptor.enumerable || !descriptor.writable || globalThis !== polyfill))) { // eslint-disable-line max-len\n\t\t\tObject.defineProperty(polyfill, 'globalThis', {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: false,\n\t\t\t\tvalue: polyfill,\n\t\t\t\twritable: true\n\t\t\t});\n\t\t}\n\t} else if (typeof globalThis !== 'object' || globalThis !== polyfill) {\n\t\tpolyfill.globalThis = polyfill;\n\t}\n\treturn polyfill;\n};\n","'use strict';\n\nvar keysShim;\nif (!Object.keys) {\n\t// modified from https://github.com/es-shims/es5-shim\n\tvar has = Object.prototype.hasOwnProperty;\n\tvar toStr = Object.prototype.toString;\n\tvar isArgs = require('./isArguments'); // eslint-disable-line global-require\n\tvar isEnumerable = Object.prototype.propertyIsEnumerable;\n\tvar hasDontEnumBug = !isEnumerable.call({ toString: null }, 'toString');\n\tvar hasProtoEnumBug = isEnumerable.call(function () {}, 'prototype');\n\tvar dontEnums = [\n\t\t'toString',\n\t\t'toLocaleString',\n\t\t'valueOf',\n\t\t'hasOwnProperty',\n\t\t'isPrototypeOf',\n\t\t'propertyIsEnumerable',\n\t\t'constructor'\n\t];\n\tvar equalsConstructorPrototype = function (o) {\n\t\tvar ctor = o.constructor;\n\t\treturn ctor && ctor.prototype === o;\n\t};\n\tvar excludedKeys = {\n\t\t$applicationCache: true,\n\t\t$console: true,\n\t\t$external: true,\n\t\t$frame: true,\n\t\t$frameElement: true,\n\t\t$frames: true,\n\t\t$innerHeight: true,\n\t\t$innerWidth: true,\n\t\t$onmozfullscreenchange: true,\n\t\t$onmozfullscreenerror: true,\n\t\t$outerHeight: true,\n\t\t$outerWidth: true,\n\t\t$pageXOffset: true,\n\t\t$pageYOffset: true,\n\t\t$parent: true,\n\t\t$scrollLeft: true,\n\t\t$scrollTop: true,\n\t\t$scrollX: true,\n\t\t$scrollY: true,\n\t\t$self: true,\n\t\t$webkitIndexedDB: true,\n\t\t$webkitStorageInfo: true,\n\t\t$window: true\n\t};\n\tvar hasAutomationEqualityBug = (function () {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined') { return false; }\n\t\tfor (var k in window) {\n\t\t\ttry {\n\t\t\t\tif (!excludedKeys['$' + k] && has.call(window, k) && window[k] !== null && typeof window[k] === 'object') {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tequalsConstructorPrototype(window[k]);\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\treturn false;\n\t}());\n\tvar equalsConstructorPrototypeIfNotBuggy = function (o) {\n\t\t/* global window */\n\t\tif (typeof window === 'undefined' || !hasAutomationEqualityBug) {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t}\n\t\ttry {\n\t\t\treturn equalsConstructorPrototype(o);\n\t\t} catch (e) {\n\t\t\treturn false;\n\t\t}\n\t};\n\n\tkeysShim = function keys(object) {\n\t\tvar isObject = object !== null && typeof object === 'object';\n\t\tvar isFunction = toStr.call(object) === '[object Function]';\n\t\tvar isArguments = isArgs(object);\n\t\tvar isString = isObject && toStr.call(object) === '[object String]';\n\t\tvar theKeys = [];\n\n\t\tif (!isObject && !isFunction && !isArguments) {\n\t\t\tthrow new TypeError('Object.keys called on a non-object');\n\t\t}\n\n\t\tvar skipProto = hasProtoEnumBug && isFunction;\n\t\tif (isString && object.length > 0 && !has.call(object, 0)) {\n\t\t\tfor (var i = 0; i < object.length; ++i) {\n\t\t\t\ttheKeys.push(String(i));\n\t\t\t}\n\t\t}\n\n\t\tif (isArguments && object.length > 0) {\n\t\t\tfor (var j = 0; j < object.length; ++j) {\n\t\t\t\ttheKeys.push(String(j));\n\t\t\t}\n\t\t} else {\n\t\t\tfor (var name in object) {\n\t\t\t\tif (!(skipProto && name === 'prototype') && has.call(object, name)) {\n\t\t\t\t\ttheKeys.push(String(name));\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tif (hasDontEnumBug) {\n\t\t\tvar skipConstructor = equalsConstructorPrototypeIfNotBuggy(object);\n\n\t\t\tfor (var k = 0; k < dontEnums.length; ++k) {\n\t\t\t\tif (!(skipConstructor && dontEnums[k] === 'constructor') && has.call(object, dontEnums[k])) {\n\t\t\t\t\ttheKeys.push(dontEnums[k]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\treturn theKeys;\n\t};\n}\nmodule.exports = keysShim;\n","'use strict';\n\nvar slice = Array.prototype.slice;\nvar isArgs = require('./isArguments');\n\nvar origKeys = Object.keys;\nvar keysShim = origKeys ? function keys(o) { return origKeys(o); } : require('./implementation');\n\nvar originalKeys = Object.keys;\n\nkeysShim.shim = function shimObjectKeys() {\n\tif (Object.keys) {\n\t\tvar keysWorksWithArguments = (function () {\n\t\t\t// Safari 5.0 bug\n\t\t\tvar args = Object.keys(arguments);\n\t\t\treturn args && args.length === arguments.length;\n\t\t}(1, 2));\n\t\tif (!keysWorksWithArguments) {\n\t\t\tObject.keys = function keys(object) { // eslint-disable-line func-name-matching\n\t\t\t\tif (isArgs(object)) {\n\t\t\t\t\treturn originalKeys(slice.call(object));\n\t\t\t\t}\n\t\t\t\treturn originalKeys(object);\n\t\t\t};\n\t\t}\n\t} else {\n\t\tObject.keys = keysShim;\n\t}\n\treturn Object.keys || keysShim;\n};\n\nmodule.exports = keysShim;\n","'use strict';\n\nvar toStr = Object.prototype.toString;\n\nmodule.exports = function isArguments(value) {\n\tvar str = toStr.call(value);\n\tvar isArgs = str === '[object Arguments]';\n\tif (!isArgs) {\n\t\tisArgs = str !== '[object Array]' &&\n\t\t\tvalue !== null &&\n\t\t\ttypeof value === 'object' &&\n\t\t\ttypeof value.length === 'number' &&\n\t\t\tvalue.length >= 0 &&\n\t\t\ttoStr.call(value.callee) === '[object Function]';\n\t}\n\treturn isArgs;\n};\n","// A library of seedable RNGs implemented in Javascript.\n//\n// Usage:\n//\n// var seedrandom = require('seedrandom');\n// var random = seedrandom(1); // or any seed.\n// var x = random();       // 0 <= x < 1.  Every bit is random.\n// var x = random.quick(); // 0 <= x < 1.  32 bits of randomness.\n\n// alea, a 53-bit multiply-with-carry generator by Johannes Baagøe.\n// Period: ~2^116\n// Reported to pass all BigCrush tests.\nvar alea = require('./lib/alea');\n\n// xor128, a pure xor-shift generator by George Marsaglia.\n// Period: 2^128-1.\n// Reported to fail: MatrixRank and LinearComp.\nvar xor128 = require('./lib/xor128');\n\n// xorwow, George Marsaglia's 160-bit xor-shift combined plus weyl.\n// Period: 2^192-2^32\n// Reported to fail: CollisionOver, SimpPoker, and LinearComp.\nvar xorwow = require('./lib/xorwow');\n\n// xorshift7, by François Panneton and Pierre L'ecuyer, takes\n// a different approach: it adds robustness by allowing more shifts\n// than Marsaglia's original three.  It is a 7-shift generator\n// with 256 bits, that passes BigCrush with no systmatic failures.\n// Period 2^256-1.\n// No systematic BigCrush failures reported.\nvar xorshift7 = require('./lib/xorshift7');\n\n// xor4096, by Richard Brent, is a 4096-bit xor-shift with a\n// very long period that also adds a Weyl generator. It also passes\n// BigCrush with no systematic failures.  Its long period may\n// be useful if you have many generators and need to avoid\n// collisions.\n// Period: 2^4128-2^32.\n// No systematic BigCrush failures reported.\nvar xor4096 = require('./lib/xor4096');\n\n// Tyche-i, by Samuel Neves and Filipe Araujo, is a bit-shifting random\n// number generator derived from ChaCha, a modern stream cipher.\n// https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n// Period: ~2^127\n// No systematic BigCrush failures reported.\nvar tychei = require('./lib/tychei');\n\n// The original ARC4-based prng included in this library.\n// Period: ~2^1600\nvar sr = require('./seedrandom');\n\nsr.alea = alea;\nsr.xor128 = xor128;\nsr.xorwow = xorwow;\nsr.xorshift7 = xorshift7;\nsr.xor4096 = xor4096;\nsr.tychei = tychei;\n\nmodule.exports = sr;\n","// A port of an algorithm by Johannes Baagøe <baagoe@baagoe.com>, 2010\n// http://baagoe.com/en/RandomMusings/javascript/\n// https://github.com/nquinlan/better-random-numbers-for-javascript-mirror\n// Original work is under MIT license -\n\n// Copyright (C) 2010 by Johannes Baagøe <baagoe@baagoe.org>\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in\n// all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n// THE SOFTWARE.\n\n\n\n(function(global, module, define) {\n\nfunction Alea(seed) {\n  var me = this, mash = Mash();\n\n  me.next = function() {\n    var t = 2091639 * me.s0 + me.c * 2.3283064365386963e-10; // 2^-32\n    me.s0 = me.s1;\n    me.s1 = me.s2;\n    return me.s2 = t - (me.c = t | 0);\n  };\n\n  // Apply the seeding algorithm from Baagoe.\n  me.c = 1;\n  me.s0 = mash(' ');\n  me.s1 = mash(' ');\n  me.s2 = mash(' ');\n  me.s0 -= mash(seed);\n  if (me.s0 < 0) { me.s0 += 1; }\n  me.s1 -= mash(seed);\n  if (me.s1 < 0) { me.s1 += 1; }\n  me.s2 -= mash(seed);\n  if (me.s2 < 0) { me.s2 += 1; }\n  mash = null;\n}\n\nfunction copy(f, t) {\n  t.c = f.c;\n  t.s0 = f.s0;\n  t.s1 = f.s1;\n  t.s2 = f.s2;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new Alea(seed),\n      state = opts && opts.state,\n      prng = xg.next;\n  prng.int32 = function() { return (xg.next() * 0x100000000) | 0; }\n  prng.double = function() {\n    return prng() + (prng() * 0x200000 | 0) * 1.1102230246251565e-16; // 2^-53\n  };\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nfunction Mash() {\n  var n = 0xefc8249d;\n\n  var mash = function(data) {\n    data = String(data);\n    for (var i = 0; i < data.length; i++) {\n      n += data.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n\n  return mash;\n}\n\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.alea = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"Tyche-i\" prng algorithm by\n// Samuel Neves and Filipe Araujo.\n// See https://eden.dei.uc.pt/~sneves/pubs/2011-snfa2.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var b = me.b, c = me.c, d = me.d, a = me.a;\n    b = (b << 25) ^ (b >>> 7) ^ c;\n    c = (c - d) | 0;\n    d = (d << 24) ^ (d >>> 8) ^ a;\n    a = (a - b) | 0;\n    me.b = b = (b << 20) ^ (b >>> 12) ^ c;\n    me.c = c = (c - d) | 0;\n    me.d = (d << 16) ^ (c >>> 16) ^ a;\n    return me.a = (a - b) | 0;\n  };\n\n  /* The following is non-inverted tyche, which has better internal\n   * bit diffusion, but which is about 25% slower than tyche-i in JS.\n  me.next = function() {\n    var a = me.a, b = me.b, c = me.c, d = me.d;\n    a = (me.a + me.b | 0) >>> 0;\n    d = me.d ^ a; d = d << 16 ^ d >>> 16;\n    c = me.c + d | 0;\n    b = me.b ^ c; b = b << 12 ^ d >>> 20;\n    me.a = a = a + b | 0;\n    d = d ^ a; me.d = d = d << 8 ^ d >>> 24;\n    me.c = c = c + d | 0;\n    b = b ^ c;\n    return me.b = (b << 7 ^ b >>> 25);\n  }\n  */\n\n  me.a = 0;\n  me.b = 0;\n  me.c = 2654435769 | 0;\n  me.d = 1367130551;\n\n  if (seed === Math.floor(seed)) {\n    // Integer seed.\n    me.a = (seed / 0x100000000) | 0;\n    me.b = seed | 0;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 20; k++) {\n    me.b ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.a = f.a;\n  t.b = f.b;\n  t.c = f.c;\n  t.d = f.d;\n  return t;\n};\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.tychei = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of the \"xor128\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n\n  // Set up generator function.\n  me.next = function() {\n    var t = me.x ^ (me.x << 11);\n    me.x = me.y;\n    me.y = me.z;\n    me.z = me.w;\n    return me.w ^= (me.w >>> 19) ^ t ^ (t >>> 8);\n  };\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor128 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","// A Javascript implementaion of Richard Brent's Xorgens xor4096 algorithm.\n//\n// This fast non-cryptographic random number generator is designed for\n// use in Monte-Carlo algorithms. It combines a long-period xorshift\n// generator with a Weyl generator, and it passes all common batteries\n// of stasticial tests for randomness while consuming only a few nanoseconds\n// for each prng generated.  For background on the generator, see Brent's\n// paper: \"Some long-period random number generators using shifts and xors.\"\n// http://arxiv.org/pdf/1004.3115v1.pdf\n//\n// Usage:\n//\n// var xor4096 = require('xor4096');\n// random = xor4096(1);                        // Seed with int32 or string.\n// assert.equal(random(), 0.1520436450538547); // (0, 1) range, 53 bits.\n// assert.equal(random.int32(), 1806534897);   // signed int32, 32 bits.\n//\n// For nonzero numeric keys, this impelementation provides a sequence\n// identical to that by Brent's xorgens 3 implementaion in C.  This\n// implementation also provides for initalizing the generator with\n// string seeds, or for saving and restoring the state of the generator.\n//\n// On Chrome, this prng benchmarks about 2.1 times slower than\n// Javascript's built-in Math.random().\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    var w = me.w,\n        X = me.X, i = me.i, t, v;\n    // Update Weyl generator.\n    me.w = w = (w + 0x61c88647) | 0;\n    // Update xor generator.\n    v = X[(i + 34) & 127];\n    t = X[i = ((i + 1) & 127)];\n    v ^= v << 13;\n    t ^= t << 17;\n    v ^= v >>> 15;\n    t ^= t >>> 12;\n    // Update Xor generator array state.\n    v = X[i] = v ^ t;\n    me.i = i;\n    // Result is the combination.\n    return (v + (w ^ (w >>> 16))) | 0;\n  };\n\n  function init(me, seed) {\n    var t, v, i, j, w, X = [], limit = 128;\n    if (seed === (seed | 0)) {\n      // Numeric seeds initialize v, which is used to generates X.\n      v = seed;\n      seed = null;\n    } else {\n      // String seeds are mixed into v and X one character at a time.\n      seed = seed + '\\0';\n      v = 0;\n      limit = Math.max(limit, seed.length);\n    }\n    // Initialize circular array and weyl value.\n    for (i = 0, j = -32; j < limit; ++j) {\n      // Put the unicode characters into the array, and shuffle them.\n      if (seed) v ^= seed.charCodeAt((j + 32) % seed.length);\n      // After 32 shuffles, take v as the starting w value.\n      if (j === 0) w = v;\n      v ^= v << 10;\n      v ^= v >>> 15;\n      v ^= v << 4;\n      v ^= v >>> 13;\n      if (j >= 0) {\n        w = (w + 0x61c88647) | 0;     // Weyl.\n        t = (X[j & 127] ^= (v + w));  // Combine xor and weyl to init array.\n        i = (0 == t) ? i + 1 : 0;     // Count zeroes.\n      }\n    }\n    // We have detected all zeroes; make the key nonzero.\n    if (i >= 128) {\n      X[(seed && seed.length || 0) & 127] = -1;\n    }\n    // Run the generator 512 times to further mix the state before using it.\n    // Factoring this as a function slows the main generator, so it is just\n    // unrolled here.  The weyl generator is not advanced while warming up.\n    i = 127;\n    for (j = 4 * 128; j > 0; --j) {\n      v = X[(i + 34) & 127];\n      t = X[i = ((i + 1) & 127)];\n      v ^= v << 13;\n      t ^= t << 17;\n      v ^= v >>> 15;\n      t ^= t >>> 12;\n      X[i] = v ^ t;\n    }\n    // Storing state as object members is faster than using closure variables.\n    me.w = w;\n    me.X = X;\n    me.i = i;\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.i = f.i;\n  t.w = f.w;\n  t.X = f.X.slice();\n  return t;\n};\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.X) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xor4096 = impl;\n}\n\n})(\n  this,                                     // window object or global\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n","// A Javascript implementaion of the \"xorshift7\" algorithm by\n// François Panneton and Pierre L'ecuyer:\n// \"On the Xorgshift Random Number Generators\"\n// http://saluc.engr.uconn.edu/refs/crypto/rng/panneton05onthexorshift.pdf\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this;\n\n  // Set up generator function.\n  me.next = function() {\n    // Update xor generator.\n    var X = me.x, i = me.i, t, v, w;\n    t = X[i]; t ^= (t >>> 7); v = t ^ (t << 24);\n    t = X[(i + 1) & 7]; v ^= t ^ (t >>> 10);\n    t = X[(i + 3) & 7]; v ^= t ^ (t >>> 3);\n    t = X[(i + 4) & 7]; v ^= t ^ (t << 7);\n    t = X[(i + 7) & 7]; t = t ^ (t << 13); v ^= t ^ (t << 9);\n    X[i] = v;\n    me.i = (i + 1) & 7;\n    return v;\n  };\n\n  function init(me, seed) {\n    var j, w, X = [];\n\n    if (seed === (seed | 0)) {\n      // Seed state array using a 32-bit integer.\n      w = X[0] = seed;\n    } else {\n      // Seed state using a string.\n      seed = '' + seed;\n      for (j = 0; j < seed.length; ++j) {\n        X[j & 7] = (X[j & 7] << 15) ^\n            (seed.charCodeAt(j) + X[(j + 1) & 7] << 13);\n      }\n    }\n    // Enforce an array length of 8, not all zeroes.\n    while (X.length < 8) X.push(0);\n    for (j = 0; j < 8 && X[j] === 0; ++j);\n    if (j == 8) w = X[7] = -1; else w = X[j];\n\n    me.x = X;\n    me.i = 0;\n\n    // Discard an initial 256 values.\n    for (j = 256; j > 0; --j) {\n      me.next();\n    }\n  }\n\n  init(me, seed);\n}\n\nfunction copy(f, t) {\n  t.x = f.x.slice();\n  t.i = f.i;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  if (seed == null) seed = +(new Date);\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (state.x) copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorshift7 = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n","// A Javascript implementaion of the \"xorwow\" prng algorithm by\n// George Marsaglia.  See http://www.jstatsoft.org/v08/i14/paper\n\n(function(global, module, define) {\n\nfunction XorGen(seed) {\n  var me = this, strseed = '';\n\n  // Set up generator function.\n  me.next = function() {\n    var t = (me.x ^ (me.x >>> 2));\n    me.x = me.y; me.y = me.z; me.z = me.w; me.w = me.v;\n    return (me.d = (me.d + 362437 | 0)) +\n       (me.v = (me.v ^ (me.v << 4)) ^ (t ^ (t << 1))) | 0;\n  };\n\n  me.x = 0;\n  me.y = 0;\n  me.z = 0;\n  me.w = 0;\n  me.v = 0;\n\n  if (seed === (seed | 0)) {\n    // Integer seed.\n    me.x = seed;\n  } else {\n    // String seed.\n    strseed += seed;\n  }\n\n  // Mix in string seed, then discard an initial batch of 64 values.\n  for (var k = 0; k < strseed.length + 64; k++) {\n    me.x ^= strseed.charCodeAt(k) | 0;\n    if (k == strseed.length) {\n      me.d = me.x << 10 ^ me.x >>> 4;\n    }\n    me.next();\n  }\n}\n\nfunction copy(f, t) {\n  t.x = f.x;\n  t.y = f.y;\n  t.z = f.z;\n  t.w = f.w;\n  t.v = f.v;\n  t.d = f.d;\n  return t;\n}\n\nfunction impl(seed, opts) {\n  var xg = new XorGen(seed),\n      state = opts && opts.state,\n      prng = function() { return (xg.next() >>> 0) / 0x100000000; };\n  prng.double = function() {\n    do {\n      var top = xg.next() >>> 11,\n          bot = (xg.next() >>> 0) / 0x100000000,\n          result = (top + bot) / (1 << 21);\n    } while (result === 0);\n    return result;\n  };\n  prng.int32 = xg.next;\n  prng.quick = prng;\n  if (state) {\n    if (typeof(state) == 'object') copy(state, xg);\n    prng.state = function() { return copy(xg, {}); }\n  }\n  return prng;\n}\n\nif (module && module.exports) {\n  module.exports = impl;\n} else if (define && define.amd) {\n  define(function() { return impl; });\n} else {\n  this.xorwow = impl;\n}\n\n})(\n  this,\n  (typeof module) == 'object' && module,    // present in node.js\n  (typeof define) == 'function' && define   // present with an AMD loader\n);\n\n\n","/*\nCopyright 2019 David Bau.\n\nPermission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n*/\n\n(function (global, pool, math) {\n//\n// The following constants are related to IEEE 754 limits.\n//\n\nvar width = 256,        // each RC4 output is 0 <= x < 256\n    chunks = 6,         // at least six RC4 outputs for each double\n    digits = 52,        // there are 52 significant digits in a double\n    rngname = 'random', // rngname: name for Math.random and Math.seedrandom\n    startdenom = math.pow(width, chunks),\n    significance = math.pow(2, digits),\n    overflow = significance * 2,\n    mask = width - 1,\n    nodecrypto;         // node.js crypto module, initialized at the bottom.\n\n//\n// seedrandom()\n// This is the seedrandom function described above.\n//\nfunction seedrandom(seed, options, callback) {\n  var key = [];\n  options = (options == true) ? { entropy: true } : (options || {});\n\n  // Flatten the seed string or build one from local entropy if needed.\n  var shortseed = mixkey(flatten(\n    options.entropy ? [seed, tostring(pool)] :\n    (seed == null) ? autoseed() : seed, 3), key);\n\n  // Use the seed to initialize an ARC4 generator.\n  var arc4 = new ARC4(key);\n\n  // This function returns a random double in [0, 1) that contains\n  // randomness in every bit of the mantissa of the IEEE 754 value.\n  var prng = function() {\n    var n = arc4.g(chunks),             // Start with a numerator n < 2 ^ 48\n        d = startdenom,                 //   and denominator d = 2 ^ 48.\n        x = 0;                          //   and no 'extra last byte'.\n    while (n < significance) {          // Fill up all significant digits by\n      n = (n + x) * width;              //   shifting numerator and\n      d *= width;                       //   denominator and generating a\n      x = arc4.g(1);                    //   new least-significant-byte.\n    }\n    while (n >= overflow) {             // To avoid rounding up, before adding\n      n /= 2;                           //   last byte, shift everything\n      d /= 2;                           //   right using integer math until\n      x >>>= 1;                         //   we have exactly the desired bits.\n    }\n    return (n + x) / d;                 // Form the number within [0, 1).\n  };\n\n  prng.int32 = function() { return arc4.g(4) | 0; }\n  prng.quick = function() { return arc4.g(4) / 0x100000000; }\n  prng.double = prng;\n\n  // Mix the randomness into accumulated entropy.\n  mixkey(tostring(arc4.S), pool);\n\n  // Calling convention: what to return as a function of prng, seed, is_math.\n  return (options.pass || callback ||\n      function(prng, seed, is_math_call, state) {\n        if (state) {\n          // Load the arc4 state from the given state if it has an S array.\n          if (state.S) { copy(state, arc4); }\n          // Only provide the .state method if requested via options.state.\n          prng.state = function() { return copy(arc4, {}); }\n        }\n\n        // If called as a method of Math (Math.seedrandom()), mutate\n        // Math.random because that is how seedrandom.js has worked since v1.0.\n        if (is_math_call) { math[rngname] = prng; return seed; }\n\n        // Otherwise, it is a newer calling convention, so return the\n        // prng directly.\n        else return prng;\n      })(\n  prng,\n  shortseed,\n  'global' in options ? options.global : (this == math),\n  options.state);\n}\n\n//\n// ARC4\n//\n// An ARC4 implementation.  The constructor takes a key in the form of\n// an array of at most (width) integers that should be 0 <= x < (width).\n//\n// The g(count) method returns a pseudorandom integer that concatenates\n// the next (count) outputs from ARC4.  Its return value is a number x\n// that is in the range 0 <= x < (width ^ count).\n//\nfunction ARC4(key) {\n  var t, keylen = key.length,\n      me = this, i = 0, j = me.i = me.j = 0, s = me.S = [];\n\n  // The empty key [] is treated as [0].\n  if (!keylen) { key = [keylen++]; }\n\n  // Set up S using the standard key scheduling algorithm.\n  while (i < width) {\n    s[i] = i++;\n  }\n  for (i = 0; i < width; i++) {\n    s[i] = s[j = mask & (j + key[i % keylen] + (t = s[i]))];\n    s[j] = t;\n  }\n\n  // The \"g\" method returns the next (count) outputs as one number.\n  (me.g = function(count) {\n    // Using instance members instead of closure state nearly doubles speed.\n    var t, r = 0,\n        i = me.i, j = me.j, s = me.S;\n    while (count--) {\n      t = s[i = mask & (i + 1)];\n      r = r * width + s[mask & ((s[i] = s[j = mask & (j + t)]) + (s[j] = t))];\n    }\n    me.i = i; me.j = j;\n    return r;\n    // For robust unpredictability, the function call below automatically\n    // discards an initial batch of values.  This is called RC4-drop[256].\n    // See http://google.com/search?q=rsa+fluhrer+response&btnI\n  })(width);\n}\n\n//\n// copy()\n// Copies internal state of ARC4 to or from a plain object.\n//\nfunction copy(f, t) {\n  t.i = f.i;\n  t.j = f.j;\n  t.S = f.S.slice();\n  return t;\n};\n\n//\n// flatten()\n// Converts an object tree to nested arrays of strings.\n//\nfunction flatten(obj, depth) {\n  var result = [], typ = (typeof obj), prop;\n  if (depth && typ == 'object') {\n    for (prop in obj) {\n      try { result.push(flatten(obj[prop], depth - 1)); } catch (e) {}\n    }\n  }\n  return (result.length ? result : typ == 'string' ? obj : obj + '\\0');\n}\n\n//\n// mixkey()\n// Mixes a string seed into a key that is an array of integers, and\n// returns a shortened string seed that is equivalent to the result key.\n//\nfunction mixkey(seed, key) {\n  var stringseed = seed + '', smear, j = 0;\n  while (j < stringseed.length) {\n    key[mask & j] =\n      mask & ((smear ^= key[mask & j] * 19) + stringseed.charCodeAt(j++));\n  }\n  return tostring(key);\n}\n\n//\n// autoseed()\n// Returns an object for autoseeding, using window.crypto and Node crypto\n// module if available.\n//\nfunction autoseed() {\n  try {\n    var out;\n    if (nodecrypto && (out = nodecrypto.randomBytes)) {\n      // The use of 'out' to remember randomBytes makes tight minified code.\n      out = out(width);\n    } else {\n      out = new Uint8Array(width);\n      (global.crypto || global.msCrypto).getRandomValues(out);\n    }\n    return tostring(out);\n  } catch (e) {\n    var browser = global.navigator,\n        plugins = browser && browser.plugins;\n    return [+new Date, global, plugins, global.screen, tostring(pool)];\n  }\n}\n\n//\n// tostring()\n// Converts an array of charcodes to a string\n//\nfunction tostring(a) {\n  return String.fromCharCode.apply(0, a);\n}\n\n//\n// When seedrandom.js is loaded, we immediately mix a few bits\n// from the built-in RNG into the entropy pool.  Because we do\n// not want to interfere with deterministic PRNG state later,\n// seedrandom will not call math.random on its own again after\n// initialization.\n//\nmixkey(math.random(), pool);\n\n//\n// Nodejs and AMD support: export the implementation as a module using\n// either convention.\n//\nif ((typeof module) == 'object' && module.exports) {\n  module.exports = seedrandom;\n  // When in node.js, try using crypto package for autoseeding.\n  try {\n    nodecrypto = require('crypto');\n  } catch (ex) {}\n} else if ((typeof define) == 'function' && define.amd) {\n  define(function() { return seedrandom; });\n} else {\n  // When included as a plain script, set up Math.seedrandom global.\n  math['seed' + rngname] = seedrandom;\n}\n\n\n// End anonymous scope, and pass initial values.\n})(\n  // global: `self` in browsers (including strict mode and web workers),\n  // otherwise `this` in Node and other environments\n  (typeof self !== 'undefined') ? self : this,\n  [],     // pool: entropy pool starts empty\n  Math    // math: package containing random, pow, and seedrandom\n);\n","'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar TinyEmitter = require('./tiny-emitter');\n\nvar MESSAGE_RESULT = 0;\nvar MESSAGE_EVENT = 1;\n\nvar RESULT_ERROR = 0;\nvar RESULT_SUCCESS = 1;\n\nvar DEFAULT_HANDLER = 'main';\n\nvar isPromise = function isPromise(o) {\n  return (typeof o === 'undefined' ? 'undefined' : _typeof(o)) === 'object' && typeof o.then === 'function' && typeof o.catch === 'function';\n};\n\nfunction RegisterPromise(fn) {\n  var handlers = _defineProperty({}, DEFAULT_HANDLER, fn);\n  var sendPostMessage = self.postMessage.bind(self);\n\n  var server = new (function (_TinyEmitter) {\n    _inherits(WorkerRegister, _TinyEmitter);\n\n    function WorkerRegister() {\n      _classCallCheck(this, WorkerRegister);\n\n      return _possibleConstructorReturn(this, (WorkerRegister.__proto__ || Object.getPrototypeOf(WorkerRegister)).apply(this, arguments));\n    }\n\n    _createClass(WorkerRegister, [{\n      key: 'emit',\n      value: function emit(eventName) {\n        for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          args[_key - 1] = arguments[_key];\n        }\n\n        sendPostMessage({ eventName: eventName, args: args });\n        return this;\n      }\n    }, {\n      key: 'emitLocally',\n      value: function emitLocally(eventName) {\n        var _get2;\n\n        for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n          args[_key2 - 1] = arguments[_key2];\n        }\n\n        (_get2 = _get(WorkerRegister.prototype.__proto__ || Object.getPrototypeOf(WorkerRegister.prototype), 'emit', this)).call.apply(_get2, [this, eventName].concat(args));\n      }\n    }, {\n      key: 'operation',\n      value: function operation(name, handler) {\n        handlers[name] = handler;\n        return this;\n      }\n    }]);\n\n    return WorkerRegister;\n  }(TinyEmitter))();\n\n  var run = function run(messageId, payload, handlerName) {\n\n    var onSuccess = function onSuccess(result) {\n      if (result && result instanceof TransferableResponse) {\n        sendResult(messageId, RESULT_SUCCESS, result.payload, result.transferable);\n      } else {\n        sendResult(messageId, RESULT_SUCCESS, result);\n      }\n    };\n\n    var onError = function onError(e) {\n      sendResult(messageId, RESULT_ERROR, {\n        message: e.message,\n        stack: e.stack\n      });\n    };\n\n    try {\n      var result = runFn(messageId, payload, handlerName);\n      if (isPromise(result)) {\n        result.then(onSuccess).catch(onError);\n      } else {\n        onSuccess(result);\n      }\n    } catch (e) {\n      onError(e);\n    }\n  };\n\n  var runFn = function runFn(messageId, payload, handlerName) {\n    var handler = handlers[handlerName || DEFAULT_HANDLER];\n    if (!handler) throw new Error('Not found handler for this request');\n\n    return handler(payload, sendEvent.bind(null, messageId));\n  };\n\n  var sendResult = function sendResult(messageId, success, payload) {\n    var transferable = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : [];\n\n    sendPostMessage([MESSAGE_RESULT, messageId, success, payload], transferable);\n  };\n\n  var sendEvent = function sendEvent(messageId, eventName, payload) {\n    if (!eventName) throw new Error('eventName is required');\n\n    if (typeof eventName !== 'string') throw new Error('eventName should be string');\n\n    sendPostMessage([MESSAGE_EVENT, messageId, eventName, payload]);\n  };\n\n  self.addEventListener('message', function (_ref) {\n    var data = _ref.data;\n\n    if (Array.isArray(data)) {\n      run.apply(undefined, _toConsumableArray(data));\n    } else if (data && data.eventName) {\n      server.emitLocally.apply(server, [data.eventName].concat(_toConsumableArray(data.args)));\n    }\n  });\n\n  return server;\n}\n\nvar TransferableResponse = function TransferableResponse(payload, transferable) {\n  _classCallCheck(this, TransferableResponse);\n\n  this.payload = payload;\n  this.transferable = transferable;\n};\n\nmodule.exports = RegisterPromise;\nmodule.exports.TransferableResponse = TransferableResponse;","import ImageType from './ImageType.js';\nimport setMatrixElement from './setMatrixElement.js';\nclass Image {\n    constructor(imageType = new ImageType()) {\n        this.imageType = imageType;\n        this.name = 'image';\n        const dimension = imageType.dimension;\n        this.origin = new Array(dimension);\n        this.origin.fill(0.0);\n        this.spacing = new Array(dimension);\n        this.spacing.fill(1.0);\n        this.direction = new Float64Array(dimension * dimension);\n        this.direction.fill(0.0);\n        for (let ii = 0; ii < dimension; ii++) {\n            setMatrixElement(this.direction, dimension, ii, ii, 1.0);\n        }\n        this.size = new Array(dimension);\n        this.size.fill(0);\n        this.metadata = new Map();\n        this.data = null;\n    }\n}\nexport default Image;\n//# sourceMappingURL=Image.js.map","import IntTypes from './IntTypes.js';\nimport PixelTypes from './PixelTypes.js';\nclass ImageType {\n    constructor(dimension = 2, componentType = IntTypes.UInt8, pixelType = PixelTypes.Scalar, components = 1) {\n        this.dimension = dimension;\n        this.componentType = componentType;\n        this.pixelType = pixelType;\n        this.components = components;\n    }\n}\nexport default ImageType;\n//# sourceMappingURL=ImageType.js.map","const PixelTypes = {\n    Unknown: 'Unknown',\n    Scalar: 'Scalar',\n    RGB: 'RGB',\n    RGBA: 'RGBA',\n    Offset: 'Offset',\n    Vector: 'Vector',\n    Point: 'Point',\n    CovariantVector: 'CovariantVector',\n    SymmetricSecondRankTensor: 'SymmetricSecondRankTensor',\n    DiffusionTensor3D: 'DiffusionTensor3D',\n    Complex: 'Complex',\n    FixedArray: 'FixedArray',\n    Array: 'Array',\n    Matrix: 'Matrix',\n    VariableLengthVector: 'VariableLengthVector',\n    VariableSizeMatrix: 'VariableSizeMatrix'\n};\nexport default PixelTypes;\n//# sourceMappingURL=PixelTypes.js.map","import Image from './Image.js';\nfunction copyImage(image) {\n    const copy = new Image(image.imageType);\n    copy.name = image.name;\n    copy.origin = Array.from(image.origin);\n    copy.spacing = Array.from(image.spacing);\n    copy.direction = image.direction.slice();\n    copy.size = Array.from(image.size);\n    if (image.data !== null) {\n        const CTor = image.data.constructor;\n        copy.data = new CTor(image.data.length);\n        if (copy.data != null) {\n            // @ts-expect-error: error TS2345: Argument of type 'TypedArray' is not assignable to parameter of type 'ArrayLike<number> & ArrayLike<bigint>'\n            copy.data.set(image.data, 0);\n        }\n    }\n    return copy;\n}\nexport default copyImage;\n//# sourceMappingURL=copyImage.js.map","import axios from 'axios';\nimport WebworkerPromise from 'webworker-promise';\nimport config from '../itkConfig.js';\n// Internal function to create a web worker promise\nasync function createWebWorkerPromise(existingWorker, pipelineWorkerUrl) {\n    let workerPromise;\n    if (existingWorker != null) {\n        // See if we have a worker promise attached the worker, if so reuse it. This ensures\n        // that we can safely reuse the worker without issues.\n        const itkWebWorker = existingWorker;\n        if (itkWebWorker.workerPromise !== undefined) {\n            workerPromise = itkWebWorker.workerPromise;\n        }\n        else {\n            workerPromise = new WebworkerPromise(existingWorker);\n        }\n        return await Promise.resolve({ webworkerPromise: workerPromise, worker: existingWorker });\n    }\n    const workerUrl = typeof pipelineWorkerUrl === 'undefined' ? config.pipelineWorkerUrl : pipelineWorkerUrl;\n    let worker = null;\n    // @ts-expect-error: error TS2339: Property 'webWorkersUrl' does not exist on type '{ pipelineWorkerUrl: string; imageIOUrl: string; meshIOUrl: string; pipelinesUrl: string; }\n    const webWorkersUrl = config.webWorkersUrl;\n    if (typeof webWorkersUrl !== 'undefined') {\n        console.warn('itkConfig webWorkersUrl is deprecated. Please use pipelineWorkerUrl with the full path to the pipeline worker.');\n        const min = 'min-';\n        // debug\n        // const min = ''\n        const webWorkerString = webWorkersUrl;\n        if (webWorkerString.startsWith('http')) {\n            const response = await axios.get(`${webWorkerString}/${min}bundles/pipeline.worker.js`, { responseType: 'blob' });\n            worker = new Worker(URL.createObjectURL(response.data));\n        }\n        else {\n            worker = new Worker(`${webWorkerString}/${min}bundles/pipeline.worker.js`);\n        }\n    }\n    else if (workerUrl === null) {\n        // Use the version built with the bundler\n        //\n        // Bundlers, e.g. WebPack, see these paths at build time\n        //\n        // importScripts / UMD is required over dynamic ESM import until Firefox\n        // adds worker dynamic import support:\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1540913\n        worker = new Worker(new URL('../web-workers/pipeline.worker.js', import.meta.url));\n    }\n    else {\n        if (workerUrl.startsWith('http')) {\n            const response = await axios.get(workerUrl, { responseType: 'blob' });\n            worker = new Worker(URL.createObjectURL(response.data));\n        }\n        else {\n            worker = new Worker(workerUrl);\n        }\n    }\n    const webworkerPromise = new WebworkerPromise(worker);\n    // Attach the worker promise to the worker, so if the worker is reused we can\n    // also reuse the the worker promise.\n    const itkWebWorker = worker;\n    itkWebWorker.workerPromise = webworkerPromise;\n    return { webworkerPromise, worker: itkWebWorker };\n}\nexport default createWebWorkerPromise;\n//# sourceMappingURL=createWebWorkerPromise.js.map","import copyImage from './copyImage.js';\nconst haveSharedArrayBuffer = typeof globalThis.SharedArrayBuffer === 'function';\n/** If SharedArrayBuffer's are available, ensure an itk.Image's buffer is a\n * SharedArrayBuffer. If SharedArrayBuffer's are not available, return a copy.\n * */\nfunction imageSharedBufferOrCopy(image) {\n    if (image.data === null) {\n        return image;\n    }\n    if (haveSharedArrayBuffer) {\n        if (image.data.buffer instanceof SharedArrayBuffer) { // eslint-disable-line\n            return image;\n        }\n        const sharedBuffer = new SharedArrayBuffer(image.data.buffer.byteLength); // eslint-disable-line\n        const CTor = image.data.constructor;\n        const sharedTypedArray = new CTor(sharedBuffer);\n        if (sharedTypedArray !== null) {\n            // @ts-expect-error: error TS2345: Argument of type 'TypedArray' is not assignable to parameter of type 'ArrayLike<number> & ArrayLike<bigint>'.\n            sharedTypedArray.set(image.data, 0);\n        }\n        image.data = sharedTypedArray;\n        return image;\n    }\n    else {\n        return copyImage(image);\n    }\n}\nexport default imageSharedBufferOrCopy;\n//# sourceMappingURL=imageSharedBufferOrCopy.js.map","import axios from 'axios';\nasync function loadEmscriptenModuleMainThread(moduleRelativePathOrURL, baseUrl) {\n    let modulePrefix = 'unknown';\n    if (typeof moduleRelativePathOrURL !== 'string') {\n        modulePrefix = moduleRelativePathOrURL.href;\n    }\n    else if (moduleRelativePathOrURL.startsWith('http')) {\n        modulePrefix = moduleRelativePathOrURL;\n    }\n    else {\n        modulePrefix = `${baseUrl}/${moduleRelativePathOrURL}`;\n    }\n    if (modulePrefix.endsWith('.js')) {\n        modulePrefix = modulePrefix.substring(0, modulePrefix.length - 3);\n    }\n    if (modulePrefix.endsWith('.wasm')) {\n        modulePrefix = modulePrefix.substring(0, modulePrefix.length - 5);\n    }\n    const wasmBinaryPath = `${modulePrefix}.wasm`;\n    const response = await axios.get(wasmBinaryPath, { responseType: 'arraybuffer' });\n    const wasmBinary = response.data;\n    const fullModulePath = `${modulePrefix}.js`;\n    const result = await import(/* webpackIgnore: true */ /* @vite-ignore */ fullModulePath);\n    const instantiated = result.default({ wasmBinary });\n    return instantiated;\n}\nexport default loadEmscriptenModuleMainThread;\n//# sourceMappingURL=loadEmscriptenModuleMainThread.js.map","function setMatrixElement(matrixData, columns, row, column, value) {\n    matrixData[column + row * columns] = value;\n}\nexport default setMatrixElement;\n//# sourceMappingURL=setMatrixElement.js.map","import Image from './Image.js';\n/** Join an array of sequential image slabs into a single image */\nfunction stackImages(images) {\n    if (images.length < 1) {\n        throw Error('At least one images is required.');\n    }\n    const firstImage = images[0];\n    if (firstImage.data === null) {\n        throw Error('Image data is null.');\n    }\n    const result = new Image(firstImage.imageType);\n    result.origin = Array.from(firstImage.origin);\n    result.spacing = Array.from(firstImage.spacing);\n    const dimension = result.imageType.dimension;\n    result.direction = firstImage.direction.slice();\n    const stackOn = dimension - 1;\n    result.size = Array.from(firstImage.size);\n    const stackedSize = images.reduce((accumulator, currentValue) => {\n        return accumulator + currentValue.size[stackOn];\n    }, 0);\n    result.size[stackOn] = stackedSize;\n    const dataSize = result.size.reduce((accumulator, currentValue) => { return accumulator * currentValue; }, 1) * result.imageType.components;\n    const CTor = firstImage.data.constructor;\n    result.data = new CTor(dataSize);\n    let offsetBase = result.imageType.components;\n    for (let subIndex = 0; subIndex < result.size.length - 1; subIndex++) {\n        offsetBase *= result.size[subIndex];\n    }\n    let stackIndex = 0;\n    if (result.data != null) {\n        for (let index = 0; index < images.length; index++) {\n            // @ts-expect-error: error TS2345: Argument of type 'TypedArray' is not assignable to parameter of type 'ArrayLike<number> & ArrayLike<bigint>'.\n            result.data.set(images[index].data, offsetBase * stackIndex);\n            stackIndex += images[index].size[stackOn];\n        }\n    }\n    else {\n        throw Error('Could not create result image data.');\n    }\n    return result;\n}\nexport default stackImages;\n//# sourceMappingURL=stackImages.js.map","import createWebWorkerPromise from '../core/createWebWorkerPromise.js';\nimport loadEmscriptenModuleMainThread from '../core/internal/loadEmscriptenModuleMainThread.js';\nimport config from '../itkConfig.js';\nimport IOTypes from '../core/IOTypes.js';\nimport InterfaceTypes from '../core/InterfaceTypes.js';\nimport runPipelineEmscripten from './internal/runPipelineEmscripten.js';\nimport getTransferable from '../core/getTransferable.js';\n// To cache loaded pipeline modules\nconst pipelineToModule = new Map();\nasync function loadPipelineModule(pipelinePath) {\n    let moduleRelativePathOrURL = pipelinePath;\n    let pipeline = pipelinePath;\n    if (typeof pipelinePath !== 'string') {\n        moduleRelativePathOrURL = new URL(pipelinePath.href);\n        pipeline = moduleRelativePathOrURL.href;\n    }\n    if (pipelineToModule.has(pipeline)) {\n        return pipelineToModule.get(pipeline);\n    }\n    else {\n        const pipelineModule = (await loadEmscriptenModuleMainThread(pipelinePath, config.pipelinesUrl));\n        pipelineToModule.set(pipeline, pipelineModule);\n        return pipelineModule;\n    }\n}\nasync function runPipeline(webWorker, pipelinePath, args, outputs, inputs, options) {\n    var _a;\n    if (webWorker === false) {\n        const pipelineModule = await loadPipelineModule(pipelinePath.toString());\n        const result = runPipelineEmscripten(pipelineModule, args, outputs, inputs);\n        return result;\n    }\n    let worker = webWorker;\n    const pipelineWorkerUrl = options === null || options === void 0 ? void 0 : options.pipelineWorkerUrl;\n    const pipelineWorkerUrlString = typeof pipelineWorkerUrl !== 'string' && typeof (pipelineWorkerUrl === null || pipelineWorkerUrl === void 0 ? void 0 : pipelineWorkerUrl.href) !== 'undefined' ? pipelineWorkerUrl.href : pipelineWorkerUrl;\n    const { webworkerPromise, worker: usedWorker } = await createWebWorkerPromise(worker, pipelineWorkerUrlString);\n    worker = usedWorker;\n    const transferables = [];\n    if (!(inputs == null) && inputs.length > 0) {\n        inputs.forEach(function (input) {\n            if (input.type === InterfaceTypes.BinaryStream) {\n                // Binary data\n                const dataArray = input.data.data;\n                const transferable = getTransferable(dataArray);\n                if (transferable != null) {\n                    transferables.push(transferable);\n                }\n            }\n            else if (input.type === InterfaceTypes.BinaryFile) {\n                // Binary data\n                const dataArray = input.data.data;\n                const transferable = getTransferable(dataArray);\n                if (transferable != null) {\n                    transferables.push(transferable);\n                }\n            }\n            else if (input.type === InterfaceTypes.Image) {\n                // Image data\n                const image = input.data;\n                if (image.data === null) {\n                    throw Error('image data cannot be null');\n                }\n                let transferable = getTransferable(image.data);\n                if (transferable != null) {\n                    transferables.push(transferable);\n                }\n                transferable = getTransferable(image.direction);\n                if (transferable != null) {\n                    transferables.push(transferable);\n                }\n            }\n            else if (input.type === IOTypes.Binary) {\n                // Binary data\n                const transferable = getTransferable(input.data);\n                if (transferable != null) {\n                    transferables.push(transferable);\n                }\n            }\n            else if (input.type === IOTypes.Image) {\n                // Image data\n                const image = input.data;\n                if (image.data === null) {\n                    throw Error('image data cannot be null');\n                }\n                let transferable = getTransferable(image.data);\n                if (transferable != null) {\n                    transferables.push(transferable);\n                }\n                transferable = getTransferable(image.direction);\n                if (transferable != null) {\n                    transferables.push(transferable);\n                }\n            }\n            else if (input.type === IOTypes.Mesh) {\n                // Mesh data\n                const mesh = input.data;\n                if (mesh.points != null) {\n                    const transferable = getTransferable(mesh.points);\n                    if (transferable != null) {\n                        transferables.push(transferable);\n                    }\n                }\n                if (mesh.pointData != null) {\n                    const transferable = getTransferable(mesh.pointData);\n                    if (transferable != null) {\n                        transferables.push(transferable);\n                    }\n                }\n                if (mesh.cells != null) {\n                    const transferable = getTransferable(mesh.cells);\n                    if (transferable != null) {\n                        transferables.push(transferable);\n                    }\n                }\n                if (mesh.cellData != null) {\n                    const transferable = getTransferable(mesh.cellData);\n                    if (transferable != null) {\n                        transferables.push(transferable);\n                    }\n                }\n            }\n        });\n    }\n    const pipelineBaseUrl = (_a = options === null || options === void 0 ? void 0 : options.pipelineBaseUrl) !== null && _a !== void 0 ? _a : 'pipelinesUrl';\n    const pipelineBaseUrlString = typeof pipelineBaseUrl !== 'string' && typeof (pipelineBaseUrl === null || pipelineBaseUrl === void 0 ? void 0 : pipelineBaseUrl.href) !== 'undefined' ? pipelineBaseUrl.href : pipelineBaseUrl;\n    const result = await webworkerPromise.postMessage({\n        operation: 'runPipeline',\n        config: config,\n        pipelinePath: pipelinePath.toString(),\n        pipelineBaseUrl: pipelineBaseUrlString,\n        args,\n        outputs,\n        inputs\n    }, transferables);\n    return {\n        returnValue: result.returnValue,\n        stdout: result.stdout,\n        stderr: result.stderr,\n        outputs: result.outputs,\n        webWorker: worker\n    };\n}\nexport default runPipeline;\n//# sourceMappingURL=runPipeline.js.map"],"names":["extractCellSizes","cellArray","currentIdx","filter","value","index","getNumberOfCells","cellId","cellArrayIndex","length","STATIC","vtkCellArray","publicAPI","model","classHierarchy","push","superClass","recompute","undefined","numberOfCells","cellSizes","getData","getCellSizes","resize","requestedNumTuples","oldNumTuples","getNumberOfTuples","newNumTuples","setData","typedArray","getCell","loc","cellLoc","numberOfPoints","values","subarray","insertNextCell","cellPointIds","insertNextTuples","defaultValues","initialValues","empty","numberOfComponents","dataType","VtkDataTypes","extend","vtkDataArray","newInstance","macro","ClassHierarchy","_inherits","i","arguments","this","includes","_get","Array","VOID","CHAR","SIGNED_CHAR","UNSIGNED_CHAR","SHORT","UNSIGNED_SHORT","INT","UNSIGNED_INT","FLOAT","DOUBLE","DefaultDataType","DataTypeByteSize","Int8Array","Uint8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","vtkErrorMacro","fastComputeRange","arr","offset","min","max","x","len","Number","MAX_VALUE","computeRange","component","size","numberOfValues","data","j","nextJ","_i","ensureRangeSize","rangeArray","ranges","getDataType","Object","prototype","toString","call","slice","createRangeHelper","count","sum","add","get","mean","getRange","getMaxNorm","normArray","numComps","getNumberOfComponents","maxNorm","tuple","getTuple","norm","vtkMath","dataChange","modified","curNumTuples","oldValues","set","newSize","initialize","getElementComponentSize","BYTES_PER_ELEMENT","getComponent","tupleIdx","compIdx","setComponent","getValue","valueIdx","idx","comp","setValue","componentIndex","rangeIdx","range","rangeTuple","setRange","rangeValue","setTuple","setTuples","tuples","last","Math","insertTuple","insertTuples","end","insertNextTuple","tupleToFill","getTuples","fromId","toId","from","to","getTupleLocation","getNumberOfValues","newClone","name","getName","getMTime","getState","deleted","jsonArchive","vtkClass","getClassName","buffer","keys","forEach","keyName","sortedObj","sort","mtime","deepCopy","other","shallowCopy","interpolateTuple","source1","source1Idx","source2","source2Idx","t","tuple1","tuple2","out","DEFAULT_VALUES","Constants","assign","TypeError","isArray","IDENTITY","IDENTITY_3X3","EPSILON","VTK_SMALL_NUMBER","vtkWarningMacro","notImplemented","method","createArray","res","a","b","subtract","multiplyAccumulate","scalar","dot","y","cross","Zx","Zy","Zz","n","abs","sqrt","normalize","den","distance2BetweenPoints","determinant2x2","args","NaN","roundNumber","num","digits","round","split","sig","roundVector","vector","solveLinearSystem","A","det","k","largest","temp1","temp2","maxI","scale","luFactorLinearSystem","ii","luSolveLinearSystem","uninitializeBounds","bounds","clampValue","minValue","maxValue","clampVector","minVector","maxVector","floor","ceil","isFinite","isNaN","INVALID_BOUNDS","vtkPoints","getNumberOfPoints","setNumberOfPoints","nbPoints","dimension","setNumberOfComponents","setPoint","xyz","getPoint","insertNextPoint","z","getBounds","xRange","yRange","zRange","computeBounds","INIT_BOUNDS","equals","isValid","setBounds","otherBounds","reset","addPoint","xMin","xMax","yMin","yMax","zMin","zMax","addPoints","points","addBounds","_xMin","_xMax","_yMin","_yMax","_zMin","_zMax","setMinPoint","setMaxPoint","inflate","delta","sx","sy","sz","getCenter","getLength","getLengths","getXRange","getYRange","getZRange","getMaxLength","l","getDiagonalLength","getMinPoint","getMaxPoint","oppositeSign","getCorners","corners","ix","iy","iz","computeCornerPoints","point1","point2","transformBounds","transform","vec3","computeScale3","scale3","computeLocalBounds","u","v","w","concat","pointsData","point","du","dv","dw","intersectBox","origin","dir","coord","tolerance","inside","quadrant","whichPlane","maxT","candidatePlane","intersectPlane","normal","p","d","sign","firstOne","vtkPlane","intersect","bBounds","intersection","newBounds","intersects","containsPoint","cutWithPlane","ti","bound","BoundingBox","refBounds","_classCallCheck","_createClass","scaleAboutCenter","center","contains","vtkCell","pointIdsList","pointsIds","triangleData","pointId","pointOffset","trianglePointOffset","getLength2","diff","getParametricDistance","pcoords","pDist","pDistMax","cell","getCellDimension","intersectWithLine","p1","p2","tol","subId","evaluatePosition","closestPoint","dist2","weights","vtkCellLinks","buildLinks","numPts","getPoints","numCells","linkLoc","isA","getCellPoints","cellPointId","incrementLinkCount","allocateLinks","maxId","insertCellReference","_loop","getPointsIds","_loop2","allocate","numLinks","ext","array","fill","map","ncells","cells","getLink","ptId","getNcells","getCells","insertNextCellReference","deletePoint","removeCellReference","addCellReference","resizeCellList","squeeze","src","pos","CellType","VTK_EMPTY_CELL","VTK_VERTEX","VTK_POLY_VERTEX","VTK_LINE","VTK_POLY_LINE","VTK_TRIANGLE","VTK_TRIANGLE_STRIP","VTK_POLYGON","VTK_PIXEL","VTK_QUAD","VTK_TETRA","VTK_VOXEL","VTK_HEXAHEDRON","VTK_WEDGE","VTK_PYRAMID","VTK_PENTAGONAL_PRISM","VTK_HEXAGONAL_PRISM","VTK_QUADRATIC_EDGE","VTK_QUADRATIC_TRIANGLE","VTK_QUADRATIC_QUAD","VTK_QUADRATIC_POLYGON","VTK_QUADRATIC_TETRA","VTK_QUADRATIC_HEXAHEDRON","VTK_QUADRATIC_WEDGE","VTK_QUADRATIC_PYRAMID","VTK_BIQUADRATIC_QUAD","VTK_TRIQUADRATIC_HEXAHEDRON","VTK_QUADRATIC_LINEAR_QUAD","VTK_QUADRATIC_LINEAR_WEDGE","VTK_BIQUADRATIC_QUADRATIC_WEDGE","VTK_BIQUADRATIC_QUADRATIC_HEXAHEDRON","VTK_BIQUADRATIC_TRIANGLE","VTK_CUBIC_LINE","VTK_CONVEX_POINT_SET","VTK_POLYHEDRON","VTK_PARAMETRIC_CURVE","VTK_PARAMETRIC_SURFACE","VTK_PARAMETRIC_TRI_SURFACE","VTK_PARAMETRIC_QUAD_SURFACE","VTK_PARAMETRIC_TETRA_REGION","VTK_PARAMETRIC_HEX_REGION","VTK_HIGHER_ORDER_EDGE","VTK_HIGHER_ORDER_TRIANGLE","VTK_HIGHER_ORDER_QUAD","VTK_HIGHER_ORDER_POLYGON","VTK_HIGHER_ORDER_TETRAHEDRON","VTK_HIGHER_ORDER_WEDGE","VTK_HIGHER_ORDER_PYRAMID","VTK_HIGHER_ORDER_HEXAHEDRON","VTK_LAGRANGE_CURVE","VTK_LAGRANGE_TRIANGLE","VTK_LAGRANGE_QUADRILATERAL","VTK_LAGRANGE_TETRAHEDRON","VTK_LAGRANGE_HEXAHEDRON","VTK_LAGRANGE_WEDGE","VTK_LAGRANGE_PYRAMID","VTK_NUMBER_OF_CELL_TYPES","CellTypesStrings","getClassNameFromTypeId","typeId","getTypeIdFromClassName","cellTypeString","isLinear","type","hasSubCells","cellType","vtkCellTypes","typeArray","locationArray","insertCell","setCellTypes","cellTypes","cellLocations","getCellLocation","deleteCell","getNumberOfTypes","isType","numTypes","getCellType","insertNextType","getSize","getExtend","getTypeArray","getLocationArray","getMaxId","FieldDataTypes","UNIFORM","DATA_OBJECT_FIELD","COORDINATE","POINT_DATA","POINT","POINT_FIELD_DATA","CELL","CELL_FIELD_DATA","VERTEX","VERTEX_FIELD_DATA","EDGE","EDGE_FIELD_DATA","ROW","ROW_DATA","FieldAssociations","FIELD_ASSOCIATION_POINTS","FIELD_ASSOCIATION_CELLS","FIELD_ASSOCIATION_NONE","FIELD_ASSOCIATION_POINTS_THEN_CELLS","FIELD_ASSOCIATION_VERTICES","FIELD_ASSOCIATION_EDGES","FIELD_ASSOCIATION_ROWS","NUMBER_OF_ASSOCIATIONS","DATASET_FIELDS","vtkDataSet","fieldName","vtk","vtkDataSetAttributes","superShallowCopy","debug","getReferenceByName","AttributeCopyOperations","COPYTUPLE","INTERPOLATE","PASSDATA","ALLCOPY","AttributeLimitTypes","MAX","EXACT","NOLIMIT","AttributeTypes","SCALARS","VECTORS","NORMALS","TCOORDS","TENSORS","GLOBALIDS","PEDIGREEIDS","EDGEFLAG","NUM_ATTRIBUTES","CellGhostTypes","DUPLICATECELL","HIGHCONNECTIVITYCELL","LOWCONNECTIVITYCELL","REFINEDCELL","EXTERIORCELL","HIDDENCELL","DesiredOutputPrecision","DEFAULT","SINGLE","PointGhostTypes","DUPLICATEPOINT","HIDDENPOINT","ghostArrayName","vtkFieldData","superGetState","arrays","item","initializeFields","copyAllOn","clearFieldFlags","copyFieldFlags","copyStructure","getCopyFieldFlags","getNumberOfArrays","getNumberOfActiveArrays","addArray","getArrayWithIndex","removeAllArrays","removeArray","arrayName","entry","removeArrayByIndex","arrayIdx","getArrays","getArray","arraySpec","getArrayByIndex","getArrayByName","reduce","hasArray","getArrayName","getFlag","passData","copyFlag","doCopyAllOff","destArr","tId","getAttributes","attrType","setAttribute","ncomps","interpolateData","fromId1","fromId2","copyFieldOn","copyFieldOff","doCopyAllOn","copyAllOff","arrNew","copyFlags","result","attrTypes","cleanAttributeType","attType","cleanAttType","find","ee","toUpperCase","toLowerCase","checkNumberOfComponents","uncleanAttType","currentAttribute","setActiveAttributeByName","setActiveAttributeByIndex","getActiveAttribute","activeVal","da","copyAttributeFlags","initializeAttributeCopyFlags","op","attCopyOp","ty","dataArrays","ref","activeScalars","activeVectors","activeTensors","activeNormals","activeTCoords","activeGlobalIds","activePedigreeIds","ITKJSPixelTypes","Unknown","Scalar","RGB","RGBA","Offset","Vector","Point","CovariantVector","SymmetricSecondRankTensor","DiffusionTensor3D","Complex","FixedArray","Matrix","VariableLengthVector","VariableSizeMatrix","ITKWASMPixelTypes","vtkArrayTypeToItkComponentType","Map","itkComponentTypeToVtkArrayType","convertItkToVtkImage","itkImage","options","vtkImage","spacing","dimensions","direction","isITKWasm","ITKPixelTypes","imageType","col","imageData","vtkImageData","pointData","scalarArrayName","components","setDirection","setDimensions","getPointData","setScalars","pixelType","setVectors","setTensors","convertVtkToItkImage","copyData","componentType","getOrigin","getSpacing","getDimensions","getDirection","idy","vtkArray","getTensors","getVectors","getScalars","convertItkToVtkPolyData","itkPolyData","pointDataArrays","pointDataName","polyDataType","pointPixelComponents","pointPixelComponentType","cellDataArrays","cellData","cellDataName","vtkPolyDataModel","verts","verticesBufferSize","vertices","lines","linesBufferSize","polys","polygonsBufferSize","polygons","strips","triangleStripsBufferSize","triangleStrips","polyData","vtkPolyData","pd","cd","getCellData","pointPixelType","cellPixelType","convertVtkToItkPolyData","cellPixelComponentType","cellPixelComponents","getVerts","getLines","getPolys","getStrips","numberOfPointPixels","numberOfCellPixels","pdArray","cdArray","setExtent","inExtent","extentArray","changeDetected","extent","some","dataDescription","vtkStructuredData","dims","nCells","ijk","StructuredType","coords","indexToWorld","extentToBounds","getSpatialExtent","ex","vtkBoundingBox","computeTransforms","mat4","worldToIndex","ain","aout","indexToWorldVec3","worldToIndexVec3","indexToWorldBounds","bin","bout","worldToIndexBounds","onModified","computeHistogram","worldBounds","voxelFunc","yStride","zStride","pixels","maximum","minimum","Infinity","sumOfSquares","isum","inum","pixel","average","variance","sigma","computeIncrements","increments","incr","computeOffsetIndex","getExtent","getOffsetIndexFromWorld","getScalarValueFromWorld","offsetIndex","mat3","IntersectionState","NO_INTERSECTION","YES_INTERSECTION","ON_LINE","distanceToLine","closest","outObj","MIN_VALUE","distance","p21","denom","a1","a2","b1","b2","a21","b21","b1a1","c","obj","minDist","l1","l2","uv1","uv2","vtkLine","betweenPoints","projXYZ","outDistance","evaluateLocation","PLANE_TOLERANCE","COINCIDE","DISJOINT","distanceToPlane","projectPoint","xproj","xo","projectVector","vproj","n2","generalizedProjectPoint","p1Origin","intersectWithPlane","plane1Origin","plane1Normal","plane2Origin","plane2Normal","l0","error","maxc","absCross","iP","d1","d2","evaluate","evaluateFunction","evaluateGradient","planeOrigin","planeNormal","vtkPointSet","POLYDATA_FIELDS","CELL_FACTORY","vtkTriangle","str","replace","letter","buildCells","nVerts","getNumberOfVerts","nLines","getNumberOfLines","nPolys","getNumberOfPolys","nStrips","getNumberOfStrips","types","pTypes","locs","pLocs","nextCellPts","numCellPts","initialSize","links","getPointCells","getCellEdgeNeighbors","link1","link2","indexOf","cellHint","cellInfo","UNCHANGED","SINGLE_POINT","X_LINE","Y_LINE","Z_LINE","XY_PLANE","YZ_PLANE","XZ_PLANE","XYZ_GRID","EMPTY","getDataDescriptionFromExtent","inExt","dataDim","computeNormalDirection","v1","v2","v3","ax","ay","az","bx","by","bz","computeNormal","intersectWithTriangle","q1","r1","q2","r2","coplanar","pt1","pt2","surfaceId","n1","s1","s2","dist1","pts1","pts2","n1n2","tt1","tt2","index1","index2","t1","t2","ts1","ts2","id1","id2","val1","val2","t12","t22","t11","t21","tol2","pt3","plane","evaluation","dist2Pt1Pt2","dist2Pt2Pt3","dist2Pt3Pt1","line","intersectLine","pt3Pt1","pt3Pt2","pt3X","fabsn","dist2Point","dist2Line1","dist2Line2","rhs","c1","c2","indices","closestPoint1","closestPoint2","cp","maxComponent","lineDistance","p0","u3","pc","globalMTime","Symbol","fakeConsole","noOp","methodName","vtkGlobal","console","hasOwnProperty","loggerFunctions","info","log","warn","vtkDebugMacro","ERROR_ONCE_MAP","TYPED_ARRAYS","create","BigInt64Array","BigUint64Array","newTypedArray","newTypedArrayFrom","capitalize","charAt","_capitalize","safeArrays","key","shallowEquals","getStateArrayMapFunc","setImmediateVTK","fn","setTimeout","callbacks","isInteger","hierarchy","off","on","freeze","unsubscribe","isDeleted","otherMTime","callback","className","depth","noWarning","noFunction","ret","list","subset","val","field","el","Error","otherModel","keyList","otherKeyList","keyIdx","splice","join","toJSON","objectGetterMap","object","fieldNames","_typeof","getter","objectSetterMap","RangeError","DeepEqual","findSetter","fields","setGet","setArray","defaultVal","needCopy","otherArray","target","EVENT_ABORT","constructor","isVtkObject","instance","keystore","initialKeystore","setKey","getKey","getAllKeys","deleteKey","clearKeystore","nextProxyId","ROOT_GROUP_NAME","algo","numberOfInputs","numberOfOutputs","setInputData","dataset","port","inputData","inputConnection","setInputConnection","outputPort","msg","getPortToFill","portToFill","getOutputData","shouldUpdate","update","output","inputArrayToProcess","localMTime","minOutputMTime","mt","getInputData","addInputData","addInputConnection","getInputConnection","getOutputPort","outputPortAccess","ins","requestData","getNumberOfInputPorts","getNumberOfOutputPorts","getInputArrayToProcess","inputPort","arrayDesc","ds","fieldAssociation","setInputArrayToProcess","attributeType","chain","debounce","func","wait","immediate","timeout","debounced","context","_this","later","apply","callNow","clearTimeout","cancel","enumToString","e","event","eventName","previousDelete","curCallbackID","callbackID","currentCallbacks","cb","priority","cb1","cb2","formatBytesToProperUnit","precision","chunkSize","units","currentUnit","pop","toFixed","formatNumbersWithThousandSeparator","separator","sections","reverse","getCurrentGlobalMTime","measurePromiseExecution","promise","start","performance","now","moveToProtected","normalizeWheel","wheelEvent","sX","sY","pX","pY","detail","wheelDelta","wheelDeltaY","wheelDeltaX","axis","HORIZONTAL_AXIS","deltaY","deltaX","deltaMode","spinX","spinY","pixelX","pixelY","proxy","parentDelete","proxyId","ui","JSON","parse","stringify","propertyMap","groupChildrenNames","registerProperties","descriptionList","currentGroupName","childrenNames","children","listProxyProperties","gName","getProperties","groupName","id","propertyNames","prop","updateUI","updateProxyProperty","propertyName","propUI","activate","proxyManager","setActiveMethod","getProxyGroup","propertyLinkSubscribers","registerPropertyLinkForGC","otherLink","gcPropertyLinks","subscribers","unbind","propertyLinkMap","getPropertyLink","persistent","updateInProgress","source","force","needUpdate","sourceLink","link","newValue","linkToUpdate","indexToDelete","subscription","bind","updateMe","linkHandler","listPropertyNames","getPropertyByName","getPropertyDomainByName","domain","getProxySection","proxyGroup","properties","property","updateOnBind","sLink","proxyPropertyMapping","subscriptions","modelKey","_map$propertyName$mod","methodSrc","methodDst","proxyPropertyState","state","defaults","applyState","modelKeys","mapping","setGetArray","setImmediate","setLoggerFunction","throttle","delay","isThrottled","argsToUse","next","wrapper","traverseInstanceTree","extractFunction","accumulator","visitedInstances","modelObj","subObj","uncapitalize","vtkInfoMacro","vtkLogMacro","vtkOnceErrorMacro","globalThisShim","factoryMapping","vtkObject","newInst","register","vtkClassName","require","hasSymbols","toStr","origDefineProperty","defineProperty","supportsDescriptors","_","enumerable","arePropertyDescriptorsSupported","predicate","configurable","writable","defineProperties","predicates","props","getOwnPropertySymbols","module","exports","equal","RegExp","flags","valueOf","ARRAY_TYPE","random","PI","hypot","identity","invert","a00","a01","a02","a03","a10","a11","a12","a13","a20","a22","a23","a30","a31","a32","a33","b00","b01","b02","b03","b04","b05","b06","b07","b08","b09","b10","b11","fromTranslation","transformMat4","m","glMatrix","self","window","Function","implementation","getPolyfill","shim","polyfill","getGlobal","global","define","descriptor","getOwnPropertyDescriptor","globalThis","keysShim","has","isArgs","isEnumerable","propertyIsEnumerable","hasDontEnumBug","hasProtoEnumBug","dontEnums","equalsConstructorPrototype","o","ctor","excludedKeys","$applicationCache","$console","$external","$frame","$frameElement","$frames","$innerHeight","$innerWidth","$onmozfullscreenchange","$onmozfullscreenerror","$outerHeight","$outerWidth","$pageXOffset","$pageYOffset","$parent","$scrollLeft","$scrollTop","$scrollX","$scrollY","$self","$webkitIndexedDB","$webkitStorageInfo","$window","hasAutomationEqualityBug","isObject","isFunction","isArguments","isString","theKeys","skipProto","String","skipConstructor","equalsConstructorPrototypeIfNotBuggy","origKeys","originalKeys","keysWorksWithArguments","callee","alea","xor128","xorwow","xorshift7","xor4096","tychei","sr","Alea","seed","me","mash","h","charCodeAt","s0","copy","f","impl","opts","xg","prng","int32","double","quick","XorGen","strseed","X","limit","init","Date","pool","math","nodecrypto","width","startdenom","pow","significance","overflow","mask","seedrandom","shortseed","mixkey","flatten","entropy","tostring","randomBytes","crypto","msCrypto","getRandomValues","browser","navigator","plugins","screen","autoseed","arc4","ARC4","g","S","pass","is_math_call","keylen","s","r","typ","smear","stringseed","fromCharCode","Constructor","protoProps","staticProps","receiver","desc","parent","getPrototypeOf","iterator","_toConsumableArray","arr2","_possibleConstructorReturn","ReferenceError","TinyEmitter","DEFAULT_HANDLER","TransferableResponse","payload","transferable","handlers","sendPostMessage","postMessage","server","_TinyEmitter","WorkerRegister","__proto__","subClass","setPrototypeOf","_len","_key","_get2","_len2","_key2","handler","run","messageId","handlerName","onSuccess","sendResult","onError","message","stack","runFn","then","catch","sendEvent","success","addEventListener","_ref","emitLocally","image","moduleRelativePathOrURL"],"sourceRoot":""}