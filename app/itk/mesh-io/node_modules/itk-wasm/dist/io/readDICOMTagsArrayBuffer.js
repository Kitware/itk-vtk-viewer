import createWebWorkerPromise from"../core/internal/createWebWorkerPromise.js";import config from"../itkConfig.js";import InterfaceTypes from"../core/InterfaceTypes.js";async function readDICOMTagsArrayBuffer(e,r,a=null){let t=e;const{webworkerPromise:s,worker:o}=await createWebWorkerPromise(t);t=o;const n=new Uint8Array(r),i="./file.dcm",p=[i,"0","--memory-io"],f=[{type:InterfaceTypes.BinaryFile,data:{data:n,path:i}}];null!=a&&(p.push("--tags-to-read"),p.push("1"),f.push({type:InterfaceTypes.TextStream,data:{data:JSON.stringify({tags:a})}}));const c=[{type:InterfaceTypes.TextStream}],g=(await s.postMessage({operation:"readDICOMTags",config,pipelinePath:"ReadDICOMTags",args:p,outputs:c,inputs:f},[r])).outputs[0].data.data,m=JSON.parse(g);return{tags:new Map(m.tags),webWorker:t}}export default readDICOMTagsArrayBuffer;