{"version":3,"file":"284.itkVtkViewer.js","mappings":"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","sources":["webpack://itk-vtk-viewer/webpack/runtime/chunk loaded","webpack://itk-vtk-viewer/webpack/runtime/startup chunk dependencies","webpack://itk-vtk-viewer/./src/IO/itkWasmUtils.js","webpack://itk-vtk-viewer/./src/IO/Compare/createCompareImage.js","webpack://itk-vtk-viewer/./src/IO/ResampleLabelImage/resampleLabelImage.js","webpack://itk-vtk-viewer/./src/internalUtils.js","webpack://itk-vtk-viewer/./src/IO/composeComponents.js","webpack://itk-vtk-viewer/./src/Rendering/VTKJS/Images/ComposeImage.worker.js","webpack://itk-vtk-viewer/./src/itkConfig.js","webpack://itk-vtk-viewer/webpack/bootstrap","webpack://itk-vtk-viewer/webpack/runtime/amd define","webpack://itk-vtk-viewer/webpack/runtime/amd options","webpack://itk-vtk-viewer/webpack/runtime/compat get default export","webpack://itk-vtk-viewer/webpack/runtime/define property getters","webpack://itk-vtk-viewer/webpack/runtime/ensure chunk","webpack://itk-vtk-viewer/webpack/runtime/get javascript chunk filename","webpack://itk-vtk-viewer/webpack/runtime/global","webpack://itk-vtk-viewer/webpack/runtime/hasOwnProperty shorthand","webpack://itk-vtk-viewer/webpack/runtime/node module decorator","webpack://itk-vtk-viewer/webpack/runtime/publicPath","webpack://itk-vtk-viewer/webpack/runtime/importScripts chunk loading","webpack://itk-vtk-viewer/webpack/startup"],"sourcesContent":["var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","var next = __webpack_require__.x;\n__webpack_require__.x = () => {\n\treturn Promise.all([480,94,952].map(__webpack_require__.e, __webpack_require__)).then(next);\n};","import {\n  runPipeline,\n  InterfaceTypes,\n  imageSharedBufferOrCopy,\n  WorkerPool,\n  stackImages,\n} from 'itk-wasm'\n\nimport itkConfig from '../itkConfig.js'\n\nexport async function runWasm({\n  pipeline,\n  args,\n  images,\n  outputs = [{ type: InterfaceTypes.Image }],\n  maxSplits = 4, // avoid out of memory errors with larger images\n}) {\n  const { pipelinesUrl, pipelineWorkerUrl } = itkConfig\n\n  // remove blob:http://... added to __webpack_public_path__ in webworker\n  const pipelinesUrlNoBlob = pipelinesUrl.startsWith('blob:')\n    ? pipelinesUrl.substring(5)\n    : pipelinesUrl\n  // prepend base to URL string for tests to run\n  itkConfig.pipelinesUrl = new URL(\n    pipelinesUrlNoBlob,\n    self.location.origin\n  ).href\n\n  const pipelinesWorkerUrlNoBlob = pipelineWorkerUrl.startsWith('blob:')\n    ? pipelineWorkerUrl.substring(5)\n    : pipelineWorkerUrl\n  itkConfig.pipelineWorkerUrl = new URL(\n    pipelinesWorkerUrlNoBlob,\n    self.location.origin\n  ).href\n\n  const numberOfWorkers = navigator.hardwareConcurrency || 6\n\n  const aImage = images[0]\n  const splits = Math.min(\n    parseInt(numberOfWorkers / 2),\n    Math.max(aImage.size[aImage.size.length - 1], 1),\n    maxSplits\n  )\n\n  const tasks = [...Array(splits).keys()].map(split => {\n    const taskArgs = [\n      ...[...Array(images.length).keys()].map(num => num.toString()),\n      '0',\n      ...args.map(o => o.toString()),\n      '--max-total-splits',\n      '' + splits,\n      '--split',\n      '' + split,\n      '--number-of-splits',\n      '' + splits,\n      '--memory-io',\n    ]\n\n    const inputs = images.map(image => ({\n      type: InterfaceTypes.Image,\n      data: imageSharedBufferOrCopy(image),\n    }))\n\n    return [pipeline, taskArgs, outputs, inputs]\n  })\n\n  const workerPool = new WorkerPool(numberOfWorkers, runPipeline)\n  const results = await workerPool.runTasks(tasks).promise\n  workerPool.terminateWorkers()\n  const validResults = results.filter(r => r.returnValue === 0)\n  const imageSplits = validResults.map(({ outputs }) => outputs[0].data)\n\n  return stackImages(imageSplits)\n}\n","import { runWasm } from '../itkWasmUtils.js'\n\nexport async function createCompareImage(\n  movingImage,\n  fixedImage,\n  { minMax, checkerboard, pattern = undefined }\n) {\n  const clampedPattern = pattern\n    ? fixedImage.size.map((s, idx) => Math.min(s, pattern[idx]))\n    : []\n  const args = [\n    '--checkerboard',\n    checkerboard.toString(),\n    '--range',\n    minMax.join(','),\n    '--pattern',\n    clampedPattern.join(','),\n  ]\n\n  const image = await runWasm({\n    pipeline: 'Compare',\n    args,\n    images: [movingImage, fixedImage],\n    maxSplits: 1,\n  })\n  image.ranges = [minMax, minMax]\n\n  return image\n}\n","import { arraysEqual } from '../../internalUtils.js'\nimport { runWasm } from '../itkWasmUtils.js'\n\nexport async function resampleLabelImage(image, labelImage) {\n  const { size, spacing, origin, direction } = image\n  const args = [\n    '--size',\n    size.join(','),\n    '--spacing',\n    spacing.join(','),\n    '--origin',\n    origin.join(','),\n    '--direction',\n    direction.join(','),\n  ]\n\n  return runWasm({ pipeline: 'ResampleLabelImage', args, images: [labelImage] })\n}\n\nexport function compareImageSpaces(imageA, imageB) {\n  const equalKeys = ['size', 'direction', 'origin', 'spacing'].map(key =>\n    arraysEqual(imageA[key], imageB[key])\n  )\n  return equalKeys.every(b => b)\n}\n","export function arraysEqual(a, b) {\n  if (a === b) return true\n  if (a == null || b == null) return false\n  if (a.length !== b.length) return false\n  for (var i = 0; i < a.length; ++i) {\n    if (a[i] !== b[i]) return false\n  }\n  return true\n}\n","const sum = (a, b) => a + b\n\nconst countElements = componentInfo =>\n  componentInfo\n    .map(({ data, srcComponentCount }) => data.length / srcComponentCount)\n    .reduce(sum)\n\nconst getLargestTypeByBytes = componentInfo =>\n  componentInfo\n    .map(({ data }) => data)\n    .reduce((lastType, typedArray) =>\n      lastType.BYTES_PER_ELEMENT >= typedArray.BYTES_PER_ELEMENT\n        ? lastType\n        : typedArray\n    )\n\nconst fuseComponents = ({ componentInfo, arrayToFill }) => {\n  const elementCount = countElements(componentInfo)\n  const fusedImageData =\n    arrayToFill ??\n    new (getLargestTypeByBytes(componentInfo).constructor)(elementCount)\n\n  const componentCount = componentInfo.length\n  const tupleCount = elementCount / componentCount\n  for (let cIdx = 0; cIdx < componentCount; cIdx++) {\n    const { data, srcComponentCount, fromComponent } = componentInfo[cIdx]\n    for (let tuple = 0; tuple < tupleCount; tuple++) {\n      fusedImageData[tuple * componentCount + cIdx] =\n        data[tuple * srcComponentCount + fromComponent]\n    }\n  }\n  return fusedImageData\n}\n\n// returns \"component infos\"\nexport const parseByComponent = scaleImage => {\n  if (!scaleImage) return []\n\n  // lift ITK image into array if not already (like from InMemoryMultiscaleSpatialImage)\n  const scaleImages = Array.isArray(scaleImage) ? scaleImage : [scaleImage]\n  return scaleImages.flatMap(image => {\n    const srcComponentCount = image.imageType.components\n    // pull each component from image\n    return [...Array(srcComponentCount).keys()].map(fromComponent => ({\n      fromComponent,\n      srcComponentCount,\n      image,\n      data: image.data,\n    }))\n  })\n}\n\nexport const pickAndFuseComponents = async ({\n  image,\n  labelImage,\n  components,\n}) => {\n  // not Conglomerate, no label image, and all components needed: just return image\n  if (\n    !Array.isArray(image) &&\n    !labelImage &&\n    image.imageType.components === components.length\n  )\n    return image\n\n  const [imageByComponent, labelByComponent] = [image, labelImage].map(image =>\n    parseByComponent(image)\n  )\n  const componentInfo = components.map(\n    comp =>\n      comp >= 0 ? imageByComponent[comp] : labelByComponent[comp * -1 - 1] // label component index starts at -1\n  )\n\n  componentInfo.forEach((compInfo, idx) => {\n    if (!compInfo) {\n      throw new Error(\n        'pickAndFuseComponents: Missing component for requested component: ' +\n          idx\n      )\n    }\n  })\n\n  const imageArray = fuseComponents({\n    componentInfo,\n  })\n\n  const ranges = componentInfo.map(\n    ({ image: { ranges }, fromComponent }) => ranges && ranges[fromComponent]\n  )\n\n  // picks out one from ConglomerateImage\n  const singleImage = Array.isArray(image) ? image[0] : image\n\n  const itkImage = {\n    ...singleImage,\n    data: imageArray,\n    imageType: {\n      ...singleImage.imageType,\n      components: components.length,\n    },\n    ranges,\n  }\n  return itkImage\n}\n\nexport const composeComponents = images => {\n  const componentCount = images.map(i => i.imageType.components).reduce(sum)\n  // include all components\n  const components = [...Array(componentCount).keys()]\n  // compose Conglomerate images\n  return pickAndFuseComponents({\n    image: images,\n    components,\n  })\n}\n","import registerWebworker from 'webworker-promise/lib/register'\nimport vtkITKHelper from 'vtk.js/Sources/Common/DataModel/ITKHelper'\nimport vtkBoundingBox from 'vtk.js/Sources/Common/DataModel/BoundingBox'\nimport { computeRanges } from '../../../IO/Analyze/computeRanges'\nimport { createRangeHelper } from '../../../IO/Analyze/createRangeHelper'\nimport { createCompareImage } from '../../../IO/Compare/createCompareImage'\nimport {\n  compareImageSpaces,\n  resampleLabelImage,\n} from '../../../IO/ResampleLabelImage/resampleLabelImage'\nimport {\n  composeComponents,\n  parseByComponent,\n  pickAndFuseComponents,\n} from '../../../IO/composeComponents'\n\nconst checkOverlap = (imageA, imageB) => {\n  const [vtkA, vtkB] = [imageA, imageB].map(vtkITKHelper.convertItkToVtkImage)\n  if (!vtkBoundingBox.intersects(vtkA.getBounds(), vtkB.getBounds())) {\n    console.warn(\n      'Trying to compare images but bounds do not intersect. Moving image will be empty.'\n    )\n  }\n}\n\nconst pickRanges = compInfos =>\n  compInfos\n    .map(({ image: { ranges }, fromComponent }) => ranges?.[fromComponent]) // no ranges in label\n    // if missing any range, return undefined\n    .reduce((ranges, range) => {\n      if (!ranges || !range) return undefined\n      return [...ranges, range]\n    }, [])\n    ?.map(([min, max]) => ({ min, max }))\n\nconst ensureRanges = async image => {\n  const componentInfo = parseByComponent(image)\n  const componentRanges =\n    pickRanges(componentInfo) ??\n    (await computeRanges(image.data, componentInfo.length))\n  image.ranges = componentRanges.map(({ min, max }) => [min, max])\n  return image\n}\n\nconst ensureSameImageSpace = async ({ targetImage, resampleImage }) => {\n  if (!resampleImage || !targetImage) return resampleImage\n\n  if (compareImageSpaces(targetImage, resampleImage)) return resampleImage\n\n  return resampleLabelImage(targetImage, resampleImage)\n}\n\nconst pickIntensityComponents = (image, components) => {\n  // 4+ component and ConglomerateImage processing\n  // fuseLabelImage assumes label is on the last component\n  const withoutLabel = components.filter(componentIndex => componentIndex >= 0)\n  return pickAndFuseComponents({\n    image,\n    components: withoutLabel,\n  })\n}\n\nconst fuseConglomerate = image => {\n  if (!Array.isArray(image)) return image\n  return composeComponents(image)\n}\n\nconst makeCompareImage = async ({ image, fixedImage, options }) => {\n  if (!options.method || options.method === 'disabled') return image\n\n  if (!fixedImage) {\n    console.error('No fixed image')\n    return\n  }\n  const itkImage = await fuseConglomerate(image)\n  const itkFixedImage = await fuseConglomerate(fixedImage)\n\n  // check if there is overlap in physical space.  If none, resample of image to fixedImage will be empty.\n  checkOverlap(itkImage, itkFixedImage)\n\n  const { ranges } = await ensureRanges(itkFixedImage)\n  const rangeHelper = createRangeHelper()\n  ranges.flat().forEach(v => rangeHelper.add(v))\n  const { min, max } = rangeHelper.getRange()\n\n  return createCompareImage(itkImage, itkFixedImage, {\n    minMax: [min, max],\n    ...options,\n  })\n}\n\nconst fuseLabelImage = async (image, labelImage) => {\n  const components = [...Array(image.imageType.components).keys(), -1]\n  const imageWithLabel = await pickAndFuseComponents({\n    image,\n    labelImage,\n    components,\n  })\n  return imageWithLabel\n}\n\nregisterWebworker(\n  async ({\n    image: inImage,\n    labelImage,\n    visualizedComponents,\n    fixedImage,\n    compare,\n  }) => {\n    let image = await makeCompareImage({\n      image: inImage,\n      fixedImage,\n      options: compare,\n    })\n    image = await pickIntensityComponents(image, visualizedComponents)\n\n    // Label processing\n    const labelResampled = await ensureSameImageSpace({\n      targetImage: image,\n      resampleImage: labelImage,\n    })\n    image = labelResampled ? await fuseLabelImage(image, labelResampled) : image\n    image = await ensureRanges(image)\n\n    return new registerWebworker.TransferableResponse({ image }, [\n      image.data.buffer,\n    ])\n  }\n)\n","/* eslint-disable no-undef */\nconst itkConfig = {\n  pipelineWorkerUrl:\n    __webpack_public_path__ + 'itk/web-workers/min-bundles/pipeline.worker.js',\n  imageIOUrl: __webpack_public_path__ + 'itk/image-io',\n  meshIOUrl: __webpack_public_path__ + 'itk/mesh-io',\n  pipelinesUrl: __webpack_public_path__ + 'itk/pipeline',\n}\n\nexport default itkConfig\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n// the startup function\n__webpack_require__.x = () => {\n\t// Load entry module and return exports\n\t// This entry module depends on other loaded chunks and execution need to be delayed\n\tvar __webpack_exports__ = __webpack_require__.O(undefined, [480,94,952], () => (__webpack_require__(4428)))\n\t__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n\treturn __webpack_exports__;\n};\n\n","__webpack_require__.amdD = function () {\n\tthrow new Error('define cannot be used indirect');\n};","__webpack_require__.amdO = {};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.f = {};\n// This file contains only the entry chunk.\n// The chunk loading function for additional chunks\n__webpack_require__.e = (chunkId) => {\n\treturn Promise.all(Object.keys(__webpack_require__.f).reduce((promises, key) => {\n\t\t__webpack_require__.f[key](chunkId, promises);\n\t\treturn promises;\n\t}, []));\n};","// This function allow to reference async chunks and sibling chunks for the entrypoint\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"\" + chunkId + \".itkVtkViewer.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","__webpack_require__.b = self.location + \"\";\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t284: 1\n};\n\n// importScripts chunk loading\nvar installChunk = (data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\tfor(var moduleId in moreModules) {\n\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t}\n\t}\n\tif(runtime) runtime(__webpack_require__);\n\twhile(chunkIds.length)\n\t\tinstalledChunks[chunkIds.pop()] = 1;\n\tparentChunkLoadingFunction(data);\n};\n__webpack_require__.f.i = (chunkId, promises) => {\n\t// \"1\" is the signal for \"already loaded\"\n\tif(!installedChunks[chunkId]) {\n\t\tif(true) { // all chunks have JS\n\t\t\timportScripts(__webpack_require__.p + __webpack_require__.u(chunkId));\n\t\t}\n\t}\n};\n\nvar chunkLoadingGlobal = self[\"webpackChunkitk_vtk_viewer\"] = self[\"webpackChunkitk_vtk_viewer\"] || [];\nvar parentChunkLoadingFunction = chunkLoadingGlobal.push.bind(chunkLoadingGlobal);\nchunkLoadingGlobal.push = installChunk;\n\n// no HMR\n\n// no HMR manifest","// run startup\nvar __webpack_exports__ = __webpack_require__.x();\n"],"names":["deferred","next","_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","_typeof","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","undefined","done","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","methodName","return","TypeError","info","resultName","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","doneResult","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","thrown","delegateYield","runWasm","_x","_runWasm","apply","arguments","_asyncToGenerator","_callee","_ref","pipeline","args","images","_ref$outputs","outputs","_ref$maxSplits","maxSplits","pipelinesUrl","pipelineWorkerUrl","pipelinesUrlNoBlob","pipelinesWorkerUrlNoBlob","numberOfWorkers","aImage","splits","tasks","workerPool","results","validResults","imageSplits","_context","InterfaceTypes","itkConfig","startsWith","substring","URL","location","origin","href","navigator","hardwareConcurrency","Math","min","parseInt","max","size","_toConsumableArray","Array","map","split","taskArgs","concat","num","toString","o","inputs","image","data","imageSharedBufferOrCopy","WorkerPool","runPipeline","runTasks","promise","terminateWorkers","filter","r","returnValue","_ref2","stackImages","createCompareImage","movingImage","fixedImage","minMax","checkerboard","pattern","clampedPattern","s","idx","join","ranges","resampleLabelImage","labelImage","spacing","direction","compareImageSpaces","imageA","imageB","a","b","arraysEqual","every","ownKeys","enumerableOnly","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","_objectSpread","target","source","_defineProperty","getOwnPropertyDescriptors","defineProperties","sum","fuseComponents","_ref3","componentInfo","arrayToFill","elementCount","srcComponentCount","reduce","countElements","fusedImageData","lastType","typedArray","BYTES_PER_ELEMENT","getLargestTypeByBytes","componentCount","tupleCount","cIdx","_componentInfo$cIdx","fromComponent","tuple","parseByComponent","scaleImage","isArray","flatMap","imageType","components","pickAndFuseComponents","_ref5","_ref4","_map","_map2","imageByComponent","labelByComponent","imageArray","singleImage","itkImage","_slicedToArray","comp","compInfo","_ref6","ensureRanges","_pickRanges","componentRanges","_compInfos$map$reduce","range","t0","computeRanges","ensureSameImageSpace","_ref7","_callee2","targetImage","resampleImage","_context2","_x2","pickIntensityComponents","withoutLabel","componentIndex","fuseConglomerate","makeCompareImage","_ref9","_callee3","_ref8","options","itkFixedImage","_yield$ensureRanges","rangeHelper","_rangeHelper$getRange","_context3","console","vtkA","vtkB","vtkITKHelper","vtkBoundingBox","getBounds","warn","createRangeHelper","flat","v","add","getRange","_x3","fuseLabelImage","_ref10","_callee4","imageWithLabel","_context4","_x4","_x5","registerWebworker","_ref12","_callee5","_ref11","inImage","visualizedComponents","compare","labelResampled","_context5","buffer","_x6","__webpack_public_path__","imageIOUrl","meshIOUrl","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","module","id","loaded","__webpack_modules__","m","x","__webpack_exports__","O","amdD","amdO","chunkIds","priority","notFulfilled","Infinity","fulfilled","j","splice","n","getter","__esModule","d","definition","get","f","e","chunkId","all","promises","u","g","globalThis","this","Function","window","prop","nmd","paths","children","scriptUrl","importScripts","document","currentScript","src","scripts","getElementsByTagName","replace","p","installedChunks","chunkLoadingGlobal","parentChunkLoadingFunction","bind","moreModules","runtime"],"sourceRoot":""}