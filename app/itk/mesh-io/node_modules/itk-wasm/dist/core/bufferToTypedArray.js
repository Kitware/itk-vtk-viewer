import IntTypes from"./IntTypes.js";import FloatTypes from"./FloatTypes.js";function bufferToTypedArray(e,r){let n=null;switch(e){case IntTypes.UInt8:n=new Uint8Array(r);break;case IntTypes.Int8:n=new Int8Array(r);break;case IntTypes.UInt16:n=new Uint16Array(r);break;case IntTypes.Int16:n=new Int16Array(r);break;case IntTypes.UInt32:n=new Uint32Array(r);break;case IntTypes.Int32:n=new Int32Array(r);break;case IntTypes.UInt64:n="function"==typeof globalThis.BigUint64Array?new BigUint64Array(r):new Uint8Array(r);break;case IntTypes.Int64:n="function"==typeof globalThis.BigInt64Array?new BigInt64Array(r):new Uint8Array(r);break;case FloatTypes.Float32:n=new Float32Array(r);break;case FloatTypes.Float64:n=new Float64Array(r);break;case"null":case null:n=null;break;default:throw new Error("Type is not supported as a TypedArray")}return n}export default bufferToTypedArray;