var __rest=this&&this.__rest||function(e,s){var r={};for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&s.indexOf(n)<0&&(r[n]=e[n]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var t=0;for(n=Object.getOwnPropertySymbols(e);t<n.length;t++)s.indexOf(n[t])<0&&Object.prototype.propertyIsEnumerable.call(e,n[t])&&(r[n[t]]=e[n[t]])}return r};class WorkerPool{constructor(e,s){this.fcn=s,this.workerQueue=new Array(e),this.workerQueue.fill(null),this.runInfo=[]}runTasks(e,s=null){const r={taskQueue:[],results:[],addingTasks:!1,postponed:!1,runningWorkers:0,index:0,completedTasks:0,progressCallback:s,canceled:!1};return this.runInfo.push(r),r.index=this.runInfo.length-1,{promise:new Promise(((s,n)=>{r.resolve=s,r.reject=n,r.results=new Array(e.length),r.completedTasks=0,r.addingTasks=!0,e.forEach(((e,s)=>{this.addTask(r.index,s,e)})),r.addingTasks=!1})),runId:r.index}}terminateWorkers(){for(let e=0;e<this.workerQueue.length;e++){const s=this.workerQueue[e];null!=s&&s.terminate(),this.workerQueue[e]=null}}cancel(e){const s=this.runInfo[e];null!=s&&(s.canceled=!0)}addTask(e,s,r){const n=this.runInfo[e];if(!0===(null==n?void 0:n.canceled))return n.reject("Remaining tasks canceled"),void this.clearTask(n.index);if(this.workerQueue.length>0){const t=this.workerQueue.pop();n.runningWorkers++,this.fcn(t,...r).then((r=>{var{webWorker:t}=r,o=__rest(r,["webWorker"]);if(this.workerQueue.push(t),null!==this.runInfo[e])if(n.runningWorkers--,n.results[s]=o,n.completedTasks++,null!=n.progressCallback&&n.progressCallback(n.completedTasks,n.results.length),n.taskQueue.length>0){const s=n.taskQueue.shift();this.addTask(e,s[0],s[1])}else if(!n.addingTasks&&0===n.runningWorkers){const e=n.results;n.resolve(e),this.clearTask(n.index)}})).catch((e=>{n.reject(e),this.clearTask(n.index)}))}else 0!==n.runningWorkers||n.postponed?n.taskQueue.push([s,r]):(n.postponed=!0,setTimeout((()=>{n.postponed=!1,this.addTask(n.index,s,r)}),50))}clearTask(e){this.runInfo[e].results=[],this.runInfo[e].taskQueue=[],this.runInfo[e].progressCallback=null,this.runInfo[e].canceled=null,this.runInfo[e].reject=()=>{},this.runInfo[e].resolve=()=>{}}}export default WorkerPool;