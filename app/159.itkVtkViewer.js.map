{"version":3,"file":"159.itkVtkViewer.js","mappings":"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","sources":["webpack://itk-vtk-viewer/./node_modules/@babel/runtime/regenerator/index.js","webpack://itk-vtk-viewer/./node_modules/regenerator-runtime/runtime.js","webpack://itk-vtk-viewer/./node_modules/webworker-promise/lib/index.js","webpack://itk-vtk-viewer/./node_modules/@babel/runtime/helpers/esm/arrayLikeToArray.js","webpack://itk-vtk-viewer/./node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","webpack://itk-vtk-viewer/./node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","webpack://itk-vtk-viewer/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://itk-vtk-viewer/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://itk-vtk-viewer/./node_modules/@babel/runtime/helpers/esm/iterableToArray.js","webpack://itk-vtk-viewer/./node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","webpack://itk-vtk-viewer/./node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","webpack://itk-vtk-viewer/./node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","webpack://itk-vtk-viewer/./node_modules/@babel/runtime/helpers/esm/slicedToArray.js","webpack://itk-vtk-viewer/./node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","webpack://itk-vtk-viewer/./node_modules/@babel/runtime/helpers/esm/unsupportedIterableToArray.js","webpack://itk-vtk-viewer/../../src/core/WorkerPool.ts"],"sourcesContent":["module.exports = require(\"regenerator-runtime\");\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nfunction _toArray(arr) { return Array.isArray(arr) ? arr : Array.from(arr); }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar TinyEmitter = require('./tiny-emitter');\n\nvar MESSAGE_RESULT = 0;\nvar MESSAGE_EVENT = 1;\n\nvar RESULT_ERROR = 0;\nvar RESULT_SUCCESS = 1;\n\nvar Worker = function (_TinyEmitter) {\n  _inherits(Worker, _TinyEmitter);\n\n  /**\n   *\n   * @param worker {Worker}\n   */\n  function Worker(worker) {\n    _classCallCheck(this, Worker);\n\n    var _this = _possibleConstructorReturn(this, (Worker.__proto__ || Object.getPrototypeOf(Worker)).call(this));\n\n    _this._messageId = 1;\n    _this._messages = new Map();\n\n    _this._worker = worker;\n    _this._worker.onmessage = _this._onMessage.bind(_this);\n    _this._id = Math.ceil(Math.random() * 10000000);\n    return _this;\n  }\n\n  _createClass(Worker, [{\n    key: 'terminate',\n    value: function terminate() {\n      this._worker.terminate();\n    }\n\n    /**\n     * return true if there is no unresolved jobs\n     * @returns {boolean}\n     */\n\n  }, {\n    key: 'isFree',\n    value: function isFree() {\n      return this._messages.size === 0;\n    }\n  }, {\n    key: 'jobsLength',\n    value: function jobsLength() {\n      return this._messages.size;\n    }\n\n    /**\n     * @param operationName string\n     * @param data any\n     * @param transferable array\n     * @param onEvent function\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'exec',\n    value: function exec(operationName) {\n      var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      var _this2 = this;\n\n      var transferable = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n      var onEvent = arguments[3];\n\n      return new Promise(function (res, rej) {\n        var messageId = _this2._messageId++;\n        _this2._messages.set(messageId, [res, rej, onEvent]);\n        _this2._worker.postMessage([messageId, data, operationName], transferable || []);\n      });\n    }\n\n    /**\n     *\n     * @param data any\n     * @param transferable array\n     * @param onEvent function\n     * @returns {Promise}\n     */\n\n  }, {\n    key: 'postMessage',\n    value: function postMessage() {\n      var data = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n      var _this3 = this;\n\n      var transferable = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var onEvent = arguments[2];\n\n      return new Promise(function (res, rej) {\n        var messageId = _this3._messageId++;\n        _this3._messages.set(messageId, [res, rej, onEvent]);\n        _this3._worker.postMessage([messageId, data], transferable || []);\n      });\n    }\n  }, {\n    key: 'emit',\n    value: function emit(eventName) {\n      for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        args[_key - 1] = arguments[_key];\n      }\n\n      this._worker.postMessage({ eventName: eventName, args: args });\n    }\n  }, {\n    key: '_onMessage',\n    value: function _onMessage(e) {\n      //if we got usual event, just emit it locally\n      if (!Array.isArray(e.data) && e.data.eventName) {\n        var _get2;\n\n        return (_get2 = _get(Worker.prototype.__proto__ || Object.getPrototypeOf(Worker.prototype), 'emit', this)).call.apply(_get2, [this, e.data.eventName].concat(_toConsumableArray(e.data.args)));\n      }\n\n      var _e$data = _toArray(e.data),\n          type = _e$data[0],\n          args = _e$data.slice(1);\n\n      if (type === MESSAGE_EVENT) this._onEvent.apply(this, _toConsumableArray(args));else if (type === MESSAGE_RESULT) this._onResult.apply(this, _toConsumableArray(args));else throw new Error('Wrong message type \\'' + type + '\\'');\n    }\n  }, {\n    key: '_onResult',\n    value: function _onResult(messageId, success, payload) {\n      var _messages$get = this._messages.get(messageId),\n          _messages$get2 = _slicedToArray(_messages$get, 2),\n          res = _messages$get2[0],\n          rej = _messages$get2[1];\n\n      this._messages.delete(messageId);\n\n      return success === RESULT_SUCCESS ? res(payload) : rej(payload);\n    }\n  }, {\n    key: '_onEvent',\n    value: function _onEvent(messageId, eventName, data) {\n      var _messages$get3 = this._messages.get(messageId),\n          _messages$get4 = _slicedToArray(_messages$get3, 3),\n          onEvent = _messages$get4[2];\n\n      if (onEvent) {\n        onEvent(eventName, data);\n      }\n    }\n  }]);\n\n  return Worker;\n}(TinyEmitter);\n\nmodule.exports = Worker;","export default function _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}","export default function _iterableToArrayLimit(arr, i) {\n  var _i = arr == null ? null : typeof Symbol !== \"undefined\" && arr[Symbol.iterator] || arr[\"@@iterator\"];\n\n  if (_i == null) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n\n  var _s, _e;\n\n  try {\n    for (_i = _i.call(arr); !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import arrayWithHoles from \"./arrayWithHoles.js\";\nimport iterableToArrayLimit from \"./iterableToArrayLimit.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableRest from \"./nonIterableRest.js\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","import arrayWithoutHoles from \"./arrayWithoutHoles.js\";\nimport iterableToArray from \"./iterableToArray.js\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray.js\";\nimport nonIterableSpread from \"./nonIterableSpread.js\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray.js\";\nexport default function _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return arrayLikeToArray(o, minLen);\n}","/* eslint-disable  @typescript-eslint/no-non-null-assertion */\nvar __rest = (this && this.__rest) || function (s, e) {\n    var t = {};\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n        t[p] = s[p];\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n                t[p[i]] = s[p[i]];\n        }\n    return t;\n};\nclass WorkerPool {\n    /* poolSize is the maximum number of web workers to create in the pool.\n     *\n     * The function, fcn, should accept null or an existing worker as its first argument.\n     * It most also return and object with the used worker on the `webWorker`\n     * property.  * Example: runPipeline.\n     *\n     **/\n    constructor(poolSize, fcn) {\n        this.fcn = fcn;\n        this.workerQueue = new Array(poolSize);\n        this.workerQueue.fill(null);\n        this.runInfo = [];\n    }\n    /*\n     * Run the tasks specified by the arguments in the taskArgsArray that will\n     * be passed to the pool fcn.\n     *\n     * An optional progressCallback will be called with the number of complete\n     * tasks and the total number of tasks as arguments every time a task has\n     * completed.\n     *\n     * Returns an object containing a promise ('promise') to communicate results\n     * as well as an id ('runId') which can be used to cancel any remaining pending\n     * tasks before they complete.\n     */\n    runTasks(taskArgsArray, progressCallback = null) {\n        const info = {\n            taskQueue: [],\n            results: [],\n            addingTasks: false,\n            postponed: false,\n            runningWorkers: 0,\n            index: 0,\n            completedTasks: 0,\n            progressCallback: progressCallback,\n            canceled: false\n        };\n        this.runInfo.push(info);\n        info.index = this.runInfo.length - 1;\n        return {\n            promise: new Promise((resolve, reject) => {\n                info.resolve = resolve;\n                info.reject = reject;\n                info.results = new Array(taskArgsArray.length);\n                info.completedTasks = 0;\n                info.addingTasks = true;\n                taskArgsArray.forEach((taskArg, index) => {\n                    this.addTask(info.index, index, taskArg);\n                });\n                info.addingTasks = false;\n            }),\n            runId: info.index\n        };\n    }\n    terminateWorkers() {\n        for (let index = 0; index < this.workerQueue.length; index++) {\n            const worker = this.workerQueue[index];\n            if (worker != null) {\n                worker.terminate();\n            }\n            this.workerQueue[index] = null;\n        }\n    }\n    cancel(runId) {\n        const info = this.runInfo[runId];\n        if (info !== null && info !== undefined) {\n            info.canceled = true;\n        }\n    }\n    addTask(infoIndex, resultIndex, taskArgs) {\n        const info = this.runInfo[infoIndex];\n        if ((info === null || info === void 0 ? void 0 : info.canceled) === true) {\n            info.reject('Remaining tasks canceled');\n            this.clearTask(info.index);\n            return;\n        }\n        if (this.workerQueue.length > 0) {\n            const worker = this.workerQueue.pop();\n            info.runningWorkers++;\n            this.fcn(worker, ...taskArgs).then((_a) => {\n                var { webWorker } = _a, result = __rest(_a, [\"webWorker\"]);\n                this.workerQueue.push(webWorker);\n                // Check if this task was canceled while it was getting done\n                if (this.runInfo[infoIndex] !== null) {\n                    info.runningWorkers--;\n                    info.results[resultIndex] = result;\n                    info.completedTasks++;\n                    if (info.progressCallback != null) {\n                        info.progressCallback(info.completedTasks, info.results.length);\n                    }\n                    if (info.taskQueue.length > 0) {\n                        const reTask = info.taskQueue.shift();\n                        this.addTask(infoIndex, reTask[0], reTask[1]);\n                    }\n                    else if (!info.addingTasks && info.runningWorkers === 0) {\n                        const results = info.results;\n                        info.resolve(results);\n                        this.clearTask(info.index);\n                    }\n                }\n            }).catch((error) => {\n                info.reject(error);\n                this.clearTask(info.index);\n            });\n        }\n        else {\n            if (info.runningWorkers !== 0 || info.postponed) {\n                // At least one worker is working on these tasks, and it will pick up\n                // the next item in the taskQueue when done.\n                info.taskQueue.push([resultIndex, taskArgs]);\n            }\n            else {\n                // Try again later.\n                info.postponed = true;\n                setTimeout(() => {\n                    info.postponed = false;\n                    this.addTask(info.index, resultIndex, taskArgs);\n                }, 50);\n            }\n        }\n    }\n    clearTask(clearIndex) {\n        this.runInfo[clearIndex].results = [];\n        this.runInfo[clearIndex].taskQueue = [];\n        this.runInfo[clearIndex].progressCallback = null;\n        this.runInfo[clearIndex].canceled = null;\n        this.runInfo[clearIndex].reject = () => { };\n        this.runInfo[clearIndex].resolve = () => { };\n    }\n}\nexport default WorkerPool;\n//# sourceMappingURL=WorkerPool.js.map"],"names":["module","exports","runtime","undefined","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","obj","key","value","defineProperty","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","GenStateSuspendedStart","method","arg","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","GenStateSuspendedYield","makeInvokeMethod","fn","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","invoke","resolve","reject","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","_slicedToArray","arr","Array","isArray","_arr","_n","_d","_e","_s","_i","sliceIterator","_createClass","defineProperties","target","props","descriptor","Constructor","protoProps","staticProps","_get","get","property","receiver","desc","getOwnPropertyDescriptor","parent","getter","_toConsumableArray","arr2","from","Worker","_TinyEmitter","worker","instance","_classCallCheck","_this","ReferenceError","_possibleConstructorReturn","_messageId","_messages","Map","_worker","onmessage","_onMessage","bind","_id","Math","ceil","random","subClass","superClass","_inherits","terminate","size","operationName","data","arguments","_this2","transferable","onEvent","res","rej","messageId","set","postMessage","_this3","eventName","_len","args","_key","e","_get2","apply","concat","_e$data","_onEvent","_onResult","success","payload","_messages$get","_messages$get2","delete","_messages$get3","require","_arrayLikeToArray","len","_arrayWithHoles","_arrayWithoutHoles","arrayLikeToArray","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","_defineProperty","_iterableToArray","_iterableToArrayLimit","_nonIterableRest","_nonIterableSpread","arrayWithHoles","iterableToArrayLimit","unsupportedIterableToArray","nonIterableRest","arrayWithoutHoles","iterableToArray","nonIterableSpread","_unsupportedIterableToArray","o","minLen","n","test"],"sourceRoot":""}